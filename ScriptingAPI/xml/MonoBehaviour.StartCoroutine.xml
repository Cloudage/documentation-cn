<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Root LongForm="false">
  <vars>
    <docs_type>ScriptReference</docs_type>
    <lang>zh_CN</lang>
    <unity_version>2018.1</unity_version>
    <current_docs_url>https://docs.unity3d.com/zh_CN/2018.1/</current_docs_url>
    <docs_versions>
      <docs_version version="2019.1">2019.1</docs_version>
      <docs_version version="2018.3">2018.3</docs_version>
      <docs_version version="2018.2">2018.2</docs_version>
      <docs_version version="2018.1">2018.1</docs_version>
      <docs_version version="2017.4">2017.4</docs_version>
      <docs_version version="2017.3">2017.3</docs_version>
      <docs_version version="2017.2">2017.2</docs_version>
      <docs_version version="2017.1">2017.1</docs_version>
      <docs_version version="5.6">560</docs_version>
      <docs_version version="5.5">550</docs_version>
      <docs_version version="5.4">540</docs_version>
      <docs_version version="5.3">530</docs_version>
    </docs_versions>
    <langname>中文</langname>
    <unity_url>https://unity3d.com/</unity_url>
    <current_docs_version version="2018.1">2018.1</current_docs_version>
    <jquery_js_url>../StaticFiles/js/jquery.js</jquery_js_url>
    <jquery_sidebar_url>../StaticFiles/js/jquery.sidebar.min.js</jquery_sidebar_url>
    <custom_js_url>../StaticFiles/js/custom.js</custom_js_url>
    <core_js_url>../StaticFiles/js/core.js</core_js_url>
    <core_css_url>../StaticFiles/css/core.css</core_css_url>
    <custom_css_url>../StaticFiles/css/custom.css</custom_css_url>
    <toc_js_url>docdata/toc.js</toc_js_url>
    <index_js_url>docdata/index.js</index_js_url>
    <langs>
      <lang locale="en">English</lang>
      <lang locale="ja">日本語</lang>
      <lang locale="es">Español</lang>
      <lang locale="kr">한국어</lang>
    </langs>
    <translation>
      <unity_tech>Unity Technologies</unity_tech>
      <unity_url>https://unity3d.com/</unity_url>
      <manual>Manual</manual>
      <scripting_api>Scripting API</scripting_api>
      <learn>Learn</learn>
      <learn_url>https://unity3d.com/learn</learn_url>
      <tutorials>Tutorials</tutorials>
      <tutorials_url>https://unity3d.com/learn</tutorials_url>
      <knowledgebase>Knowledge Base</knowledgebase>
      <knowledgebase_url>https://support.unity3d.com/hc/en-us</knowledgebase_url>
      <live_training>Live Training</live_training>
      <premium_support>Premium Support</premium_support>
      <community>Community</community>
      <community_url>https://unity3d.com/community</community_url>
      <community_answers>Community Answers</community_answers>
      <community_answers_url>https://answers.unity3d.com</community_answers_url>
      <forums>Forums</forums>
      <forums_url>https://forum.unity3d.com</forums_url>
      <answers>Answers</answers>
      <feedback>Feedback</feedback>
      <issuetracker>Issue Tracker</issuetracker>
      <unity_manual>Unity Manual</unity_manual>
      <unity_dash_manual>Unity - Manual</unity_dash_manual>
      <full_table_of_contents>Full table of contents</full_table_of_contents>
      <copyright>Copyright © 2018 Unity Technologies</copyright>
      <unity>Unity</unity>
      <gallery>Gallery</gallery>
      <asset_store>Asset Store</asset_store>
      <assetstore_url>https://unity3d.com/asset-store</assetstore_url>
      <buy>Buy</buy>
      <buy_url>https://store.unity3d.com</buy_url>
      <download>Download</download>
      <download_url>https://unity3d.com/unity/download</download_url>
      <language>Language</language>
      <previous>Previous</previous>
      <next>Next</next>
      <switch_to_manual>Switch to Manual</switch_to_manual>
      <switch_to_scriptref>Switch to Scripting Reference</switch_to_scriptref>
      <docs_url>https://docs.unity3d.com</docs_url>
      <help_trans>Help translating this page</help_trans>
      <search_placeholder>Search manual...</search_placeholder>
      <search_scripting_placeholder>Search scripting...</search_scripting_placeholder>
      <script_language>Script language</script_language>
      <script_language_body>Select your preferred scripting language. All code snippets will be displayed in this language.</script_language_body>
      <history>History</history>
      <inherits_from>Inherits from:</inherits_from>
      <implements_interfaces>Implements interfaces:</implements_interfaces>
      <suggest_a_change>Suggest a change</suggest_a_change>
      <suggest_success>Success!</suggest_success>
      <suggest_success_body>Thank you for helping us improve the quality of Unity Documentation. Although we cannot accept all submissions, we do read each suggested change from our users and will make updates where applicable.</suggest_success_body>
      <suggest_clone>Close</suggest_clone>
      <suggest_failed>Sumbission failed</suggest_failed>
      <suggest_failed_body>For some reason your suggested change could not be submitted. Please &lt;a&gt;try again&lt;/a&gt; in a few minutes. And thank you for taking the time to help us improve the quality of Unity Documentation.</suggest_failed_body>
      <suggest_name>Your name</suggest_name>
      <suggest_email>Your email</suggest_email>
      <suggest_body>Suggestion</suggest_body>
      <suggest_submit>Submit suggestion</suggest_submit>
      <suggest_cancel>Cancel</suggest_cancel>
      <parameters>Parameters</parameters>
      <returns>Returns</returns>
      <description>Description</description>
      <static_variables>Static Variables</static_variables>
      <variables>Variables</variables>
      <constructors>Constructors</constructors>
      <public_functions>Public Functions</public_functions>
      <protected_functions>Protected Functions</protected_functions>
      <static_functions>Static Functions</static_functions>
      <operators>Operators</operators>
      <messages>Messages</messages>
      <delegates>Delegates</delegates>
      <events>Events</events>
      <inherited_members>Inherited members</inherited_members>
      <intro>欢迎使用 Unity Scripting Reference（脚本引用）！</intro>
      <intro_body_1>文档的这部分包含 Unity 提供的脚本 API 的详细信息。要使用这些信息，您应该了解 Unity 中脚本编写的基本理论和实践。我们使用手册的&lt;a href="../Manual/ScriptingSection.html"&gt; Scripting（脚本）部分&lt;/a&gt;对此进行了解释。</intro_body_1>
      <intro_body_2>脚本引用文档是根据脚本可用的类建立的，同时会描述这些类的方法、属性以及任何与它们的用法相关的信息。</intro_body_2>
      <intro_body_3>这些页面配有大量的示例代码，您可以将这些示例代码用于任何目的，而无需说明源自 Unity。此外，您可以使用每个页面顶部的菜单以 &lt;b&gt;C#&lt;/b&gt; 或 &lt;b&gt;JavaScript&lt;/b&gt; 查看示例代码。请注意，无论使用哪种编程语言，API 都是相同的，所以编程语言的选择完全取决于您的喜好。</intro_body_3>
      <intro_body_4>API 按其所属的 namespace 进行分组，可以从左侧的侧栏中选择。对于大多数用户，&lt;b&gt;UnityEngine&lt;/b&gt; 部分将是主要的调用端口。</intro_body_4>
      <classes>Classes</classes>
      <enumerations>Enumerations</enumerations>
      <attributes>Attributes</attributes>
      <api_histroy>API History</api_histroy>
      <api_histroy_body>Overview of additions to (and removals from) Unity's scripting API in each version.</api_histroy_body>
      <api_histroy_name>Name</api_histroy_name>
      <api_histroy_type>Type</api_histroy_type>
      <api_histroy_namespace>Namespace</api_histroy_namespace>
      <api_histroy_status>Status</api_histroy_status>
      <api_histroy_version>Version</api_histroy_version>
      <api_histroy_added>added</api_histroy_added>
      <api_histroy_obsolete>obsolete</api_histroy_obsolete>
      <api_histroy_removed>removed</api_histroy_removed>
      <known_issues>
        <p>这里描述的内容与实际不符？它可能是<b>已知问题</b>。请在 Issue Tracker（<a href="https://issuetracker.unity3d.com">issuetracker.unity3d.com</a>）中查看。</p>
      </known_issues>
      <rate_content>这个页面中的信息对您有帮助吗？请为它打分：</rate_content>
      <rate_thanks>Thanks for rating this page!</rate_thanks>
      <report_problem>报告此页面中的问题</report_problem>
      <problem_type>What kind of problem would you like to report?</problem_type>
      <problem_needcode>This page needs code samples</problem_needcode>
      <problem_code>Code samples do not work</problem_code>
      <problem_missing>Information is missing</problem_missing>
      <problem_incorrect>Information is incorrect</problem_incorrect>
      <problem_unclear>Information is unclear or confusing</problem_unclear>
      <problem_language>There is a spelling/grammar error on this page</problem_language>
      <problem_other>Something else</problem_other>
      <problem_thanks>Thanks for letting us know! This page has been marked for review based on your feedback.</problem_thanks>
      <problem_more_info>If you have time, you can provide more information to help us fix the problem faster.</problem_more_info>
      <problem_more_info_link>Provide more information</problem_more_info_link>
      <problem_needcode_form_description>You've told us this page needs code samples. If you'd like to help us further, you could provide a code sample, or tell us about what kind of code sample you'd like to see:</problem_needcode_form_description>
      <problem_code_form_description>You've told us there are code samples on this page which don't work. If you know how to fix it, or have something better we could use instead, please let us know:</problem_code_form_description>
      <problem_missing_form_description>You've told us there is information missing from this page. Please tell us more about what's missing:</problem_missing_form_description>
      <problem_incorrect_form_description>You've told us there is incorrect information on this page. If you know what we should change to make it correct, please tell us:</problem_incorrect_form_description>
      <problem_unclear_form_description>You've told us this page has unclear or confusing information. Please tell us more about what you found unclear or confusing, or let us know how we could make it clearer:</problem_unclear_form_description>
      <problem_language_form_description>You've told us there is a spelling or grammar error on this page. Please tell us what's wrong:</problem_language_form_description>
      <problem_other_form_description>You've told us this page has a problem. Please tell us more about what's wrong:</problem_other_form_description>
      <problem_more_info_thanks>Thanks for helping to make the Unity documentation better!</problem_more_info_thanks>
      <leave_feedback>Leave feedback</leave_feedback>
    </translation>
  </vars>
  <Model isComponent="true">
    <ParentClass>MonoBehaviour</ParentClass>
    <Section>
      <Signature>
        <Declaration name="StartCoroutine" type="function" modifiers="public" Obsolete="" />
        <ParamElement name="routine" type="IEnumerator" />
        <ReturnType hasLink="true">Coroutine</ReturnType>
      </Signature>
      <Summary><![CDATA[启动一个协同程序。]]></Summary>
      <ParamWithDoc>
        <name>routine</name>
        <doc><![CDATA[]]></doc>
      </ParamWithDoc>
      <Description><![CDATA[可以使用 yield 语句在任意执行点暂停协同程序的执行。
yield 返回值指定何时恢复该协同程序。
当在多个帧上对行为建模时，协同程序是您的理想选择。
协同程序几乎没有性能开销。
StartCoroutine 函数始终立即返回，但您可以 yield 结果。
这将等待该协同程序执行完毕。无法保证协同程序按其启动顺序结束，
即使它们在同一帧中完成也是如此。]]><br /><br /><![CDATA[使用 JavaScript 时，没有必要使用 StartCoroutine，编译器会为您执行该操作。
编写 C# 代码时，必须手动调用 StartCoroutine。]]></Description>
      <Example nocheck="false" convertexample="true">
        <JavaScript><![CDATA[no example available in JavaScript]]></JavaScript>
        <CSharp><![CDATA[
using UnityEngine;
using System.Collections;]]><br /><br /><![CDATA[// In this example we show how to invoke a coroutine and continue executing
// the function in parallel.]]><br /><br /><![CDATA[public class ExampleClass : ]]><link ref="MonoBehaviour">MonoBehaviour</link><![CDATA[
{
    // In this example we show how to invoke a coroutine and
    // continue executing the function in parallel.]]><br /><br /><![CDATA[    private IEnumerator coroutine;]]><br /><br /><![CDATA[    void Start()
    {
        // - After 0 seconds, prints "Starting 0.0"
        // - After 0 seconds, prints "Before WaitAndPrint Finishes 0.0"
        // - After 2 seconds, prints "WaitAndPrint 2.0"
        print("Starting " + ]]><link ref="Time-time">Time.time</link><![CDATA[);]]><br /><br /><![CDATA[        // Start function WaitAndPrint as a coroutine.]]><br /><br /><![CDATA[        coroutine = WaitAndPrint(2.0f);
        StartCoroutine(coroutine);]]><br /><br /><![CDATA[        print("Before WaitAndPrint Finishes " + ]]><link ref="Time-time">Time.time</link><![CDATA[);
    }]]><br /><br /><![CDATA[    // every 2 seconds perform the print()
    private IEnumerator WaitAndPrint(float waitTime)
    {
        while (true)
        {
            yield return new ]]><link ref="WaitForSeconds">WaitForSeconds</link><![CDATA[(waitTime);
            print("WaitAndPrint " + ]]><link ref="Time-time">Time.time</link><![CDATA[);
        }
    }
}
]]></CSharp>
      </Example>
      <Description><![CDATA[另一个示例：]]></Description>
      <Example nocheck="false" convertexample="true">
        <JavaScript><![CDATA[no example available in JavaScript]]></JavaScript>
        <CSharp><![CDATA[
// In this example we show how to invoke a coroutine and wait until it
// is completed]]><br /><br /><![CDATA[using UnityEngine;
using System.Collections;]]><br /><br /><![CDATA[public class ExampleClass : ]]><link ref="MonoBehaviour">MonoBehaviour</link><![CDATA[
{
    IEnumerator Start()
    {
        // - After 0 seconds, prints "Starting 0.0"
        // - After 2 seconds, prints "WaitAndPrint 2.0"
        // - After 2 seconds, prints "Done 2.0"
        print("Starting " + ]]><link ref="Time-time">Time.time</link><![CDATA[);]]><br /><br /><![CDATA[        // Start function WaitAndPrint as a coroutine. And wait until it is completed.
        // the same as yield WaitAndPrint(2.0);
        yield return StartCoroutine(WaitAndPrint(2.0F));
        print("Done " + ]]><link ref="Time-time">Time.time</link><![CDATA[);
    }]]><br /><br /><![CDATA[    // suspend execution for waitTime seconds
    IEnumerator WaitAndPrint(float waitTime)
    {
        yield return new ]]><link ref="WaitForSeconds">WaitForSeconds</link><![CDATA[(waitTime);
        print("WaitAndPrint " + ]]><link ref="Time-time">Time.time</link><![CDATA[);
    }
}
]]></CSharp>
      </Example>
    </Section>
    <Section>
      <Signature>
        <Declaration name="StartCoroutine" type="function" modifiers="public" Obsolete="" />
        <ParamElement name="methodName" type="string" />
        <ParamElement name="value" type="object" default="null" />
        <ReturnType hasLink="true">Coroutine</ReturnType>
      </Signature>
      <Summary><![CDATA[启动一个名为 ]]><varname>methodName</varname><![CDATA[ 的协同程序。]]></Summary>
      <ParamWithDoc>
        <name>methodName</name>
        <doc><![CDATA[]]></doc>
      </ParamWithDoc>
      <ParamWithDoc>
        <name>value</name>
        <doc><![CDATA[]]></doc>
      </ParamWithDoc>
      <Description><![CDATA[在大多数情况下，您应该使用上面的 StartCoroutine 变体。
但是，使用字符串方法名称的 StartCoroutine 让您能够使用具有特定方法名称的 ]]><link ref="MonoBehaviour.StopCoroutine">StopCoroutine</link><![CDATA[。
缺点是字符串版本在启动协同程序时的运行时开销更高，并且您只能传递一个参数。]]></Description>
      <Example nocheck="false" convertexample="true">
        <JavaScript><![CDATA[no example available in JavaScript]]></JavaScript>
        <CSharp><![CDATA[
// In this example we show how to invoke a coroutine using a string name and stop it.]]><br /><br /><![CDATA[using UnityEngine;
using System.Collections;]]><br /><br /><![CDATA[public class ExampleClass : ]]><link ref="MonoBehaviour">MonoBehaviour</link><![CDATA[
{
    IEnumerator Start()
    {
        StartCoroutine("DoSomething", 2.0F);
        yield return new ]]><link ref="WaitForSeconds">WaitForSeconds</link><![CDATA[(1);
        StopCoroutine("DoSomething");
    }]]><br /><br /><![CDATA[    IEnumerator DoSomething(float someParameter)
    {
        while (true)
        {
            print("DoSomething Loop");]]><br /><br /><![CDATA[            // Yield execution of this coroutine and return to the main loop until next frame
            yield return null;
        }
    }
}
]]></CSharp>
      </Example>
    </Section>
    <Section>
      <Signature>
        <Declaration name="StartCoroutine(Coroutine)" type="csnone" />
      </Signature>
      <Summary><![CDATA[启动一个名为 ]]><varname>coroutine</varname><![CDATA[ 的协同程序。]]></Summary>
      <ParamWithDoc>
        <name>coroutine</name>
        <doc><![CDATA[所创建的协同程序的名称。]]></doc>
      </ParamWithDoc>
      <Description><![CDATA[
                    创建一个协同程序。可以使用任何协同程序名称。
                    StartCoroutine 函数立即终止，但是，它创建的协同程序仍按预期运行。
                    创建的协同程序可以启动另一个协同程序。
                    这两个协同程序能以多种方式一同运行。
                    例如，两个协同程序可以并行运行。
                    或者，一个协同程序可以停止另一个协同程序，但自己继续运行。
                    下面的脚本示例演示一个协同程序在启动另一个协同程序后暂停运行。
                    当第二个协同程序完成时，重新启动第一个协同程序。
                ]]></Description>
      <Example nocheck="false" convertexample="true">
        <JavaScript><![CDATA[no example available in JavaScript]]></JavaScript>
        <CSharp><![CDATA[
using System.Collections;
using System.Collections.Generic;
using UnityEngine;]]><br /><br /><![CDATA[public class ExampleClass : ]]><link ref="MonoBehaviour">MonoBehaviour</link><![CDATA[
{
    void Start()
    {
        StartCoroutine(coroutineA());
    }]]><br /><br /><![CDATA[    IEnumerator coroutineA()
    {
        // wait for 1 second
        ]]><link ref="Debug.Log">Debug.Log</link><![CDATA[("coroutineA created");
        yield return new ]]><link ref="WaitForSeconds">WaitForSeconds</link><![CDATA[(1.0f);
        yield return StartCoroutine(coroutineB());
        ]]><link ref="Debug.Log">Debug.Log</link><![CDATA[("coroutineA running again");
    }]]><br /><br /><![CDATA[    IEnumerator coroutineB()
    {
        ]]><link ref="Debug.Log">Debug.Log</link><![CDATA[("coroutineB created");
        yield return new ]]><link ref="WaitForSeconds">WaitForSeconds</link><![CDATA[(2.5f);
        ]]><link ref="Debug.Log">Debug.Log</link><![CDATA[("coroutineB enables coroutineA to run");
    }
}
]]></CSharp>
      </Example>
    </Section>
  </Model>
</Root>
