<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Root LongForm="false">
  <vars>
    <docs_type>ScriptReference</docs_type>
    <lang>zh_CN</lang>
    <unity_version>2018.1</unity_version>
    <current_docs_url>https://docs.unity3d.com/zh_CN/2018.1/</current_docs_url>
    <docs_versions>
      <docs_version version="2019.1">2019.1</docs_version>
      <docs_version version="2018.3">2018.3</docs_version>
      <docs_version version="2018.2">2018.2</docs_version>
      <docs_version version="2018.1">2018.1</docs_version>
      <docs_version version="2017.4">2017.4</docs_version>
      <docs_version version="2017.3">2017.3</docs_version>
      <docs_version version="2017.2">2017.2</docs_version>
      <docs_version version="2017.1">2017.1</docs_version>
      <docs_version version="5.6">560</docs_version>
      <docs_version version="5.5">550</docs_version>
      <docs_version version="5.4">540</docs_version>
      <docs_version version="5.3">530</docs_version>
    </docs_versions>
    <langname>中文</langname>
    <unity_url>https://unity3d.com/</unity_url>
    <current_docs_version version="2018.1">2018.1</current_docs_version>
    <jquery_js_url>../StaticFiles/js/jquery.js</jquery_js_url>
    <jquery_sidebar_url>../StaticFiles/js/jquery.sidebar.min.js</jquery_sidebar_url>
    <custom_js_url>../StaticFiles/js/custom.js</custom_js_url>
    <core_js_url>../StaticFiles/js/core.js</core_js_url>
    <core_css_url>../StaticFiles/css/core.css</core_css_url>
    <custom_css_url>../StaticFiles/css/custom.css</custom_css_url>
    <toc_js_url>docdata/toc.js</toc_js_url>
    <index_js_url>docdata/index.js</index_js_url>
    <langs>
      <lang locale="en">English</lang>
      <lang locale="ja">日本語</lang>
      <lang locale="es">Español</lang>
      <lang locale="kr">한국어</lang>
    </langs>
    <translation>
      <unity_tech>Unity Technologies</unity_tech>
      <unity_url>https://unity3d.com/</unity_url>
      <manual>Manual</manual>
      <scripting_api>Scripting API</scripting_api>
      <learn>Learn</learn>
      <learn_url>https://unity3d.com/learn</learn_url>
      <tutorials>Tutorials</tutorials>
      <tutorials_url>https://unity3d.com/learn</tutorials_url>
      <knowledgebase>Knowledge Base</knowledgebase>
      <knowledgebase_url>https://support.unity3d.com/hc/en-us</knowledgebase_url>
      <live_training>Live Training</live_training>
      <premium_support>Premium Support</premium_support>
      <community>Community</community>
      <community_url>https://unity3d.com/community</community_url>
      <community_answers>Community Answers</community_answers>
      <community_answers_url>https://answers.unity3d.com</community_answers_url>
      <forums>Forums</forums>
      <forums_url>https://forum.unity3d.com</forums_url>
      <answers>Answers</answers>
      <feedback>Feedback</feedback>
      <issuetracker>Issue Tracker</issuetracker>
      <unity_manual>Unity Manual</unity_manual>
      <unity_dash_manual>Unity - Manual</unity_dash_manual>
      <full_table_of_contents>Full table of contents</full_table_of_contents>
      <copyright>Copyright © 2018 Unity Technologies</copyright>
      <unity>Unity</unity>
      <gallery>Gallery</gallery>
      <asset_store>Asset Store</asset_store>
      <assetstore_url>https://unity3d.com/asset-store</assetstore_url>
      <buy>Buy</buy>
      <buy_url>https://store.unity3d.com</buy_url>
      <download>Download</download>
      <download_url>https://unity3d.com/unity/download</download_url>
      <language>Language</language>
      <previous>Previous</previous>
      <next>Next</next>
      <switch_to_manual>Switch to Manual</switch_to_manual>
      <switch_to_scriptref>Switch to Scripting Reference</switch_to_scriptref>
      <docs_url>https://docs.unity3d.com</docs_url>
      <help_trans>Help translating this page</help_trans>
      <search_placeholder>Search manual...</search_placeholder>
      <search_scripting_placeholder>Search scripting...</search_scripting_placeholder>
      <script_language>Script language</script_language>
      <script_language_body>Select your preferred scripting language. All code snippets will be displayed in this language.</script_language_body>
      <history>History</history>
      <inherits_from>Inherits from:</inherits_from>
      <implements_interfaces>Implements interfaces:</implements_interfaces>
      <suggest_a_change>Suggest a change</suggest_a_change>
      <suggest_success>Success!</suggest_success>
      <suggest_success_body>Thank you for helping us improve the quality of Unity Documentation. Although we cannot accept all submissions, we do read each suggested change from our users and will make updates where applicable.</suggest_success_body>
      <suggest_clone>Close</suggest_clone>
      <suggest_failed>Sumbission failed</suggest_failed>
      <suggest_failed_body>For some reason your suggested change could not be submitted. Please &lt;a&gt;try again&lt;/a&gt; in a few minutes. And thank you for taking the time to help us improve the quality of Unity Documentation.</suggest_failed_body>
      <suggest_name>Your name</suggest_name>
      <suggest_email>Your email</suggest_email>
      <suggest_body>Suggestion</suggest_body>
      <suggest_submit>Submit suggestion</suggest_submit>
      <suggest_cancel>Cancel</suggest_cancel>
      <parameters>Parameters</parameters>
      <returns>Returns</returns>
      <description>Description</description>
      <static_variables>Static Variables</static_variables>
      <variables>Variables</variables>
      <constructors>Constructors</constructors>
      <public_functions>Public Functions</public_functions>
      <protected_functions>Protected Functions</protected_functions>
      <static_functions>Static Functions</static_functions>
      <operators>Operators</operators>
      <messages>Messages</messages>
      <delegates>Delegates</delegates>
      <events>Events</events>
      <inherited_members>Inherited members</inherited_members>
      <intro>欢迎使用 Unity Scripting Reference（脚本引用）！</intro>
      <intro_body_1>文档的这部分包含 Unity 提供的脚本 API 的详细信息。要使用这些信息，您应该了解 Unity 中脚本编写的基本理论和实践。我们使用手册的&lt;a href="../Manual/ScriptingSection.html"&gt; Scripting（脚本）部分&lt;/a&gt;对此进行了解释。</intro_body_1>
      <intro_body_2>脚本引用文档是根据脚本可用的类建立的，同时会描述这些类的方法、属性以及任何与它们的用法相关的信息。</intro_body_2>
      <intro_body_3>这些页面配有大量的示例代码，您可以将这些示例代码用于任何目的，而无需说明源自 Unity。此外，您可以使用每个页面顶部的菜单以 &lt;b&gt;C#&lt;/b&gt; 或 &lt;b&gt;JavaScript&lt;/b&gt; 查看示例代码。请注意，无论使用哪种编程语言，API 都是相同的，所以编程语言的选择完全取决于您的喜好。</intro_body_3>
      <intro_body_4>API 按其所属的 namespace 进行分组，可以从左侧的侧栏中选择。对于大多数用户，&lt;b&gt;UnityEngine&lt;/b&gt; 部分将是主要的调用端口。</intro_body_4>
      <classes>Classes</classes>
      <enumerations>Enumerations</enumerations>
      <attributes>Attributes</attributes>
      <api_histroy>API History</api_histroy>
      <api_histroy_body>Overview of additions to (and removals from) Unity's scripting API in each version.</api_histroy_body>
      <api_histroy_name>Name</api_histroy_name>
      <api_histroy_type>Type</api_histroy_type>
      <api_histroy_namespace>Namespace</api_histroy_namespace>
      <api_histroy_status>Status</api_histroy_status>
      <api_histroy_version>Version</api_histroy_version>
      <api_histroy_added>added</api_histroy_added>
      <api_histroy_obsolete>obsolete</api_histroy_obsolete>
      <api_histroy_removed>removed</api_histroy_removed>
      <known_issues>
        <p>这里描述的内容与实际不符？它可能是<b>已知问题</b>。请在 Issue Tracker（<a href="https://issuetracker.unity3d.com">issuetracker.unity3d.com</a>）中查看。</p>
      </known_issues>
      <rate_content>这个页面中的信息对您有帮助吗？请为它打分：</rate_content>
      <rate_thanks>Thanks for rating this page!</rate_thanks>
      <report_problem>报告此页面中的问题</report_problem>
      <problem_type>What kind of problem would you like to report?</problem_type>
      <problem_needcode>This page needs code samples</problem_needcode>
      <problem_code>Code samples do not work</problem_code>
      <problem_missing>Information is missing</problem_missing>
      <problem_incorrect>Information is incorrect</problem_incorrect>
      <problem_unclear>Information is unclear or confusing</problem_unclear>
      <problem_language>There is a spelling/grammar error on this page</problem_language>
      <problem_other>Something else</problem_other>
      <problem_thanks>Thanks for letting us know! This page has been marked for review based on your feedback.</problem_thanks>
      <problem_more_info>If you have time, you can provide more information to help us fix the problem faster.</problem_more_info>
      <problem_more_info_link>Provide more information</problem_more_info_link>
      <problem_needcode_form_description>You've told us this page needs code samples. If you'd like to help us further, you could provide a code sample, or tell us about what kind of code sample you'd like to see:</problem_needcode_form_description>
      <problem_code_form_description>You've told us there are code samples on this page which don't work. If you know how to fix it, or have something better we could use instead, please let us know:</problem_code_form_description>
      <problem_missing_form_description>You've told us there is information missing from this page. Please tell us more about what's missing:</problem_missing_form_description>
      <problem_incorrect_form_description>You've told us there is incorrect information on this page. If you know what we should change to make it correct, please tell us:</problem_incorrect_form_description>
      <problem_unclear_form_description>You've told us this page has unclear or confusing information. Please tell us more about what you found unclear or confusing, or let us know how we could make it clearer:</problem_unclear_form_description>
      <problem_language_form_description>You've told us there is a spelling or grammar error on this page. Please tell us what's wrong:</problem_language_form_description>
      <problem_other_form_description>You've told us this page has a problem. Please tell us more about what's wrong:</problem_other_form_description>
      <problem_more_info_thanks>Thanks for helping to make the Unity documentation better!</problem_more_info_thanks>
      <leave_feedback>Leave feedback</leave_feedback>
    </translation>
  </vars>
  <Model isComponent="true" Namespace="UnityEngine">
    <StaticVars />
    <Vars>
      <member id="Animator-angularVelocity">
        <name>angularVelocity</name>
        <summary><![CDATA[获取上一个已计算帧的化身角速率。]]></summary>
      </member>
      <member id="Animator-applyRootMotion">
        <name>applyRootMotion</name>
        <summary><![CDATA[是否应该应用根运动？]]></summary>
      </member>
      <member id="Animator-avatar">
        <name>avatar</name>
        <summary><![CDATA[获取/设置当前化身。]]></summary>
      </member>
      <member id="Animator-bodyPosition">
        <name>bodyPosition</name>
        <summary><![CDATA[身体质心的位置。]]></summary>
      </member>
      <member id="Animator-bodyRotation">
        <name>bodyRotation</name>
        <summary><![CDATA[身体质心的旋转。]]></summary>
      </member>
      <member id="Animator-cullingMode">
        <name>cullingMode</name>
        <summary><![CDATA[控制该动画器组件的剔除。]]></summary>
      </member>
      <member id="Animator-deltaPosition">
        <name>deltaPosition</name>
        <summary><![CDATA[获取上一个已计算帧的化身位置增量。]]></summary>
      </member>
      <member id="Animator-deltaRotation">
        <name>deltaRotation</name>
        <summary><![CDATA[获取上一个已计算帧的化身旋转增量。]]></summary>
      </member>
      <member id="Animator-feetPivotActive">
        <name>feetPivotActive</name>
        <summary><![CDATA[在身体质心与脚轴心之间混合轴心点。]]></summary>
      </member>
      <member id="Animator-fireEvents">
        <name>fireEvents</name>
        <summary><![CDATA[设置动画器是否发送 ]]><link ref="AnimationEvent">AnimationEvent</link><![CDATA[ 类型的事件。]]></summary>
      </member>
      <member id="Animator-gravityWeight">
        <name>gravityWeight</name>
        <summary><![CDATA[基于当前播放动画的当前重力重量。]]></summary>
      </member>
      <member id="Animator-hasBoundPlayables">
        <name>hasBoundPlayables</name>
        <summary><![CDATA[如果动画器分配有任何可播放项，则返回 true。]]></summary>
      </member>
      <member id="Animator-hasRootMotion">
        <name>hasRootMotion</name>
        <summary><![CDATA[如果当前骨架具有根运动，则返回 true。]]></summary>
      </member>
      <member id="Animator-hasTransformHierarchy">
        <name>hasTransformHierarchy</name>
        <summary><![CDATA[如果对象具有变换层级视图，则返回 true。]]></summary>
      </member>
      <member id="Animator-humanScale">
        <name>humanScale</name>
        <summary><![CDATA[返回人形骨架当前化身的缩放（如果骨架是通用的，则默认为 1）。]]></summary>
      </member>
      <member id="Animator-isHuman">
        <name>isHuman</name>
        <summary><![CDATA[如果当前骨架为]]><i>人形角色</i><![CDATA[，返回 true；如果为]]><i>通用</i><![CDATA[，返回 false。]]></summary>
      </member>
      <member id="Animator-isInitialized">
        <name>isInitialized</name>
        <summary><![CDATA[返回动画器是否已成功初始化。]]></summary>
      </member>
      <member id="Animator-isMatchingTarget">
        <name>isMatchingTarget</name>
        <summary><![CDATA[自动匹配是否处于激活状态。]]></summary>
      </member>
      <member id="Animator-isOptimizable">
        <name>isOptimizable</name>
        <summary><![CDATA[如果可以使用 ]]><link ref="AnimatorUtility.OptimizeTransformHierarchy">AnimatorUtility.OptimizeTransformHierarchy</link><![CDATA[ 优化当前骨架，则返回 true。]]></summary>
      </member>
      <member id="Animator-keepAnimatorControllerStateOnDisable">
        <name>keepAnimatorControllerStateOnDisable</name>
        <summary><![CDATA[在 GameObject 处于禁用状态时控制动画器组件的行为。]]></summary>
      </member>
      <member id="Animator-layerCount">
        <name>layerCount</name>
        <summary><![CDATA[返回控制器中的层数。]]></summary>
      </member>
      <member id="Animator-layersAffectMassCenter">
        <name>layersAffectMassCenter</name>
        <summary><![CDATA[附加层影响质心。]]></summary>
      </member>
      <member id="Animator-leftFeetBottomHeight">
        <name>leftFeetBottomHeight</name>
        <summary><![CDATA[获取左脚底部高度。]]></summary>
      </member>
      <member id="Animator-linearVelocityBlending">
        <name>linearVelocityBlending</name>
        <summary><![CDATA[当 linearVelocityBlending 设置为 true 时，根运动速度和角速率将线性混合。]]></summary>
      </member>
      <member id="Animator-parameterCount">
        <name>parameterCount</name>
        <summary><![CDATA[返回控制器中的参数数量。]]></summary>
      </member>
      <member id="Animator-parameters">
        <name>parameters</name>
        <summary><![CDATA[动画器使用的 ]]><link ref="AnimatorControllerParameter">AnimatorControllerParameter</link><![CDATA[ 列表。（只读）]]></summary>
      </member>
      <member id="Animator-pivotPosition">
        <name>pivotPosition</name>
        <summary><![CDATA[获取轴心的当前位置。]]></summary>
      </member>
      <member id="Animator-pivotWeight">
        <name>pivotWeight</name>
        <summary><![CDATA[获取轴心重量。]]></summary>
      </member>
      <member id="Animator-playableGraph">
        <name>playableGraph</name>
        <summary>
          <link ref="Animator">Animator</link><![CDATA[ 创建的 ]]><link ref="Playables.PlayableGraph">PlayableGraph</link><![CDATA[。]]></summary>
      </member>
      <member id="Animator-playbackTime">
        <name>playbackTime</name>
        <summary><![CDATA[设置录制缓冲区中的播放位置。]]></summary>
      </member>
      <member id="Animator-recorderMode">
        <name>recorderMode</name>
        <summary><![CDATA[获取动画器的录制器的模式。]]></summary>
      </member>
      <member id="Animator-recorderStartTime">
        <name>recorderStartTime</name>
        <summary><![CDATA[相对于调用 ]]><link ref="Animator.StartRecording">StartRecording</link><![CDATA[ 时的帧，缓冲区第一帧的开始时间。]]></summary>
      </member>
      <member id="Animator-recorderStopTime">
        <name>recorderStopTime</name>
        <summary><![CDATA[相对于调用 ]]><link ref="Animator.StartRecording">StartRecording</link><![CDATA[ 的时间，录制的剪辑的结束时间。]]></summary>
      </member>
      <member id="Animator-rightFeetBottomHeight">
        <name>rightFeetBottomHeight</name>
        <summary><![CDATA[获取右脚底部高度。]]></summary>
      </member>
      <member id="Animator-rootPosition">
        <name>rootPosition</name>
        <summary><![CDATA[根位置 - 游戏对象的位置。]]></summary>
      </member>
      <member id="Animator-rootRotation">
        <name>rootRotation</name>
        <summary><![CDATA[根旋转 - 游戏对象的旋转。]]></summary>
      </member>
      <member id="Animator-runtimeAnimatorController">
        <name>runtimeAnimatorController</name>
        <summary><![CDATA[控制动画器的 AnimatorController 的运行时表示。]]></summary>
      </member>
      <member id="Animator-speed">
        <name>speed</name>
        <summary><![CDATA[动画器的播放速度。1 为正常播放速度。]]></summary>
      </member>
      <member id="Animator-stabilizeFeet">
        <name>stabilizeFeet</name>
        <summary><![CDATA[在过渡和混合期间自动使脚稳定。]]></summary>
      </member>
      <member id="Animator-targetPosition">
        <name>targetPosition</name>
        <summary><![CDATA[返回 ]]><link ref="Animator.SetTarget">SetTarget</link><![CDATA[ 指定的目标的位置。]]></summary>
      </member>
      <member id="Animator-targetRotation">
        <name>targetRotation</name>
        <summary><![CDATA[返回 ]]><link ref="Animator.SetTarget">SetTarget</link><![CDATA[ 指定的目标的旋转。]]></summary>
      </member>
      <member id="Animator-updateMode">
        <name>updateMode</name>
        <summary><![CDATA[指定 ]]><link ref="Animator">Animator</link><![CDATA[ 的更新模式。]]></summary>
      </member>
      <member id="Animator-velocity">
        <name>velocity</name>
        <summary><![CDATA[获取上一个已计算帧的化身速度。]]></summary>
      </member>
    </Vars>
    <ProtVars />
    <StaticProtVars />
    <Constructors />
    <MemberFunctions>
      <member id="Animator.ApplyBuiltinRootMotion">
        <name>ApplyBuiltinRootMotion</name>
        <summary><![CDATA[应用默认的根运动。]]></summary>
      </member>
      <member id="Animator.CrossFade">
        <name>CrossFade</name>
        <summary><![CDATA[使用标准化时间创建从当前状态到任何其他状态的淡入淡出效果。]]></summary>
      </member>
      <member id="Animator.CrossFadeInFixedTime">
        <name>CrossFadeInFixedTime</name>
        <summary><![CDATA[使用以秒为单位的时间创建从当前状态到任何其他状态的淡入淡出效果。]]></summary>
      </member>
      <member id="Animator.GetAnimatorTransitionInfo">
        <name>GetAnimatorTransitionInfo</name>
        <summary><![CDATA[返回 ]]><link ref="AnimatorTransitionInfo">AnimatorTransitionInfo</link><![CDATA[，其中包含有关当前过渡的信息。]]></summary>
      </member>
      <member id="Animator.GetBehaviour">
        <name>GetBehaviour</name>
        <summary><![CDATA[返回匹配类型 ]]><varname>T</varname><![CDATA[ 或从 ]]><varname>T</varname><![CDATA[ 派生的第一个 ]]><link ref="StateMachineBehaviour">StateMachineBehaviour</link><![CDATA[。如果未找到，则返回 null。]]></summary>
      </member>
      <member id="Animator.GetBehaviours">
        <name>GetBehaviours</name>
        <summary><![CDATA[返回匹配类型 ]]><varname>T</varname><![CDATA[ 或从 ]]><varname>T</varname><![CDATA[ 派生的所有 ]]><link ref="StateMachineBehaviour">StateMachineBehaviour</link><![CDATA[。如果未找到，则返回 null。]]></summary>
      </member>
      <member id="Animator.GetBoneTransform">
        <name>GetBoneTransform</name>
        <summary><![CDATA[返回映射到该人形骨骼 ID 的 ]]><link ref="Transform">Transform</link><![CDATA[。]]></summary>
      </member>
      <member id="Animator.GetBool">
        <name>GetBool</name>
        <summary><![CDATA[返回给定布尔参数的值。]]></summary>
      </member>
      <member id="Animator.GetCurrentAnimatorClipInfo">
        <name>GetCurrentAnimatorClipInfo</name>
        <summary><![CDATA[返回给定层当前状态中所有 ]]><link ref="AnimatorClipInfo">AnimatorClipInfo</link><![CDATA[ 的数组。]]></summary>
      </member>
      <member id="Animator.GetCurrentAnimatorClipInfoCount">
        <name>GetCurrentAnimatorClipInfoCount</name>
        <summary><![CDATA[返回当前状态中 ]]><link ref="AnimatorClipInfo">AnimatorClipInfo</link><![CDATA[ 的数量。]]></summary>
      </member>
      <member id="Animator.GetCurrentAnimatorStateInfo">
        <name>GetCurrentAnimatorStateInfo</name>
        <summary><![CDATA[返回 ]]><link ref="AnimatorStateInfo">AnimatorStateInfo</link><![CDATA[，其中包含有关当前状态的信息。]]></summary>
      </member>
      <member id="Animator.GetFloat">
        <name>GetFloat</name>
        <summary><![CDATA[返回给定 float 参数的值。]]></summary>
      </member>
      <member id="Animator.GetIKHintPosition">
        <name>GetIKHintPosition</name>
        <summary><![CDATA[获取反向动力学提示的位置。]]></summary>
      </member>
      <member id="Animator.GetIKHintPositionWeight">
        <name>GetIKHintPositionWeight</name>
        <summary><![CDATA[获取反向动力学提示的转换权重（0 = 在反向动力学前的原始动画处，1 = 在提示处）。]]></summary>
      </member>
      <member id="Animator.GetIKPosition">
        <name>GetIKPosition</name>
        <summary><![CDATA[获取反向动力学目标的位置。]]></summary>
      </member>
      <member id="Animator.GetIKPositionWeight">
        <name>GetIKPositionWeight</name>
        <summary><![CDATA[获取反向动力学目标的转换权重（0 = 在反向动力学前的原始动画处，1 = 在目标处）。]]></summary>
      </member>
      <member id="Animator.GetIKRotation">
        <name>GetIKRotation</name>
        <summary><![CDATA[获取反向动力学目标的旋转。]]></summary>
      </member>
      <member id="Animator.GetIKRotationWeight">
        <name>GetIKRotationWeight</name>
        <summary><![CDATA[获取反向动力学目标的旋转权重（0 = 在反向动力学前旋转，1 = 在反向动力学目标处旋转）。]]></summary>
      </member>
      <member id="Animator.GetInteger">
        <name>GetInteger</name>
        <summary><![CDATA[返回给定整数参数的值。]]></summary>
      </member>
      <member id="Animator.GetLayerIndex">
        <name>GetLayerIndex</name>
        <summary><![CDATA[返回具有给定名称的层的索引。]]></summary>
      </member>
      <member id="Animator.GetLayerName">
        <name>GetLayerName</name>
        <summary><![CDATA[返回层名称。]]></summary>
      </member>
      <member id="Animator.GetLayerWeight">
        <name>GetLayerWeight</name>
        <summary><![CDATA[返回指定索引处层的权重。]]></summary>
      </member>
      <member id="Animator.GetNextAnimatorClipInfo">
        <name>GetNextAnimatorClipInfo</name>
        <summary><![CDATA[返回给定层下一个状态中所有 ]]><link ref="AnimatorClipInfo">AnimatorClipInfo</link><![CDATA[ 的数组。]]></summary>
      </member>
      <member id="Animator.GetNextAnimatorClipInfoCount">
        <name>GetNextAnimatorClipInfoCount</name>
        <summary><![CDATA[返回下一个状态中 ]]><link ref="AnimatorClipInfo">AnimatorClipInfo</link><![CDATA[ 的数量。]]></summary>
      </member>
      <member id="Animator.GetNextAnimatorStateInfo">
        <name>GetNextAnimatorStateInfo</name>
        <summary><![CDATA[返回 ]]><link ref="AnimatorStateInfo">AnimatorStateInfo</link><![CDATA[，其中包含有关下一个状态的信息。]]></summary>
      </member>
      <member id="Animator.GetParameter">
        <name>GetParameter</name>
        <summary><![CDATA[请参阅 ]]><link ref="Animations.AnimatorController-parameters">AnimatorController.parameters</link><![CDATA[。]]></summary>
      </member>
      <member id="Animator.HasState">
        <name>HasState</name>
        <summary><![CDATA[如果该层中存在状态，返回 true，否则返回 false。]]></summary>
      </member>
      <member id="Animator.InterruptMatchTarget">
        <name>InterruptMatchTarget</name>
        <summary><![CDATA[中断自动目标匹配。]]></summary>
      </member>
      <member id="Animator.IsInTransition">
        <name>IsInTransition</name>
        <summary><![CDATA[如果给定层上存在过渡，返回 true，否则返回 false。]]></summary>
      </member>
      <member id="Animator.IsParameterControlledByCurve">
        <name>IsParameterControlledByCurve</name>
        <summary><![CDATA[如果参数由曲线控制，返回 true，否则返回 false。]]></summary>
      </member>
      <member id="Animator.MatchTarget">
        <name>MatchTarget</name>
        <summary><![CDATA[自动调整 ]]><varname>GameObject</varname><![CDATA[ 的位置和旋转。]]></summary>
      </member>
      <member id="Animator.Play">
        <name>Play</name>
        <summary><![CDATA[播放一个状态。]]></summary>
      </member>
      <member id="Animator.PlayInFixedTime">
        <name>PlayInFixedTime</name>
        <summary><![CDATA[播放一个状态。]]></summary>
      </member>
      <member id="Animator.Rebind">
        <name>Rebind</name>
        <summary><![CDATA[将所有动画属性和网格数据与动画器重新绑定。]]></summary>
      </member>
      <member id="Animator.ResetTrigger">
        <name>ResetTrigger</name>
        <summary><![CDATA[重置给定触发器参数的值。]]></summary>
      </member>
      <member id="Animator.SetBoneLocalRotation">
        <name>SetBoneLocalRotation</name>
        <summary><![CDATA[在反向动力学通道期间设置人形骨骼的局部旋转。]]></summary>
      </member>
      <member id="Animator.SetBool">
        <name>SetBool</name>
        <summary><![CDATA[设置给定布尔参数的值。]]></summary>
      </member>
      <member id="Animator.SetFloat">
        <name>SetFloat</name>
        <summary><![CDATA[将浮点值发送到动画器以影响过渡。]]></summary>
      </member>
      <member id="Animator.SetIKHintPosition">
        <name>SetIKHintPosition</name>
        <summary><![CDATA[设置反向动力学提示的位置。]]></summary>
      </member>
      <member id="Animator.SetIKHintPositionWeight">
        <name>SetIKHintPositionWeight</name>
        <summary><![CDATA[设置反向动力学提示的转换权重（0 = 在反向动力学前的原始动画处，1 = 在提示处）。]]></summary>
      </member>
      <member id="Animator.SetIKPosition">
        <name>SetIKPosition</name>
        <summary><![CDATA[设置反向动力学目标的位置。]]></summary>
      </member>
      <member id="Animator.SetIKPositionWeight">
        <name>SetIKPositionWeight</name>
        <summary><![CDATA[设置反向动力学目标的转换权重（0 = 在反向动力学前的原始动画处，1 = 在目标处）。]]></summary>
      </member>
      <member id="Animator.SetIKRotation">
        <name>SetIKRotation</name>
        <summary><![CDATA[设置反向动力学目标的旋转。]]></summary>
      </member>
      <member id="Animator.SetIKRotationWeight">
        <name>SetIKRotationWeight</name>
        <summary><![CDATA[设置反向动力学目标的旋转权重（0 = 在反向动力学前旋转，1 = 在反向动力学目标处旋转）。]]></summary>
      </member>
      <member id="Animator.SetInteger">
        <name>SetInteger</name>
        <summary><![CDATA[设置给定整数参数的值。]]></summary>
      </member>
      <member id="Animator.SetLayerWeight">
        <name>SetLayerWeight</name>
        <summary><![CDATA[设置给定索引处层的权重。]]></summary>
      </member>
      <member id="Animator.SetLookAtPosition">
        <name>SetLookAtPosition</name>
        <summary><![CDATA[设置 LookAt 位置。]]></summary>
      </member>
      <member id="Animator.SetLookAtWeight">
        <name>SetLookAtWeight</name>
        <summary><![CDATA[设置 LookAt 权重。]]></summary>
      </member>
      <member id="Animator.SetTarget">
        <name>SetTarget</name>
        <summary><![CDATA[为当前状态设置 AvatarTarget 和 targetNormalizedTime。]]></summary>
      </member>
      <member id="Animator.SetTrigger">
        <name>SetTrigger</name>
        <summary><![CDATA[设置给定触发器参数的值。]]></summary>
      </member>
      <member id="Animator.StartPlayback">
        <name>StartPlayback</name>
        <summary><![CDATA[将动画器设置为播放模式。]]></summary>
      </member>
      <member id="Animator.StartRecording">
        <name>StartRecording</name>
        <summary><![CDATA[将动画器设置为录制模式，并分配大小为 ]]><i>frameCount</i><![CDATA[ 的循环缓冲区。]]></summary>
      </member>
      <member id="Animator.StopPlayback">
        <name>StopPlayback</name>
        <summary><![CDATA[停止动画器播放模式。停止播放后，化身恢复为游戏逻辑控制。]]></summary>
      </member>
      <member id="Animator.StopRecording">
        <name>StopRecording</name>
        <summary><![CDATA[停止动画器录制模式。]]></summary>
      </member>
      <member id="Animator.Update">
        <name>Update</name>
        <summary><![CDATA[根据 deltaTime 计算动画器。]]></summary>
      </member>
    </MemberFunctions>
    <ProtectedFunctions />
    <StaticFunctions>
      <member id="Animator.StringToHash">
        <name>StringToHash</name>
        <summary><![CDATA[从字符串生成参数 ID。]]></summary>
      </member>
    </StaticFunctions>
    <Operators />
    <Messages />
    <Events />
    <Delegates />
    <Section>
      <Signature>
        <Declaration name="Animator" type="class" namespace="UnityEngine" modifiers="public" Obsolete="" />
        <ReturnType />
      </Signature>
      <Summary><![CDATA[用于控制 Mecanim 动画系统的接口。]]></Summary>
    </Section>
    <BaseType id="Behaviour">
      <StaticVars />
      <Vars>
        <member id="Behaviour-enabled">
          <name>enabled</name>
          <summary><![CDATA[启用的 Behaviour 可更新，禁用的 Behaviour 不可更新。]]></summary>
        </member>
        <member id="Behaviour-isActiveAndEnabled">
          <name>isActiveAndEnabled</name>
          <summary><![CDATA[已调用启用的 Behaviour。]]></summary>
        </member>
        <member id="Component-gameObject">
          <name>gameObject</name>
          <summary><![CDATA[此组件附加到的游戏对象。始终将组件附加到游戏对象。]]></summary>
        </member>
        <member id="Component-tag">
          <name>tag</name>
          <summary><![CDATA[此游戏对象的标签。]]></summary>
        </member>
        <member id="Component-transform">
          <name>transform</name>
          <summary><![CDATA[附加到此 ]]><link ref="GameObject">GameObject</link><![CDATA[ 的 ]]><link ref="Transform">Transform</link><![CDATA[。]]></summary>
        </member>
        <member id="Object-hideFlags">
          <name>hideFlags</name>
          <summary><![CDATA[该对象应该隐藏、随场景一起保存还是由用户修改？]]></summary>
        </member>
        <member id="Object-name">
          <name>name</name>
          <summary><![CDATA[对象的名称。]]></summary>
        </member>
      </Vars>
      <ProtVars />
      <StaticProtVars />
      <Constructors />
      <MemberFunctions>
        <member id="Component.BroadcastMessage">
          <name>BroadcastMessage</name>
          <summary><![CDATA[调用此游戏对象或其任何子项中的每个 ]]><link ref="MonoBehaviour">MonoBehaviour</link><![CDATA[ 上名为 ]]><varname>methodName</varname><![CDATA[ 的方法。]]></summary>
        </member>
        <member id="Component.CompareTag">
          <name>CompareTag</name>
          <summary><![CDATA[此游戏对象是否使用 ]]><varname>tag</varname><![CDATA[ 进行了标记？]]></summary>
        </member>
        <member id="Component.GetComponent">
          <name>GetComponent</name>
          <summary><![CDATA[如果游戏对象附加了类型为 ]]><varname>type</varname><![CDATA[ 的组件，则将其返回，否则返回 null。]]></summary>
        </member>
        <member id="Component.GetComponentInChildren">
          <name>GetComponentInChildren</name>
          <summary><![CDATA[使用深度首次搜索返回 ]]><link ref="GameObject">GameObject</link><![CDATA[ 或其任何子项中类型为 ]]><varname>type</varname><![CDATA[ 的组件。]]></summary>
        </member>
        <member id="Component.GetComponentInParent">
          <name>GetComponentInParent</name>
          <summary><![CDATA[返回 ]]><link ref="GameObject">GameObject</link><![CDATA[ 或其任何父项中类型为 ]]><varname>type</varname><![CDATA[ 的组件。]]></summary>
        </member>
        <member id="Component.GetComponents">
          <name>GetComponents</name>
          <summary><![CDATA[返回 ]]><link ref="GameObject">GameObject</link><![CDATA[ 中类型为 ]]><varname>type</varname><![CDATA[ 的所有组件。]]></summary>
        </member>
        <member id="Component.GetComponentsInChildren">
          <name>GetComponentsInChildren</name>
          <summary><![CDATA[返回 ]]><link ref="GameObject">GameObject</link><![CDATA[ 或其任何子项中类型为 ]]><varname>type</varname><![CDATA[ 的所有组件。]]></summary>
        </member>
        <member id="Component.GetComponentsInParent">
          <name>GetComponentsInParent</name>
          <summary><![CDATA[返回 ]]><link ref="GameObject">GameObject</link><![CDATA[ 或其任何父项中类型为 ]]><varname>type</varname><![CDATA[ 的所有组件。]]></summary>
        </member>
        <member id="Component.SendMessage">
          <name>SendMessage</name>
          <summary><![CDATA[调用此游戏对象中的每个 ]]><link ref="MonoBehaviour">MonoBehaviour</link><![CDATA[ 上名为 ]]><varname>methodName</varname><![CDATA[ 的方法。]]></summary>
        </member>
        <member id="Component.SendMessageUpwards">
          <name>SendMessageUpwards</name>
          <summary><![CDATA[调用此游戏对象中的每个 ]]><link ref="MonoBehaviour">MonoBehaviour</link><![CDATA[ 上或此行为的每个父级上名为 ]]><varname>methodName</varname><![CDATA[ 的方法。]]></summary>
        </member>
        <member id="Object.GetInstanceID">
          <name>GetInstanceID</name>
          <summary><![CDATA[返回对象的实例 ID。]]></summary>
        </member>
        <member id="Object.ToString">
          <name>ToString</name>
          <summary><![CDATA[返回 GameObject 的名称。]]></summary>
        </member>
      </MemberFunctions>
      <ProtectedFunctions />
      <StaticFunctions>
        <member id="Object.Destroy">
          <name>Destroy</name>
          <summary><![CDATA[删除 GameObject、组件或资源。]]></summary>
        </member>
        <member id="Object.DestroyImmediate">
          <name>DestroyImmediate</name>
          <summary><![CDATA[立即销毁对象 /obj/。强烈建议您改用 Destroy。]]></summary>
        </member>
        <member id="Object.DontDestroyOnLoad">
          <name>DontDestroyOnLoad</name>
          <summary><![CDATA[加载新场景时，不自动销毁对象 /target/。]]></summary>
        </member>
        <member id="Object.FindObjectOfType">
          <name>FindObjectOfType</name>
          <summary><![CDATA[返回第一个类型为 ]]><varname>type</varname><![CDATA[ 的已加载的激活对象。]]></summary>
        </member>
        <member id="Object.FindObjectsOfType">
          <name>FindObjectsOfType</name>
          <summary><![CDATA[返回所有类型为 ]]><varname>type</varname><![CDATA[ 的已加载的激活对象的列表。]]></summary>
        </member>
        <member id="Object.Instantiate">
          <name>Instantiate</name>
          <summary><![CDATA[克隆 ]]><varname>original</varname><![CDATA[ 对象并返回克隆对象。]]></summary>
        </member>
      </StaticFunctions>
      <Operators>
        <member id="Object-operator_Object">
          <name>bool</name>
          <summary><![CDATA[该对象是否存在？]]></summary>
        </member>
        <member id="Object-operator_ne">
          <name>operator !=</name>
          <summary><![CDATA[比较两个对象是否引用不同的对象。]]></summary>
        </member>
        <member id="Object-operator_eq">
          <name>operator ==</name>
          <summary><![CDATA[比较两个对象引用，判断它们是否引用同一个对象。]]></summary>
        </member>
      </Operators>
      <Messages />
      <Events />
      <Delegates />
    </BaseType>
    <InheritsFrom>Animator</InheritsFrom>
  </Model>
</Root>
