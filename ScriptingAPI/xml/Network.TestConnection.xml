<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Root LongForm="false">
  <vars>
    <docs_type>ScriptReference</docs_type>
    <lang>zh_CN</lang>
    <unity_version>2018.1</unity_version>
    <current_docs_url>https://docs.unity3d.com/zh_CN/2018.1/</current_docs_url>
    <docs_versions>
      <docs_version version="2019.1">2019.1</docs_version>
      <docs_version version="2018.3">2018.3</docs_version>
      <docs_version version="2018.2">2018.2</docs_version>
      <docs_version version="2018.1">2018.1</docs_version>
      <docs_version version="2017.4">2017.4</docs_version>
      <docs_version version="2017.3">2017.3</docs_version>
      <docs_version version="2017.2">2017.2</docs_version>
      <docs_version version="2017.1">2017.1</docs_version>
      <docs_version version="5.6">560</docs_version>
      <docs_version version="5.5">550</docs_version>
      <docs_version version="5.4">540</docs_version>
      <docs_version version="5.3">530</docs_version>
    </docs_versions>
    <langname>中文</langname>
    <unity_url>https://unity3d.com/</unity_url>
    <current_docs_version version="2018.1">2018.1</current_docs_version>
    <jquery_js_url>../StaticFiles/js/jquery.js</jquery_js_url>
    <jquery_sidebar_url>../StaticFiles/js/jquery.sidebar.min.js</jquery_sidebar_url>
    <custom_js_url>../StaticFiles/js/custom.js</custom_js_url>
    <core_js_url>../StaticFiles/js/core.js</core_js_url>
    <core_css_url>../StaticFiles/css/core.css</core_css_url>
    <custom_css_url>../StaticFiles/css/custom.css</custom_css_url>
    <toc_js_url>docdata/toc.js</toc_js_url>
    <index_js_url>docdata/index.js</index_js_url>
    <langs>
      <lang locale="en">English</lang>
      <lang locale="ja">日本語</lang>
      <lang locale="es">Español</lang>
      <lang locale="kr">한국어</lang>
    </langs>
    <translation>
      <unity_tech>Unity Technologies</unity_tech>
      <unity_url>https://unity3d.com/</unity_url>
      <manual>Manual</manual>
      <scripting_api>Scripting API</scripting_api>
      <learn>Learn</learn>
      <learn_url>https://unity3d.com/learn</learn_url>
      <tutorials>Tutorials</tutorials>
      <tutorials_url>https://unity3d.com/learn</tutorials_url>
      <knowledgebase>Knowledge Base</knowledgebase>
      <knowledgebase_url>https://support.unity3d.com/hc/en-us</knowledgebase_url>
      <live_training>Live Training</live_training>
      <premium_support>Premium Support</premium_support>
      <community>Community</community>
      <community_url>https://unity3d.com/community</community_url>
      <community_answers>Community Answers</community_answers>
      <community_answers_url>https://answers.unity3d.com</community_answers_url>
      <forums>Forums</forums>
      <forums_url>https://forum.unity3d.com</forums_url>
      <answers>Answers</answers>
      <feedback>Feedback</feedback>
      <issuetracker>Issue Tracker</issuetracker>
      <unity_manual>Unity Manual</unity_manual>
      <unity_dash_manual>Unity - Manual</unity_dash_manual>
      <full_table_of_contents>Full table of contents</full_table_of_contents>
      <copyright>Copyright © 2018 Unity Technologies</copyright>
      <unity>Unity</unity>
      <gallery>Gallery</gallery>
      <asset_store>Asset Store</asset_store>
      <assetstore_url>https://unity3d.com/asset-store</assetstore_url>
      <buy>Buy</buy>
      <buy_url>https://store.unity3d.com</buy_url>
      <download>Download</download>
      <download_url>https://unity3d.com/unity/download</download_url>
      <language>Language</language>
      <previous>Previous</previous>
      <next>Next</next>
      <switch_to_manual>Switch to Manual</switch_to_manual>
      <switch_to_scriptref>Switch to Scripting Reference</switch_to_scriptref>
      <docs_url>https://docs.unity3d.com</docs_url>
      <help_trans>Help translating this page</help_trans>
      <search_placeholder>Search manual...</search_placeholder>
      <search_scripting_placeholder>Search scripting...</search_scripting_placeholder>
      <script_language>Script language</script_language>
      <script_language_body>Select your preferred scripting language. All code snippets will be displayed in this language.</script_language_body>
      <history>History</history>
      <inherits_from>Inherits from:</inherits_from>
      <implements_interfaces>Implements interfaces:</implements_interfaces>
      <suggest_a_change>Suggest a change</suggest_a_change>
      <suggest_success>Success!</suggest_success>
      <suggest_success_body>Thank you for helping us improve the quality of Unity Documentation. Although we cannot accept all submissions, we do read each suggested change from our users and will make updates where applicable.</suggest_success_body>
      <suggest_clone>Close</suggest_clone>
      <suggest_failed>Sumbission failed</suggest_failed>
      <suggest_failed_body>For some reason your suggested change could not be submitted. Please &lt;a&gt;try again&lt;/a&gt; in a few minutes. And thank you for taking the time to help us improve the quality of Unity Documentation.</suggest_failed_body>
      <suggest_name>Your name</suggest_name>
      <suggest_email>Your email</suggest_email>
      <suggest_body>Suggestion</suggest_body>
      <suggest_submit>Submit suggestion</suggest_submit>
      <suggest_cancel>Cancel</suggest_cancel>
      <parameters>Parameters</parameters>
      <returns>Returns</returns>
      <description>Description</description>
      <static_variables>Static Variables</static_variables>
      <variables>Variables</variables>
      <constructors>Constructors</constructors>
      <public_functions>Public Functions</public_functions>
      <protected_functions>Protected Functions</protected_functions>
      <static_functions>Static Functions</static_functions>
      <operators>Operators</operators>
      <messages>Messages</messages>
      <delegates>Delegates</delegates>
      <events>Events</events>
      <inherited_members>Inherited members</inherited_members>
      <intro>欢迎使用 Unity Scripting Reference（脚本引用）！</intro>
      <intro_body_1>文档的这部分包含 Unity 提供的脚本 API 的详细信息。要使用这些信息，您应该了解 Unity 中脚本编写的基本理论和实践。我们使用手册的&lt;a href="../Manual/ScriptingSection.html"&gt; Scripting（脚本）部分&lt;/a&gt;对此进行了解释。</intro_body_1>
      <intro_body_2>脚本引用文档是根据脚本可用的类建立的，同时会描述这些类的方法、属性以及任何与它们的用法相关的信息。</intro_body_2>
      <intro_body_3>这些页面配有大量的示例代码，您可以将这些示例代码用于任何目的，而无需说明源自 Unity。此外，您可以使用每个页面顶部的菜单以 &lt;b&gt;C#&lt;/b&gt; 或 &lt;b&gt;JavaScript&lt;/b&gt; 查看示例代码。请注意，无论使用哪种编程语言，API 都是相同的，所以编程语言的选择完全取决于您的喜好。</intro_body_3>
      <intro_body_4>API 按其所属的 namespace 进行分组，可以从左侧的侧栏中选择。对于大多数用户，&lt;b&gt;UnityEngine&lt;/b&gt; 部分将是主要的调用端口。</intro_body_4>
      <classes>Classes</classes>
      <enumerations>Enumerations</enumerations>
      <attributes>Attributes</attributes>
      <api_histroy>API History</api_histroy>
      <api_histroy_body>Overview of additions to (and removals from) Unity's scripting API in each version.</api_histroy_body>
      <api_histroy_name>Name</api_histroy_name>
      <api_histroy_type>Type</api_histroy_type>
      <api_histroy_namespace>Namespace</api_histroy_namespace>
      <api_histroy_status>Status</api_histroy_status>
      <api_histroy_version>Version</api_histroy_version>
      <api_histroy_added>added</api_histroy_added>
      <api_histroy_obsolete>obsolete</api_histroy_obsolete>
      <api_histroy_removed>removed</api_histroy_removed>
      <known_issues>
        <p>这里描述的内容与实际不符？它可能是<b>已知问题</b>。请在 Issue Tracker（<a href="https://issuetracker.unity3d.com">issuetracker.unity3d.com</a>）中查看。</p>
      </known_issues>
      <rate_content>这个页面中的信息对您有帮助吗？请为它打分：</rate_content>
      <rate_thanks>Thanks for rating this page!</rate_thanks>
      <report_problem>报告此页面中的问题</report_problem>
      <problem_type>What kind of problem would you like to report?</problem_type>
      <problem_needcode>This page needs code samples</problem_needcode>
      <problem_code>Code samples do not work</problem_code>
      <problem_missing>Information is missing</problem_missing>
      <problem_incorrect>Information is incorrect</problem_incorrect>
      <problem_unclear>Information is unclear or confusing</problem_unclear>
      <problem_language>There is a spelling/grammar error on this page</problem_language>
      <problem_other>Something else</problem_other>
      <problem_thanks>Thanks for letting us know! This page has been marked for review based on your feedback.</problem_thanks>
      <problem_more_info>If you have time, you can provide more information to help us fix the problem faster.</problem_more_info>
      <problem_more_info_link>Provide more information</problem_more_info_link>
      <problem_needcode_form_description>You've told us this page needs code samples. If you'd like to help us further, you could provide a code sample, or tell us about what kind of code sample you'd like to see:</problem_needcode_form_description>
      <problem_code_form_description>You've told us there are code samples on this page which don't work. If you know how to fix it, or have something better we could use instead, please let us know:</problem_code_form_description>
      <problem_missing_form_description>You've told us there is information missing from this page. Please tell us more about what's missing:</problem_missing_form_description>
      <problem_incorrect_form_description>You've told us there is incorrect information on this page. If you know what we should change to make it correct, please tell us:</problem_incorrect_form_description>
      <problem_unclear_form_description>You've told us this page has unclear or confusing information. Please tell us more about what you found unclear or confusing, or let us know how we could make it clearer:</problem_unclear_form_description>
      <problem_language_form_description>You've told us there is a spelling or grammar error on this page. Please tell us what's wrong:</problem_language_form_description>
      <problem_other_form_description>You've told us this page has a problem. Please tell us more about what's wrong:</problem_other_form_description>
      <problem_more_info_thanks>Thanks for helping to make the Unity documentation better!</problem_more_info_thanks>
      <leave_feedback>Leave feedback</leave_feedback>
    </translation>
  </vars>
  <Model>
    <ParentClass>Network</ParentClass>
    <Section>
      <Signature>
        <Declaration name="TestConnection" type="function" modifiers="public static" Obsolete="" />
        <ParamElement name="forceTest" type="bool" default="false" />
        <ReturnType hasLink="true">ConnectionTesterStatus</ReturnType>
      </Signature>
      <Summary><![CDATA[测试此机器的网络连接。]]></Summary>
      <ParamWithDoc>
        <name>forceTest</name>
        <doc><![CDATA[]]></doc>
      </ParamWithDoc>
      <Description><![CDATA[根据机器具有公共 IP 地址还是仅有私有地址，可执行两种测试。]]><br /><br /><![CDATA[公共 IP 地址测试主要用于作为服务器运行的情形，因为具有公共地址的客户端无需测试。为了
成功进行公共 IP 测试，必须启动一个服务器实例。测试服务器会尝试连接到本地服务器的 IP 和端口，
以显示该服务器可接受连接。否则，服务器端口很有可能被防火墙阻止。
服务器实例需处于运行状态，以便测试服务器能够建立连接。]]><br /><br /><![CDATA[
另一个测试是检查 NAT 穿透能力。该测试对服务器和客户端均有效，
而且无需事先设置就可以进行测试。NAT 测试会有 4 种结果（请参阅 ]]><link ref="ConnectionTesterStatus">ConnectionTesterStatus</link><![CDATA[）：__Full Cone_、]]><b>Address Restricted Cone</b><![CDATA[、]]><b>Port restricted</b><![CDATA[ 及
]]><b>Symmetric</b><![CDATA[。]]><br /><br /><![CDATA[前两种提供完全 NAT 穿透支持，可连接到任何类型。端口限制类型无法连接到对称类型，也不能接收来自对称类型的连接。
对称类型是最糟糕的情况，无法连接到其他对称类型或端口限制类型。后两种被标记为
提供有限的 NAT 穿透支持。]]><br /><br /><![CDATA[此函数是异步函数，可能不会立即返回有效的结果，
因为测试需要一定时间才能完成（1-2 秒）。测试完成后，测试结果仅在下一次再次调用该函数时返回，
不会重复进行一次完整的网络测试。这使得能够安全地频繁轮询该函数。如果希望进行另一个测试，
如网络连接是否发生变化，传入的 ]]><varname>forceTest</varname><![CDATA[ 参数应为 true。]]><br /><br /><![CDATA[此函数返回一个 ]]><link ref="ConnectionTesterStatus">ConnectionTesterStatus</link><![CDATA[ 枚举。]]></Description>
      <Example nocheck="false" convertexample="false">
        <JavaScript><![CDATA[
var testStatus = "Testing network connection capabilities.";
var testMessage = "Test in progress";
var shouldEnableNatMessage : String = "";
var doneTesting = false;
var probingPublicIP = false;
var serverPort = 9999;
var connectionTestResult = ]]><link ref="ConnectionTesterStatus.Undetermined">ConnectionTesterStatus.Undetermined</link><![CDATA[;]]><br /><br /><![CDATA[// Indicates if the useNat parameter be enabled when starting a server
var useNat = false;]]><br /><br /><![CDATA[function OnGUI() {
    ]]><link ref="GUILayout.Label">GUILayout.Label</link><![CDATA[("Current ]]><link ref="TouchScreenKeyboard.Status">Status</link><![CDATA[: " + testStatus);
    ]]><link ref="GUILayout.Label">GUILayout.Label</link><![CDATA[("Test result : " + testMessage);
    ]]><link ref="GUILayout.Label">GUILayout.Label</link><![CDATA[(shouldEnableNatMessage);
    if (!doneTesting)
        TestConnection();
}]]><br /><br /><![CDATA[function TestConnection() {
    // Start/Poll the connection test, report the results in a label and
    // react to the results accordingly
    connectionTestResult = ]]><link ref="Network.TestConnection">Network.TestConnection</link><![CDATA[();
    switch (connectionTestResult) {
        case ]]><link ref="ConnectionTesterStatus.Error">ConnectionTesterStatus.Error</link><![CDATA[:
            testMessage = "Problem determining NAT capabilities";
            doneTesting = true;
            break;]]><br /><br /><![CDATA[        case ]]><link ref="ConnectionTesterStatus.Undetermined">ConnectionTesterStatus.Undetermined</link><![CDATA[:
            testMessage = "Undetermined NAT capabilities";
            doneTesting = false;
            break;]]><br /><br /><![CDATA[        case ]]><link ref="ConnectionTesterStatus.PublicIPIsConnectable">ConnectionTesterStatus.PublicIPIsConnectable</link><![CDATA[:
            testMessage = "Directly connectable public IP address.";
            useNat = false;
            doneTesting = true;
            break;]]><br /><br /><![CDATA[        // This case is a bit special as we now need to check if we can
        // circumvent the blocking by using NAT punchthrough
        case ]]><link ref="ConnectionTesterStatus.PublicIPPortBlocked">ConnectionTesterStatus.PublicIPPortBlocked</link><![CDATA[:
            testMessage = "Non-connectable public IP address (port " +
                serverPort +" blocked), running a server is impossible.";
            useNat = false;
            // If no NAT punchthrough test has been performed on this public
            // IP, force a test
            if (!probingPublicIP) {
                connectionTestResult = ]]><link ref="Network.TestConnectionNAT">Network.TestConnectionNAT</link><![CDATA[();
                probingPublicIP = true;
                testStatus = "Testing if blocked public IP can be circumvented";
                timer = ]]><link ref="Time-time">Time.time</link><![CDATA[ + 10;
            }
            // NAT punchthrough test was performed but we still get blocked
            else if (]]><link ref="Time-time">Time.time</link><![CDATA[ > timer) {
                probingPublicIP = false;        // reset
                useNat = true;
                doneTesting = true;
            }
            break;
        case ]]><link ref="ConnectionTesterStatus.PublicIPNoServerStarted">ConnectionTesterStatus.PublicIPNoServerStarted</link><![CDATA[:
            testMessage = "Public IP address but server not initialized, "+
                "it must be started to check server accessibility. Restart "+
                "connection test when ready.";
            break;]]><br /><br /><![CDATA[        case ]]><link ref="ConnectionTesterStatus.LimitedNATPunchthroughPortRestricted">ConnectionTesterStatus.LimitedNATPunchthroughPortRestricted</link><![CDATA[:
            testMessage = "Limited NAT punchthrough capabilities. Cannot "+
                "connect to all types of NAT servers. Running a server "+
                "is ill advised as not everyone can connect.";
            useNat = true;
            doneTesting = true;
            break;]]><br /><br /><![CDATA[        case ]]><link ref="ConnectionTesterStatus.LimitedNATPunchthroughSymmetric">ConnectionTesterStatus.LimitedNATPunchthroughSymmetric</link><![CDATA[:
            testMessage = "Limited NAT punchthrough capabilities. Cannot "+
                "connect to all types of NAT servers. Running a server "+
                "is ill advised as not everyone can connect.";
            useNat = true;
            doneTesting = true;
            break;]]><br /><br /><![CDATA[        case ]]><link ref="ConnectionTesterStatus.NATpunchthroughAddressRestrictedCone">ConnectionTesterStatus.NATpunchthroughAddressRestrictedCone</link><![CDATA[:
        case ]]><link ref="ConnectionTesterStatus.NATpunchthroughFullCone">ConnectionTesterStatus.NATpunchthroughFullCone</link><![CDATA[:
            testMessage = "NAT punchthrough capable. Can connect to all "+
                "servers and receive connections from all clients. Enabling "+
                "NAT punchthrough functionality.";
            useNat = true;
            doneTesting = true;
            break;]]><br /><br /><![CDATA[        default:
            testMessage = "]]><link ref="PackageManager.Error">Error</link><![CDATA[ in test routine, got " + connectionTestResult;
    }
    if (doneTesting) {
        if (useNat)
            shouldEnableNatMessage = "When starting a server the NAT "+
                "punchthrough feature should be enabled (useNat parameter)";
        else
            shouldEnableNatMessage = "NAT punchthrough not needed";
        testStatus = "Done testing";
    }
}]></code>
        </example>
        <description>If you know both server and client NAT types you could use the following function to determine if the client can connect to the server or not.</description>
        <example>
          <code lang="js"><![CDATA[
    function CanConnectTo(type1: ]]><link ref="ConnectionTesterStatus">ConnectionTesterStatus</link><![CDATA[, type2: ]]><link ref="ConnectionTesterStatus">ConnectionTesterStatus</link><![CDATA[) : boolean
    {
        if (type1 == ]]><link ref="ConnectionTesterStatus.LimitedNATPunchthroughPortRestricted">ConnectionTesterStatus.LimitedNATPunchthroughPortRestricted</link><![CDATA[ &amp;&amp;
            type2 == ]]><link ref="ConnectionTesterStatus.LimitedNATPunchthroughSymmetric">ConnectionTesterStatus.LimitedNATPunchthroughSymmetric</link><![CDATA[)
            return false;
        else if (type1 == ]]><link ref="ConnectionTesterStatus.LimitedNATPunchthroughSymmetric">ConnectionTesterStatus.LimitedNATPunchthroughSymmetric</link><![CDATA[ &amp;&amp;
            type2 == ]]><link ref="ConnectionTesterStatus.LimitedNATPunchthroughPortRestricted">ConnectionTesterStatus.LimitedNATPunchthroughPortRestricted</link><![CDATA[)
            return false;
        else if (type1 == ]]><link ref="ConnectionTesterStatus.LimitedNATPunchthroughSymmetric">ConnectionTesterStatus.LimitedNATPunchthroughSymmetric</link><![CDATA[ &amp;&amp;
            type2 == ]]><link ref="ConnectionTesterStatus.LimitedNATPunchthroughSymmetric">ConnectionTesterStatus.LimitedNATPunchthroughSymmetric</link><![CDATA[)
            return false;
        return true;
    }
]]></JavaScript>
        <CSharp><![CDATA[
using UnityEngine;
using System.Collections;]]><br /><br /><![CDATA[public class ExampleClass : ]]><link ref="MonoBehaviour">MonoBehaviour</link><![CDATA[
{
    string testStatus = "Testing network connection capabilities.";
    string testMessage = "Test in progress";
    string shouldEnableNatMessage  = "";
    bool doneTesting = false;
    bool probingPublicIP = false;
    int serverPort = 9999;
    bool useNat = false;
    float timer = 0.0f;]]><br /><br /><![CDATA[    ]]><link ref="ConnectionTesterStatus">ConnectionTesterStatus</link><![CDATA[ connectionTestResult = ]]><link ref="ConnectionTesterStatus.Undetermined">ConnectionTesterStatus.Undetermined</link><![CDATA[;]]><br /><br /><![CDATA[    void OnGUI()
    {
        ]]><link ref="GUILayout.Label">GUILayout.Label</link><![CDATA[("Current ]]><link ref="TouchScreenKeyboard.Status">Status</link><![CDATA[: " + testStatus);
        ]]><link ref="GUILayout.Label">GUILayout.Label</link><![CDATA[("Test result : " + testMessage);
        ]]><link ref="GUILayout.Label">GUILayout.Label</link><![CDATA[(shouldEnableNatMessage);]]><br /><br /><![CDATA[        if (!doneTesting)
            TestConnection();
    }]]><br /><br /><![CDATA[    void TestConnection()
    {
        // Start/Poll the connection test, report the results in a label and
        // react to the results accordingly
        connectionTestResult = ]]><link ref="Network.TestConnection">Network.TestConnection</link><![CDATA[();
        switch (connectionTestResult)
        {
            case ]]><link ref="ConnectionTesterStatus.Error">ConnectionTesterStatus.Error</link><![CDATA[:
                testMessage = "Problem determining NAT capabilities";
                doneTesting = true;
                break;]]><br /><br /><![CDATA[            case ]]><link ref="ConnectionTesterStatus.Undetermined">ConnectionTesterStatus.Undetermined</link><![CDATA[:
                testMessage = "Undetermined NAT capabilities";
                doneTesting = false;
                break;]]><br /><br /><![CDATA[            case ]]><link ref="ConnectionTesterStatus.PublicIPIsConnectable">ConnectionTesterStatus.PublicIPIsConnectable</link><![CDATA[:
                testMessage = "Directly connectable public IP address.";
                useNat = false;
                doneTesting = true;
                break;]]><br /><br /><![CDATA[            // This case is a bit special as we now need to check if we can
            // circumvent the blocking by using NAT punchthrough
            case ]]><link ref="ConnectionTesterStatus.PublicIPPortBlocked">ConnectionTesterStatus.PublicIPPortBlocked</link><![CDATA[:
                testMessage = "Non-connectable public IP address (port " +
                    serverPort + " blocked), running a server is impossible.";
                useNat = false;
                // If no NAT punchthrough test has been performed on this public
                // IP, force a test
                if (!probingPublicIP)
                {
                    connectionTestResult = ]]><link ref="Network.TestConnectionNAT">Network.TestConnectionNAT</link><![CDATA[();
                    probingPublicIP = true;
                    testStatus = "Testing if blocked public IP can be circumvented";
                    timer = ]]><link ref="Time-time">Time.time</link><![CDATA[ + 10;
                }
                // NAT punchthrough test was performed but we still get blocked
                else if (]]><link ref="Time-time">Time.time</link><![CDATA[ > timer)
                {
                    probingPublicIP = false;        // reset
                    useNat = true;
                    doneTesting = true;
                }
                break;]]><br /><br /><![CDATA[            case ]]><link ref="ConnectionTesterStatus.PublicIPNoServerStarted">ConnectionTesterStatus.PublicIPNoServerStarted</link><![CDATA[:
                testMessage = "Public IP address but server not initialized, " +
                    "it must be started to check server accessibility. Restart " +
                    "connection test when ready.";
                break;]]><br /><br /><![CDATA[            case ]]><link ref="ConnectionTesterStatus.LimitedNATPunchthroughPortRestricted">ConnectionTesterStatus.LimitedNATPunchthroughPortRestricted</link><![CDATA[:
                testMessage = "Limited NAT punchthrough capabilities. Cannot " +
                    "connect to all types of NAT servers. Running a server " +
                    "is ill advised as not everyone can connect.";
                useNat = true;
                doneTesting = true;
                break;]]><br /><br /><![CDATA[            case ]]><link ref="ConnectionTesterStatus.LimitedNATPunchthroughSymmetric">ConnectionTesterStatus.LimitedNATPunchthroughSymmetric</link><![CDATA[:
                testMessage = "Limited NAT punchthrough capabilities. Cannot " +
                    "connect to all types of NAT servers. Running a server " +
                    "is ill advised as not everyone can connect.";
                useNat = true;
                doneTesting = true;
                break;]]><br /><br /><![CDATA[            case ]]><link ref="ConnectionTesterStatus.NATpunchthroughAddressRestrictedCone">ConnectionTesterStatus.NATpunchthroughAddressRestrictedCone</link><![CDATA[:
            case ]]><link ref="ConnectionTesterStatus.NATpunchthroughFullCone">ConnectionTesterStatus.NATpunchthroughFullCone</link><![CDATA[:
                testMessage = "NAT punchthrough capable. Can connect to all " +
                    "servers and receive connections from all clients. Enabling " +
                    "NAT punchthrough functionality.";
                useNat = true;
                doneTesting = true;
                break;]]><br /><br /><![CDATA[            default:
                testMessage = "]]><link ref="PackageManager.Error">Error</link><![CDATA[ in test routine, got " + connectionTestResult;
                break;
        }]]><br /><br /><![CDATA[        if (doneTesting)
        {
            if (useNat)
                shouldEnableNatMessage = "When starting a server the NAT " +
                    "punchthrough feature should be enabled (useNat parameter)";
            else
                shouldEnableNatMessage = "NAT punchthrough not needed";
            testStatus = "Done testing";
        }
    }
}
]]></CSharp>
      </Example>
    </Section>
  </Model>
</Root>
