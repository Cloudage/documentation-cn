<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Root LongForm="false">
  <vars>
    <docs_type>ScriptReference</docs_type>
    <lang>zh_CN</lang>
    <unity_version>2018.1</unity_version>
    <current_docs_url>https://docs.unity3d.com/zh_CN/2018.1/</current_docs_url>
    <docs_versions>
      <docs_version version="2019.1">2019.1</docs_version>
      <docs_version version="2018.3">2018.3</docs_version>
      <docs_version version="2018.2">2018.2</docs_version>
      <docs_version version="2018.1">2018.1</docs_version>
      <docs_version version="2017.4">2017.4</docs_version>
      <docs_version version="2017.3">2017.3</docs_version>
      <docs_version version="2017.2">2017.2</docs_version>
      <docs_version version="2017.1">2017.1</docs_version>
      <docs_version version="5.6">560</docs_version>
      <docs_version version="5.5">550</docs_version>
      <docs_version version="5.4">540</docs_version>
      <docs_version version="5.3">530</docs_version>
    </docs_versions>
    <langname>中文</langname>
    <unity_url>https://unity3d.com/</unity_url>
    <current_docs_version version="2018.1">2018.1</current_docs_version>
    <jquery_js_url>../StaticFiles/js/jquery.js</jquery_js_url>
    <jquery_sidebar_url>../StaticFiles/js/jquery.sidebar.min.js</jquery_sidebar_url>
    <custom_js_url>../StaticFiles/js/custom.js</custom_js_url>
    <core_js_url>../StaticFiles/js/core.js</core_js_url>
    <core_css_url>../StaticFiles/css/core.css</core_css_url>
    <custom_css_url>../StaticFiles/css/custom.css</custom_css_url>
    <toc_js_url>docdata/toc.js</toc_js_url>
    <index_js_url>docdata/index.js</index_js_url>
    <langs>
      <lang locale="en">English</lang>
      <lang locale="ja">日本語</lang>
      <lang locale="es">Español</lang>
      <lang locale="kr">한국어</lang>
    </langs>
    <translation>
      <unity_tech>Unity Technologies</unity_tech>
      <unity_url>https://unity3d.com/</unity_url>
      <manual>Manual</manual>
      <scripting_api>Scripting API</scripting_api>
      <learn>Learn</learn>
      <learn_url>https://unity3d.com/learn</learn_url>
      <tutorials>Tutorials</tutorials>
      <tutorials_url>https://unity3d.com/learn</tutorials_url>
      <knowledgebase>Knowledge Base</knowledgebase>
      <knowledgebase_url>https://support.unity3d.com/hc/en-us</knowledgebase_url>
      <live_training>Live Training</live_training>
      <premium_support>Premium Support</premium_support>
      <community>Community</community>
      <community_url>https://unity3d.com/community</community_url>
      <community_answers>Community Answers</community_answers>
      <community_answers_url>https://answers.unity3d.com</community_answers_url>
      <forums>Forums</forums>
      <forums_url>https://forum.unity3d.com</forums_url>
      <answers>Answers</answers>
      <feedback>Feedback</feedback>
      <issuetracker>Issue Tracker</issuetracker>
      <unity_manual>Unity Manual</unity_manual>
      <unity_dash_manual>Unity - Manual</unity_dash_manual>
      <full_table_of_contents>Full table of contents</full_table_of_contents>
      <copyright>Copyright © 2018 Unity Technologies</copyright>
      <unity>Unity</unity>
      <gallery>Gallery</gallery>
      <asset_store>Asset Store</asset_store>
      <assetstore_url>https://unity3d.com/asset-store</assetstore_url>
      <buy>Buy</buy>
      <buy_url>https://store.unity3d.com</buy_url>
      <download>Download</download>
      <download_url>https://unity3d.com/unity/download</download_url>
      <language>Language</language>
      <previous>Previous</previous>
      <next>Next</next>
      <switch_to_manual>Switch to Manual</switch_to_manual>
      <switch_to_scriptref>Switch to Scripting Reference</switch_to_scriptref>
      <docs_url>https://docs.unity3d.com</docs_url>
      <help_trans>Help translating this page</help_trans>
      <search_placeholder>Search manual...</search_placeholder>
      <search_scripting_placeholder>Search scripting...</search_scripting_placeholder>
      <script_language>Script language</script_language>
      <script_language_body>Select your preferred scripting language. All code snippets will be displayed in this language.</script_language_body>
      <history>History</history>
      <inherits_from>Inherits from:</inherits_from>
      <implements_interfaces>Implements interfaces:</implements_interfaces>
      <suggest_a_change>Suggest a change</suggest_a_change>
      <suggest_success>Success!</suggest_success>
      <suggest_success_body>Thank you for helping us improve the quality of Unity Documentation. Although we cannot accept all submissions, we do read each suggested change from our users and will make updates where applicable.</suggest_success_body>
      <suggest_clone>Close</suggest_clone>
      <suggest_failed>Sumbission failed</suggest_failed>
      <suggest_failed_body>For some reason your suggested change could not be submitted. Please &lt;a&gt;try again&lt;/a&gt; in a few minutes. And thank you for taking the time to help us improve the quality of Unity Documentation.</suggest_failed_body>
      <suggest_name>Your name</suggest_name>
      <suggest_email>Your email</suggest_email>
      <suggest_body>Suggestion</suggest_body>
      <suggest_submit>Submit suggestion</suggest_submit>
      <suggest_cancel>Cancel</suggest_cancel>
      <parameters>Parameters</parameters>
      <returns>Returns</returns>
      <description>Description</description>
      <static_variables>Static Variables</static_variables>
      <variables>Variables</variables>
      <constructors>Constructors</constructors>
      <public_functions>Public Functions</public_functions>
      <protected_functions>Protected Functions</protected_functions>
      <static_functions>Static Functions</static_functions>
      <operators>Operators</operators>
      <messages>Messages</messages>
      <delegates>Delegates</delegates>
      <events>Events</events>
      <inherited_members>Inherited members</inherited_members>
      <intro>欢迎使用 Unity Scripting Reference（脚本引用）！</intro>
      <intro_body_1>文档的这部分包含 Unity 提供的脚本 API 的详细信息。要使用这些信息，您应该了解 Unity 中脚本编写的基本理论和实践。我们使用手册的&lt;a href="../Manual/ScriptingSection.html"&gt; Scripting（脚本）部分&lt;/a&gt;对此进行了解释。</intro_body_1>
      <intro_body_2>脚本引用文档是根据脚本可用的类建立的，同时会描述这些类的方法、属性以及任何与它们的用法相关的信息。</intro_body_2>
      <intro_body_3>这些页面配有大量的示例代码，您可以将这些示例代码用于任何目的，而无需说明源自 Unity。此外，您可以使用每个页面顶部的菜单以 &lt;b&gt;C#&lt;/b&gt; 或 &lt;b&gt;JavaScript&lt;/b&gt; 查看示例代码。请注意，无论使用哪种编程语言，API 都是相同的，所以编程语言的选择完全取决于您的喜好。</intro_body_3>
      <intro_body_4>API 按其所属的 namespace 进行分组，可以从左侧的侧栏中选择。对于大多数用户，&lt;b&gt;UnityEngine&lt;/b&gt; 部分将是主要的调用端口。</intro_body_4>
      <classes>Classes</classes>
      <enumerations>Enumerations</enumerations>
      <attributes>Attributes</attributes>
      <api_histroy>API History</api_histroy>
      <api_histroy_body>Overview of additions to (and removals from) Unity's scripting API in each version.</api_histroy_body>
      <api_histroy_name>Name</api_histroy_name>
      <api_histroy_type>Type</api_histroy_type>
      <api_histroy_namespace>Namespace</api_histroy_namespace>
      <api_histroy_status>Status</api_histroy_status>
      <api_histroy_version>Version</api_histroy_version>
      <api_histroy_added>added</api_histroy_added>
      <api_histroy_obsolete>obsolete</api_histroy_obsolete>
      <api_histroy_removed>removed</api_histroy_removed>
      <known_issues>
        <p>这里描述的内容与实际不符？它可能是<b>已知问题</b>。请在 Issue Tracker（<a href="https://issuetracker.unity3d.com">issuetracker.unity3d.com</a>）中查看。</p>
      </known_issues>
      <rate_content>这个页面中的信息对您有帮助吗？请为它打分：</rate_content>
      <rate_thanks>Thanks for rating this page!</rate_thanks>
      <report_problem>报告此页面中的问题</report_problem>
      <problem_type>What kind of problem would you like to report?</problem_type>
      <problem_needcode>This page needs code samples</problem_needcode>
      <problem_code>Code samples do not work</problem_code>
      <problem_missing>Information is missing</problem_missing>
      <problem_incorrect>Information is incorrect</problem_incorrect>
      <problem_unclear>Information is unclear or confusing</problem_unclear>
      <problem_language>There is a spelling/grammar error on this page</problem_language>
      <problem_other>Something else</problem_other>
      <problem_thanks>Thanks for letting us know! This page has been marked for review based on your feedback.</problem_thanks>
      <problem_more_info>If you have time, you can provide more information to help us fix the problem faster.</problem_more_info>
      <problem_more_info_link>Provide more information</problem_more_info_link>
      <problem_needcode_form_description>You've told us this page needs code samples. If you'd like to help us further, you could provide a code sample, or tell us about what kind of code sample you'd like to see:</problem_needcode_form_description>
      <problem_code_form_description>You've told us there are code samples on this page which don't work. If you know how to fix it, or have something better we could use instead, please let us know:</problem_code_form_description>
      <problem_missing_form_description>You've told us there is information missing from this page. Please tell us more about what's missing:</problem_missing_form_description>
      <problem_incorrect_form_description>You've told us there is incorrect information on this page. If you know what we should change to make it correct, please tell us:</problem_incorrect_form_description>
      <problem_unclear_form_description>You've told us this page has unclear or confusing information. Please tell us more about what you found unclear or confusing, or let us know how we could make it clearer:</problem_unclear_form_description>
      <problem_language_form_description>You've told us there is a spelling or grammar error on this page. Please tell us what's wrong:</problem_language_form_description>
      <problem_other_form_description>You've told us this page has a problem. Please tell us more about what's wrong:</problem_other_form_description>
      <problem_more_info_thanks>Thanks for helping to make the Unity documentation better!</problem_more_info_thanks>
      <leave_feedback>Leave feedback</leave_feedback>
    </translation>
  </vars>
  <Model>
    <ParentClass DisplayName="UnityWebRequest">Networking.UnityWebRequest</ParentClass>
    <Section>
      <Signature>
        <Declaration name="Post" type="function" modifiers="public static" Obsolete="" />
        <ParamElement name="uri" type="string" />
        <ParamElement name="postData" type="string" />
        <ReturnType DisplayName="UnityWebRequest" hasLink="true">Networking.UnityWebRequest</ReturnType>
      </Signature>
      <Summary><![CDATA[创建一个经配置可通过 HTTP ]]><monotype>POST</monotype><![CDATA[ 向服务器发送表单数据的 UnityWebRequest。]]></Summary>
      <ParamWithDoc>
        <name>uri</name>
        <doc><![CDATA[要向其传输表单数据的目标 URI。]]></doc>
      </ParamWithDoc>
      <ParamWithDoc>
        <name>postData</name>
        <doc><![CDATA[表单主体数据。将在传输之前进行 URL 编码。]]></doc>
      </ParamWithDoc>
      <ReturnWithDoc type="UnityWebRequest">
        <doc><![CDATA[经配置可通过 ]]><monotype>POST</monotype><![CDATA[ 向 ]]><varname>uri</varname><![CDATA[ 发送表单数据的 UnityWebRequest。]]></doc>
      </ReturnWithDoc>
      <Description><![CDATA[此方法可创建一个 UnityWebRequest，将 ]]><varname>url</varname><![CDATA[ 设置为字符串 ]]><varname>uri</varname><![CDATA[ 参数，并将 ]]><varname>method</varname><![CDATA[ 设置为 ]]><monotype>POST</monotype><![CDATA[。]]><monotype>Content-Type</monotype><![CDATA[ 标头将默认被设置为 ]]><monotype>application/x-www-form-urlencoded</monotype><![CDATA[。]]><br /><br /><b>注意：</b><![CDATA[ 许多服务器后端语言无法正确处理带有 ]]><monotype>Content-Type</monotype><![CDATA[ 标头的 ]]><monotype>POST</monotype><![CDATA[ 请求，设置为对 ]]><monotype>application/x-www-form-urlencoded</monotype><![CDATA[ 或 ]]><monotype>multipart/form-data</monotype><![CDATA[ 之外的其他标头进行编码。]]><br /><br /><![CDATA[此方法将一个 ]]><link ref="Networking.DownloadHandlerBuffer">DownloadHandlerBuffer</link><![CDATA[ 附加到 ]]><link ref="Networking.UnityWebRequest">UnityWebRequest</link><![CDATA[。这是为方便起见，因为我们预计大部分用户将使用 ]]><link ref="Networking.DownloadHandler">DownloadHandler</link><![CDATA[ 检查服务器的回复，尤其是对于 REST API 来说。]]><br /><br /><varname>postData</varname><![CDATA[ 中的数据将进行转义，然后通过 ]]><a href="&lt;a …">System.Text.Encoding.UTF8</a><![CDATA[ 解释为字节流。生成的字节流将存储在 ]]><link ref="Networking.UploadHandlerRaw">UploadHandlerRaw</link><![CDATA[ 中，且上传处理程序将被附加到此 UnityWebRequest。]]></Description>
      <Example nocheck="false" convertexample="false">
        <JavaScript><![CDATA[no example available in JavaScript]]></JavaScript>
        <CSharp><![CDATA[
using UnityEngine;
using UnityEngine.Networking;
using System.Collections;]]><br /><br /><![CDATA[public class MyBehavior : ]]><link ref="MonoBehaviour">MonoBehaviour</link><![CDATA[
{
    void Start()
    {
        StartCoroutine(Upload());
    }]]><br /><br /><![CDATA[    IEnumerator Upload()
    {
        ]]><link ref="WWWForm">WWWForm</link><![CDATA[ form = new ]]><link ref="WWWForm">WWWForm</link><![CDATA[();
        form.AddField("myField", "myData");]]><br /><br /><![CDATA[        using (]]><link ref="Networking.UnityWebRequest">UnityWebRequest</link><![CDATA[ www = ]]><link ref="Networking.UnityWebRequest.Post">UnityWebRequest.Post</link><![CDATA[("http://www.my-server.com/myform", form))
        {
            yield return www.SendWebRequest();]]><br /><br /><![CDATA[            if (www.isNetworkError || www.isHttpError)
            {
                ]]><link ref="Debug.Log">Debug.Log</link><![CDATA[(www.error);
            }
            else
            {
                ]]><link ref="Debug.Log">Debug.Log</link><![CDATA[("Form upload complete!");
            }
        }
    }
}
]]></CSharp>
      </Example>
    </Section>
    <Section>
      <Signature>
        <Declaration name="Post" type="function" modifiers="public static" Obsolete="" />
        <ParamElement name="uri" type="string" />
        <ParamElement name="formData" type="WWWForm" hasLink="true" />
        <ReturnType DisplayName="UnityWebRequest" hasLink="true">Networking.UnityWebRequest</ReturnType>
      </Signature>
      <Summary><![CDATA[创建一个经配置可通过 HTTP ]]><monotype>POST</monotype><![CDATA[ 向服务器发送表单数据的 UnityWebRequest。]]></Summary>
      <ParamWithDoc>
        <name>uri</name>
        <doc><![CDATA[要向其传输表单数据的目标 URI。]]></doc>
      </ParamWithDoc>
      <ParamWithDoc>
        <name>formData</name>
        <doc><![CDATA[封装在 ]]><link ref="WWWForm">WWWForm</link><![CDATA[ 对象中的表单字段或文件，用于格式化并传输到远程服务器。]]></doc>
      </ParamWithDoc>
      <ReturnWithDoc type="UnityWebRequest">
        <doc><![CDATA[经配置可通过 ]]><monotype>POST</monotype><![CDATA[ 向 ]]><varname>uri</varname><![CDATA[ 发送表单数据的 UnityWebRequest。]]></doc>
      </ReturnWithDoc>
      <Description><![CDATA[此方法可创建一个 UnityWebRequest，将 ]]><varname>url</varname><![CDATA[ 设置为字符串 ]]><varname>uri</varname><![CDATA[ 参数，并将 ]]><varname>method</varname><![CDATA[ 设置为 ]]><monotype>POST</monotype><![CDATA[。]]><monotype>Content-Type</monotype><![CDATA[ 标头将从 ]]><varname>formData</varname><![CDATA[ 参数中复制。]]><br /><br /><![CDATA[此方法将一个 ]]><link ref="Networking.DownloadHandlerBuffer">DownloadHandlerBuffer</link><![CDATA[ 附加到 ]]><link ref="Networking.UnityWebRequest">UnityWebRequest</link><![CDATA[。这是为方便起见，因为我们预计大部分用户将使用 ]]><link ref="Networking.DownloadHandler">DownloadHandler</link><![CDATA[ 检查服务器的回复，尤其是对于 REST API 来说。]]><br /><br /><varname>formData</varname><![CDATA[ 对象将根据其内容生成适当格式化的字节流。生成的字节流将存储在 ]]><link ref="Networking.UploadHandlerRaw">UploadHandlerRaw</link><![CDATA[ 中，且上传处理程序将附加到此 UnityWebRequest。]]></Description>
      <Example nocheck="false" convertexample="false">
        <JavaScript><![CDATA[no example available in JavaScript]]></JavaScript>
        <CSharp><![CDATA[
using UnityEngine;
using UnityEngine.Networking;
using System.Collections;]]><br /><br /><![CDATA[public class MyBehavior2 : ]]><link ref="MonoBehaviour">MonoBehaviour</link><![CDATA[
{
    void Start()
    {
        StartCoroutine(Upload());
    }]]><br /><br /><![CDATA[    IEnumerator Upload()
    {
        ]]><link ref="WWWForm">WWWForm</link><![CDATA[ form = new ]]><link ref="WWWForm">WWWForm</link><![CDATA[();
        form.AddField("myField", "myData");]]><br /><br /><![CDATA[        ]]><link ref="Networking.UnityWebRequest">UnityWebRequest</link><![CDATA[ www = ]]><link ref="Networking.UnityWebRequest.Post">UnityWebRequest.Post</link><![CDATA[("http://www.my-server.com/myform", form);
        yield return www.SendWebRequest();]]><br /><br /><![CDATA[        if (www.isNetworkError || www.isHttpError)
        {
            ]]><link ref="Debug.Log">Debug.Log</link><![CDATA[(www.error);
        }
        else
        {
            ]]><link ref="Debug.Log">Debug.Log</link><![CDATA[("Form upload complete!");
        }
    }
}
]]></CSharp>
      </Example>
    </Section>
    <Section>
      <Signature>
        <Declaration name="Post" type="function" modifiers="public static" Obsolete="" />
        <ParamElement name="uri" type="string" />
        <ParamElement name="multipartFormSections" type="List&lt;IMultipartFormSection&gt;" />
        <ReturnType DisplayName="UnityWebRequest" hasLink="true">Networking.UnityWebRequest</ReturnType>
      </Signature>
      <Signature>
        <Declaration name="Post" type="function" modifiers="public static" Obsolete="" />
        <ParamElement name="uri" type="string" />
        <ParamElement name="multipartFormSections" type="List&lt;IMultipartFormSection&gt;" />
        <ParamElement name="boundary" type="byte[]" />
        <ReturnType DisplayName="UnityWebRequest" hasLink="true">Networking.UnityWebRequest</ReturnType>
      </Signature>
      <Summary><![CDATA[创建一个经配置可通过 HTTP ]]><monotype>POST</monotype><![CDATA[ 向服务器发送表单数据的 UnityWebRequest。]]></Summary>
      <ParamWithDoc>
        <name>uri</name>
        <doc><![CDATA[要向其传输表单数据的目标 URI。]]></doc>
      </ParamWithDoc>
      <ParamWithDoc>
        <name>multipartFormSections</name>
        <doc><![CDATA[要进行格式化并传输到远程服务器的表单字段或文件的列表。]]></doc>
      </ParamWithDoc>
      <ParamWithDoc>
        <name>boundary</name>
        <doc><![CDATA[唯一边界字符串，将在多部分表单中分隔表单字段时使用。如果未提供，系统将为您生成边界。]]></doc>
      </ParamWithDoc>
      <ReturnWithDoc type="UnityWebRequest">
        <doc><![CDATA[经配置可通过 ]]><monotype>POST</monotype><![CDATA[ 向 ]]><varname>uri</varname><![CDATA[ 发送表单数据的 UnityWebRequest。]]></doc>
      </ReturnWithDoc>
      <Description><![CDATA[此方法可创建一个 UnityWebRequest，将 ]]><varname>url</varname><![CDATA[ 设置为字符串 ]]><varname>uri</varname><![CDATA[ 参数，并将 ]]><varname>method</varname><![CDATA[ 设置为 ]]><monotype>POST</monotype><![CDATA[。]]><monotype>Content-Type</monotype><![CDATA[ 标头将默认被设置为 ]]><monotype>multipart/form-data</monotype><![CDATA[，并带有适当的边界规范。]]><br /><br /><![CDATA[如果您提供自定义的 ]]><varname>boundary</varname><![CDATA[ 字节数组，请注意必须保证字节序列是唯一的且不能出现在表单数据主体中的任何位置。有关多部分表单和表单边界的更多信息，请参阅 ]]><a href="https://www.ietf.org/rfc/rfc2388.txt">RFC 2388</a><![CDATA[。]]><br /><br /><![CDATA[此方法将一个 ]]><link ref="Networking.DownloadHandlerBuffer">DownloadHandlerBuffer</link><![CDATA[ 附加到 ]]><link ref="Networking.UnityWebRequest">UnityWebRequest</link><![CDATA[。这是为方便起见，因为我们预计大部分用户将使用 ]]><link ref="Networking.DownloadHandler">DownloadHandler</link><![CDATA[ 检查服务器的回复，尤其是对于 REST API 来说。]]><br /><br /><varname>multipartFormSections</varname><![CDATA[ 中的 ]]><link ref="Networking.IMultipartFormSection">IMultipartFormSection</link><![CDATA[ 对象列表将被格式化为一个有效的多部分表单主体。每个对象都将被解释为一个离散的表单部分。格式化此多部分表单主体所生成的字节流将存储在 ]]><link ref="Networking.UploadHandlerRaw">UploadHandlerRaw</link><![CDATA[ 中并附加到此 UnityWebRequest。]]><br /><br /><b>使用 IMultipartFormSection</b><br /><br /><![CDATA[为了让您更好地控制您指定表单数据的方式，UnityWebReques 系统包含了一个可由用户实现的 ]]><link ref="Networking.IMultipartFormSection">IMultipartFormSection</link><![CDATA[ 界面。对于标准应用程序，Unity 还提供了数据和文件部分的默认实现。]]><br /><br /><![CDATA[另请参阅：]]><link ref="Networking.MultipartFormDataSection">MultipartFormDataSection</link><![CDATA[ 和 ]]><link ref="Networking.MultipartFormFileSection">MultipartFormFileSection</link><![CDATA[。]]><br /><br /><![CDATA[可为此方法提供一个 IMultipartFormSection 对象列表。列表成员将被格式化为一个多部分表单，由 ]]><a href="https://www.ietf.org/rfc/rfc2388.txt">RFC 2388</a><![CDATA[ 定义。]]><br /><br /><![CDATA[多部分表单需要唯一边界字符串来定义字段之间的分隔。必须保证边界字符串未出现在请求中任何表单字段主体中的任何位置。如果您未提供边界，Unity 将生成一个边界。生成的边界是 40 个随机可打印字节，可有效避免与表单字段数据发生冲突。但是，如果您的应用程序需要您提供自定义边界字符串，您可能需要进行自定义。]]><br /><br /><![CDATA[提供的边界（如果有）将自动从字节数组转换为 UTF8 字符。]]></Description>
      <Example nocheck="false" convertexample="false">
        <JavaScript><![CDATA[no example available in JavaScript]]></JavaScript>
        <CSharp><![CDATA[
using UnityEngine;
using UnityEngine.Networking;
using System.Collections;]]><br /><br /><![CDATA[public class MyBehavior3 : ]]><link ref="MonoBehaviour">MonoBehaviour</link><![CDATA[
{
    void Start()
    {
        StartCoroutine(Upload());
    }]]><br /><br /><![CDATA[    IEnumerator Upload()
    {
        ]]><link ref="WWWForm">WWWForm</link><![CDATA[ form = new ]]><link ref="WWWForm">WWWForm</link><![CDATA[();
        form.AddField("myField", "myData");]]><br /><br /><![CDATA[        ]]><link ref="Networking.UnityWebRequest">UnityWebRequest</link><![CDATA[ www = ]]><link ref="Networking.UnityWebRequest.Post">UnityWebRequest.Post</link><![CDATA[("http://www.my-server.com/myform", form);
        yield return www.SendWebRequest();]]><br /><br /><![CDATA[        if (www.isNetworkError || www.isHttpError)
        {
            ]]><link ref="Debug.Log">Debug.Log</link><![CDATA[(www.error);
        }
        else
        {
            ]]><link ref="Debug.Log">Debug.Log</link><![CDATA[("Form upload complete!");
        }
    }
}
]]></CSharp>
      </Example>
    </Section>
    <Section>
      <Signature>
        <Declaration name="Post" type="function" modifiers="public static" Obsolete="" />
        <ParamElement name="uri" type="string" />
        <ParamElement name="formFields" type="Dictionary&lt;string,string&gt;" />
        <ReturnType DisplayName="UnityWebRequest" hasLink="true">Networking.UnityWebRequest</ReturnType>
      </Signature>
      <Summary><![CDATA[创建一个经配置可通过 HTTP ]]><monotype>POST</monotype><![CDATA[ 向服务器发送表单数据的 UnityWebRequest。]]></Summary>
      <ParamWithDoc>
        <name>uri</name>
        <doc><![CDATA[要向其传输表单数据的目标 URI。]]></doc>
      </ParamWithDoc>
      <ParamWithDoc>
        <name>formFields</name>
        <doc><![CDATA[用于表示表单字段的键和值的字符串。将自动格式化为经过 URL 编码的表单主体。]]></doc>
      </ParamWithDoc>
      <ReturnWithDoc type="UnityWebRequest">
        <doc><![CDATA[经配置可通过 ]]><monotype>POST</monotype><![CDATA[ 向 ]]><varname>uri</varname><![CDATA[ 发送表单数据的 UnityWebRequest。]]></doc>
      </ReturnWithDoc>
      <Description><![CDATA[此方法可创建一个 UnityWebRequest，将 ]]><varname>url</varname><![CDATA[ 设置为字符串 ]]><varname>uri</varname><![CDATA[ 参数，并将 ]]><varname>method</varname><![CDATA[ 设置为 ]]><monotype>POST</monotype><![CDATA[。]]><monotype>Content-Type</monotype><![CDATA[ 标头将被设置为 ]]><monotype>application/x-www-form-urlencoded</monotype><![CDATA[。]]><br /><br /><varname>formFields</varname><![CDATA[ 中的字符串字典将被解释为一个表单字段列表，其字段 ID 是字典键，其字段值为字典值。键和值都将进行转义，然后加入到经过 URL 编码的表单字符串。（例如，]]><monotype>key1=value1&amp;key2=value2</monotype><![CDATA[）。]]><br /><br /><![CDATA[此方法默认将一个 ]]><link ref="Networking.DownloadHandlerBuffer">DownloadHandlerBuffer</link><![CDATA[ 附加到 ]]><link ref="Networking.UnityWebRequest">UnityWebRequest</link><![CDATA[。这是为方便起见，因为我们预计大部分用户将使用 ]]><link ref="Networking.DownloadHandler">DownloadHandler</link><![CDATA[ 检查服务器的回复，尤其是对于 REST API 来说。]]><br /><br /><![CDATA[从 ]]><varname>formFields</varname><![CDATA[ 生成的经过 URL 编码的表单字符串将被转换为字节流，并存储在一个将附加到此 UnityWebRequest 的 ]]><link ref="Networking.UploadHandlerRaw">UploadHandlerRaw</link><![CDATA[ 中。]]></Description>
      <Example nocheck="false" convertexample="false">
        <JavaScript><![CDATA[no example available in JavaScript]]></JavaScript>
        <CSharp><![CDATA[
using UnityEngine;
using UnityEngine.Networking;
using System.Collections;]]><br /><br /><![CDATA[public class MyBehavior4 : ]]><link ref="MonoBehaviour">MonoBehaviour</link><![CDATA[
{
    void Start()
    {
        StartCoroutine(Upload());
    }]]><br /><br /><![CDATA[    IEnumerator Upload()
    {
        ]]><link ref="WWWForm">WWWForm</link><![CDATA[ form = new ]]><link ref="WWWForm">WWWForm</link><![CDATA[();
        form.AddField("myField", "myData");]]><br /><br /><![CDATA[        ]]><link ref="Networking.UnityWebRequest">UnityWebRequest</link><![CDATA[ www = ]]><link ref="Networking.UnityWebRequest.Post">UnityWebRequest.Post</link><![CDATA[("http://www.my-server.com/myform", form);
        yield return www.SendWebRequest();]]><br /><br /><![CDATA[        if (www.isNetworkError || www.isHttpError)
        {
            ]]><link ref="Debug.Log">Debug.Log</link><![CDATA[(www.error);
        }
        else
        {
            ]]><link ref="Debug.Log">Debug.Log</link><![CDATA[("Form upload complete!");
        }
    }
}
]]></CSharp>
      </Example>
    </Section>
  </Model>
</Root>
