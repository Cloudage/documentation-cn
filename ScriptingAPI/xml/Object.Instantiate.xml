<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Root LongForm="false">
  <vars>
    <docs_type>ScriptReference</docs_type>
    <lang>zh_CN</lang>
    <unity_version>2018.1</unity_version>
    <current_docs_url>https://docs.unity3d.com/zh_CN/2018.1/</current_docs_url>
    <docs_versions>
      <docs_version version="2019.1">2019.1</docs_version>
      <docs_version version="2018.3">2018.3</docs_version>
      <docs_version version="2018.2">2018.2</docs_version>
      <docs_version version="2018.1">2018.1</docs_version>
      <docs_version version="2017.4">2017.4</docs_version>
      <docs_version version="2017.3">2017.3</docs_version>
      <docs_version version="2017.2">2017.2</docs_version>
      <docs_version version="2017.1">2017.1</docs_version>
      <docs_version version="5.6">560</docs_version>
      <docs_version version="5.5">550</docs_version>
      <docs_version version="5.4">540</docs_version>
      <docs_version version="5.3">530</docs_version>
    </docs_versions>
    <langname>中文</langname>
    <unity_url>https://unity3d.com/</unity_url>
    <current_docs_version version="2018.1">2018.1</current_docs_version>
    <jquery_js_url>../StaticFiles/js/jquery.js</jquery_js_url>
    <jquery_sidebar_url>../StaticFiles/js/jquery.sidebar.min.js</jquery_sidebar_url>
    <custom_js_url>../StaticFiles/js/custom.js</custom_js_url>
    <core_js_url>../StaticFiles/js/core.js</core_js_url>
    <core_css_url>../StaticFiles/css/core.css</core_css_url>
    <custom_css_url>../StaticFiles/css/custom.css</custom_css_url>
    <toc_js_url>docdata/toc.js</toc_js_url>
    <index_js_url>docdata/index.js</index_js_url>
    <langs>
      <lang locale="en">English</lang>
      <lang locale="ja">日本語</lang>
      <lang locale="es">Español</lang>
      <lang locale="kr">한국어</lang>
    </langs>
    <translation>
      <unity_tech>Unity Technologies</unity_tech>
      <unity_url>https://unity3d.com/</unity_url>
      <manual>Manual</manual>
      <scripting_api>Scripting API</scripting_api>
      <learn>Learn</learn>
      <learn_url>https://unity3d.com/learn</learn_url>
      <tutorials>Tutorials</tutorials>
      <tutorials_url>https://unity3d.com/learn</tutorials_url>
      <knowledgebase>Knowledge Base</knowledgebase>
      <knowledgebase_url>https://support.unity3d.com/hc/en-us</knowledgebase_url>
      <live_training>Live Training</live_training>
      <premium_support>Premium Support</premium_support>
      <community>Community</community>
      <community_url>https://unity3d.com/community</community_url>
      <community_answers>Community Answers</community_answers>
      <community_answers_url>https://answers.unity3d.com</community_answers_url>
      <forums>Forums</forums>
      <forums_url>https://forum.unity3d.com</forums_url>
      <answers>Answers</answers>
      <feedback>Feedback</feedback>
      <issuetracker>Issue Tracker</issuetracker>
      <unity_manual>Unity Manual</unity_manual>
      <unity_dash_manual>Unity - Manual</unity_dash_manual>
      <full_table_of_contents>Full table of contents</full_table_of_contents>
      <copyright>Copyright © 2018 Unity Technologies</copyright>
      <unity>Unity</unity>
      <gallery>Gallery</gallery>
      <asset_store>Asset Store</asset_store>
      <assetstore_url>https://unity3d.com/asset-store</assetstore_url>
      <buy>Buy</buy>
      <buy_url>https://store.unity3d.com</buy_url>
      <download>Download</download>
      <download_url>https://unity3d.com/unity/download</download_url>
      <language>Language</language>
      <previous>Previous</previous>
      <next>Next</next>
      <switch_to_manual>Switch to Manual</switch_to_manual>
      <switch_to_scriptref>Switch to Scripting Reference</switch_to_scriptref>
      <docs_url>https://docs.unity3d.com</docs_url>
      <help_trans>Help translating this page</help_trans>
      <search_placeholder>Search manual...</search_placeholder>
      <search_scripting_placeholder>Search scripting...</search_scripting_placeholder>
      <script_language>Script language</script_language>
      <script_language_body>Select your preferred scripting language. All code snippets will be displayed in this language.</script_language_body>
      <history>History</history>
      <inherits_from>Inherits from:</inherits_from>
      <implements_interfaces>Implements interfaces:</implements_interfaces>
      <suggest_a_change>Suggest a change</suggest_a_change>
      <suggest_success>Success!</suggest_success>
      <suggest_success_body>Thank you for helping us improve the quality of Unity Documentation. Although we cannot accept all submissions, we do read each suggested change from our users and will make updates where applicable.</suggest_success_body>
      <suggest_clone>Close</suggest_clone>
      <suggest_failed>Sumbission failed</suggest_failed>
      <suggest_failed_body>For some reason your suggested change could not be submitted. Please &lt;a&gt;try again&lt;/a&gt; in a few minutes. And thank you for taking the time to help us improve the quality of Unity Documentation.</suggest_failed_body>
      <suggest_name>Your name</suggest_name>
      <suggest_email>Your email</suggest_email>
      <suggest_body>Suggestion</suggest_body>
      <suggest_submit>Submit suggestion</suggest_submit>
      <suggest_cancel>Cancel</suggest_cancel>
      <parameters>Parameters</parameters>
      <returns>Returns</returns>
      <description>Description</description>
      <static_variables>Static Variables</static_variables>
      <variables>Variables</variables>
      <constructors>Constructors</constructors>
      <public_functions>Public Functions</public_functions>
      <protected_functions>Protected Functions</protected_functions>
      <static_functions>Static Functions</static_functions>
      <operators>Operators</operators>
      <messages>Messages</messages>
      <delegates>Delegates</delegates>
      <events>Events</events>
      <inherited_members>Inherited members</inherited_members>
      <intro>欢迎使用 Unity Scripting Reference（脚本引用）！</intro>
      <intro_body_1>文档的这部分包含 Unity 提供的脚本 API 的详细信息。要使用这些信息，您应该了解 Unity 中脚本编写的基本理论和实践。我们使用手册的&lt;a href="../Manual/ScriptingSection.html"&gt; Scripting（脚本）部分&lt;/a&gt;对此进行了解释。</intro_body_1>
      <intro_body_2>脚本引用文档是根据脚本可用的类建立的，同时会描述这些类的方法、属性以及任何与它们的用法相关的信息。</intro_body_2>
      <intro_body_3>这些页面配有大量的示例代码，您可以将这些示例代码用于任何目的，而无需说明源自 Unity。此外，您可以使用每个页面顶部的菜单以 &lt;b&gt;C#&lt;/b&gt; 或 &lt;b&gt;JavaScript&lt;/b&gt; 查看示例代码。请注意，无论使用哪种编程语言，API 都是相同的，所以编程语言的选择完全取决于您的喜好。</intro_body_3>
      <intro_body_4>API 按其所属的 namespace 进行分组，可以从左侧的侧栏中选择。对于大多数用户，&lt;b&gt;UnityEngine&lt;/b&gt; 部分将是主要的调用端口。</intro_body_4>
      <classes>Classes</classes>
      <enumerations>Enumerations</enumerations>
      <attributes>Attributes</attributes>
      <api_histroy>API History</api_histroy>
      <api_histroy_body>Overview of additions to (and removals from) Unity's scripting API in each version.</api_histroy_body>
      <api_histroy_name>Name</api_histroy_name>
      <api_histroy_type>Type</api_histroy_type>
      <api_histroy_namespace>Namespace</api_histroy_namespace>
      <api_histroy_status>Status</api_histroy_status>
      <api_histroy_version>Version</api_histroy_version>
      <api_histroy_added>added</api_histroy_added>
      <api_histroy_obsolete>obsolete</api_histroy_obsolete>
      <api_histroy_removed>removed</api_histroy_removed>
      <known_issues>
        <p>这里描述的内容与实际不符？它可能是<b>已知问题</b>。请在 Issue Tracker（<a href="https://issuetracker.unity3d.com">issuetracker.unity3d.com</a>）中查看。</p>
      </known_issues>
      <rate_content>这个页面中的信息对您有帮助吗？请为它打分：</rate_content>
      <rate_thanks>Thanks for rating this page!</rate_thanks>
      <report_problem>报告此页面中的问题</report_problem>
      <problem_type>What kind of problem would you like to report?</problem_type>
      <problem_needcode>This page needs code samples</problem_needcode>
      <problem_code>Code samples do not work</problem_code>
      <problem_missing>Information is missing</problem_missing>
      <problem_incorrect>Information is incorrect</problem_incorrect>
      <problem_unclear>Information is unclear or confusing</problem_unclear>
      <problem_language>There is a spelling/grammar error on this page</problem_language>
      <problem_other>Something else</problem_other>
      <problem_thanks>Thanks for letting us know! This page has been marked for review based on your feedback.</problem_thanks>
      <problem_more_info>If you have time, you can provide more information to help us fix the problem faster.</problem_more_info>
      <problem_more_info_link>Provide more information</problem_more_info_link>
      <problem_needcode_form_description>You've told us this page needs code samples. If you'd like to help us further, you could provide a code sample, or tell us about what kind of code sample you'd like to see:</problem_needcode_form_description>
      <problem_code_form_description>You've told us there are code samples on this page which don't work. If you know how to fix it, or have something better we could use instead, please let us know:</problem_code_form_description>
      <problem_missing_form_description>You've told us there is information missing from this page. Please tell us more about what's missing:</problem_missing_form_description>
      <problem_incorrect_form_description>You've told us there is incorrect information on this page. If you know what we should change to make it correct, please tell us:</problem_incorrect_form_description>
      <problem_unclear_form_description>You've told us this page has unclear or confusing information. Please tell us more about what you found unclear or confusing, or let us know how we could make it clearer:</problem_unclear_form_description>
      <problem_language_form_description>You've told us there is a spelling or grammar error on this page. Please tell us what's wrong:</problem_language_form_description>
      <problem_other_form_description>You've told us this page has a problem. Please tell us more about what's wrong:</problem_other_form_description>
      <problem_more_info_thanks>Thanks for helping to make the Unity documentation better!</problem_more_info_thanks>
      <leave_feedback>Leave feedback</leave_feedback>
    </translation>
  </vars>
  <Model>
    <ParentClass>Object</ParentClass>
    <Section>
      <Signature>
        <Declaration name="Instantiate" type="function" modifiers="public static" Obsolete="" />
        <ParamElement name="original" type="Object" hasLink="true" />
        <ReturnType>Object</ReturnType>
      </Signature>
      <Signature>
        <Declaration name="Instantiate" type="function" modifiers="public static" Obsolete="" />
        <ParamElement name="original" type="Object" hasLink="true" />
        <ParamElement name="parent" type="Transform" hasLink="true" />
        <ReturnType>Object</ReturnType>
      </Signature>
      <Signature>
        <Declaration name="Instantiate" type="function" modifiers="public static" Obsolete="" />
        <ParamElement name="original" type="Object" hasLink="true" />
        <ParamElement name="parent" type="Transform" hasLink="true" />
        <ParamElement name="instantiateInWorldSpace" type="bool" />
        <ReturnType>Object</ReturnType>
      </Signature>
      <Signature>
        <Declaration name="Instantiate" type="function" modifiers="public static" Obsolete="" />
        <ParamElement name="original" type="Object" hasLink="true" />
        <ParamElement name="position" type="Vector3" hasLink="true" />
        <ParamElement name="rotation" type="Quaternion" hasLink="true" />
        <ReturnType>Object</ReturnType>
      </Signature>
      <Signature>
        <Declaration name="Instantiate" type="function" modifiers="public static" Obsolete="" />
        <ParamElement name="original" type="Object" hasLink="true" />
        <ParamElement name="position" type="Vector3" hasLink="true" />
        <ParamElement name="rotation" type="Quaternion" hasLink="true" />
        <ParamElement name="parent" type="Transform" hasLink="true" />
        <ReturnType>Object</ReturnType>
      </Signature>
      <Summary><![CDATA[克隆 ]]><varname>original</varname><![CDATA[ 对象并返回克隆对象。]]></Summary>
      <ParamWithDoc>
        <name>original</name>
        <doc><![CDATA[要复制的现有对象。]]></doc>
      </ParamWithDoc>
      <ParamWithDoc>
        <name>position</name>
        <doc><![CDATA[新对象的位置。]]></doc>
      </ParamWithDoc>
      <ParamWithDoc>
        <name>rotation</name>
        <doc><![CDATA[新对象的方向。]]></doc>
      </ParamWithDoc>
      <ParamWithDoc>
        <name>parent</name>
        <doc><![CDATA[将指定给新对象的父对象。]]></doc>
      </ParamWithDoc>
      <ParamWithDoc>
        <name>instantiateInWorldSpace</name>
        <doc><![CDATA[要以指定父对象的方式保持该对象的世界位置（而不是相对于新父对象设置其位置），请传递 true。要相对于该对象的新父对象设置其位置，请传递 false。]]></doc>
      </ParamWithDoc>
      <ReturnWithDoc type="Object">
        <doc><![CDATA[实例化的克隆对象。]]></doc>
      </ReturnWithDoc>
      <Description><![CDATA[该函数以与 Editor 中的“Duplicate”命令类似的方式创建对象的副本。如果要克隆的是 ]]><link ref="GameObject">GameObject</link><![CDATA[，也可以选择指定其位置和旋转（否则，默认为原始 GameObject 的位置和旋转）。如果克隆的是 ]]><link ref="Component">Component</link><![CDATA[，也将克隆其附加到的 GameObject，此时也可指定可选的位置和旋转。]]><br /><br /><![CDATA[克隆 ]]><link ref="GameObject">GameObject</link><![CDATA[ 或 ]]><link ref="Component">Component</link><![CDATA[ 时，也将克隆所有子对象和组件，它们的属性设置与原始对象相同。]]><br /><br /><![CDATA[默认情况下，新对象的]]><i>父对象</i><![CDATA[ 将为 null，因此它与原始对象不“同级”。但是，您可以使用重载方法设置父对象。如果指定了父对象但未指定位置和旋转，则使用原始对象的位置和旋转作为克隆对象的本地位置和旋转；如果 instantiateInWorldSpace 参数为 true，则使用原始对象的世界位置和旋转。如果指定了位置和旋转，则使用它们作为该对象在世界空间中的位置和旋转。]]><br /><br /><![CDATA[克隆时将传递 GameObject 的激活状态，因此，如果原始对象处于非激活状态，则克隆对象也将创建为非激活状态。]]><br /><br /><![CDATA[See Also: ]]><link ref="../Manual/InstantiatingPrefabs">In depth Prefab Instantiate discussion</link><![CDATA[.]]></Description>
      <Example nocheck="false" convertexample="true">
        <JavaScript><![CDATA[no example available in JavaScript]]></JavaScript>
        <CSharp><![CDATA[
// Instantiates 10 copies of prefab each 2 units apart from each other]]><br /><br /><![CDATA[using UnityEngine;
using System.Collections;]]><br /><br /><![CDATA[public class ExampleClass : ]]><link ref="MonoBehaviour">MonoBehaviour</link><![CDATA[
{
    public ]]><link ref="Transform">Transform</link><![CDATA[ prefab;
    void Start()
    {
        for (int i = 0; i < 10; i++)
        {
            Instantiate(prefab, new ]]><link ref="Vector3">Vector3</link><![CDATA[(i * 2.0F, 0, 0), ]]><link ref="Quaternion-identity">Quaternion.identity</link><![CDATA[);
        }
    }
}
]]></CSharp>
      </Example>
      <Description><![CDATA[Instantiate 最常用于实例化飞弹、AI 敌人、粒子爆炸或毁坏对象替换。]]></Description>
      <Example nocheck="false" convertexample="true">
        <JavaScript><![CDATA[
    // Instantiate a rigidbody then set the velocity]]><br /><br /><![CDATA[    var projectile : ]]><link ref="Rigidbody">Rigidbody</link><![CDATA[;]]><br /><br /><![CDATA[    function ]]><link ref="Experimental.PlayerLoop.Update">Update</link><![CDATA[ () {
        // Ctrl was pressed, launch a projectile
        if (]]><link ref="Input.GetButtonDown">Input.GetButtonDown</link><![CDATA[("Fire1")) {
            // Instantiate the projectile at the position and rotation of this transform
            var clone : ]]><link ref="Rigidbody">Rigidbody</link><![CDATA[;
            clone = Instantiate(projectile, transform.position, transform.rotation);]]><br /><br /><![CDATA[            // Give the cloned object an initial velocity along the current
            // object's Z axis
            clone.velocity = transform.TransformDirection (]]><link ref="Vector3-forward">Vector3.forward</link><![CDATA[ * 10);
        }
    }
]]></JavaScript>
        <CSharp><![CDATA[no example available in C#]]></CSharp>
      </Example>
      <Description><![CDATA[Instantiate 也可以直接克隆脚本实例。
将克隆整个游戏对象层级视图，并返回克隆的脚本实例。]]></Description>
      <Example nocheck="false" convertexample="false">
        <JavaScript><![CDATA[
public class Missile : ]]><link ref="MonoBehaviour">MonoBehaviour</link><![CDATA[ {
    public int timeoutDestructor;]]><br /><br /><![CDATA[    // ...other code...
}]]><br /><br /><![CDATA[    // Instantiate a prefab with an attached Missile script
    var projectile : Missile;]]><br /><br /><![CDATA[    function ]]><link ref="Experimental.PlayerLoop.Update">Update</link><![CDATA[ () {
        // Ctrl was pressed, launch a projectile
        if (]]><link ref="Input.GetButtonDown">Input.GetButtonDown</link><![CDATA[("Fire1")) {
            // Instantiate the projectile at the position and rotation of this transform
            var clone : Missile;
            clone = Instantiate(projectile, transform.position, transform.rotation);]]><br /><br /><![CDATA[            // Set the missiles timeout destructor to 5
            clone.timeoutDestructor = 5;
        }
    }
]]></JavaScript>
        <CSharp><![CDATA[
using UnityEngine;
using System.Collections;]]><br /><br /><![CDATA[public class Missile : ]]><link ref="MonoBehaviour">MonoBehaviour</link><![CDATA[
{
    public int timeoutDestructor;]]><br /><br /><![CDATA[    // ...other code...
}]]><br /><br /><![CDATA[
public class ExampleClass : ]]><link ref="MonoBehaviour">MonoBehaviour</link><![CDATA[
{
    // Instantiate a prefab with an attached Missile script
    public Missile projectile;]]><br /><br /><![CDATA[    void ]]><link ref="Experimental.PlayerLoop.Update">Update</link><![CDATA[()
    {
        // Ctrl was pressed, launch a projectile
        if (]]><link ref="Input.GetButtonDown">Input.GetButtonDown</link><![CDATA[("Fire1"))
        {
            // Instantiate the projectile at the position and rotation of this transform
            Missile clone = (Missile)Instantiate(projectile, transform.position, transform.rotation);]]><br /><br /><![CDATA[            // Set the missiles timeout destructor to 5
            clone.timeoutDestructor = 5;
        }
    }
}
]]></CSharp>
      </Example>
      <Description><![CDATA[克隆对象后，您还可以使用 GetComponent 设置附加到克隆对象的特定组件的属性。]]></Description>
    </Section>
    <Section>
      <Signature>
        <Declaration name="Instantiate" type="function" modifiers="public static" Obsolete="" />
        <ParamElement name="original" type="T" />
        <ReturnType>T</ReturnType>
      </Signature>
      <Signature>
        <Declaration name="Instantiate" type="function" modifiers="public static" Obsolete="" />
        <ParamElement name="original" type="T" />
        <ParamElement name="parent" type="Transform" hasLink="true" />
        <ReturnType>T</ReturnType>
      </Signature>
      <Signature>
        <Declaration name="Instantiate" type="function" modifiers="public static" Obsolete="" />
        <ParamElement name="original" type="T" />
        <ParamElement name="parent" type="Transform" hasLink="true" />
        <ParamElement name="worldPositionStays" type="bool" />
        <ReturnType>T</ReturnType>
      </Signature>
      <Signature>
        <Declaration name="Instantiate" type="function" modifiers="public static" Obsolete="" />
        <ParamElement name="original" type="T" />
        <ParamElement name="position" type="Vector3" hasLink="true" />
        <ParamElement name="rotation" type="Quaternion" hasLink="true" />
        <ReturnType>T</ReturnType>
      </Signature>
      <Signature>
        <Declaration name="Instantiate" type="function" modifiers="public static" Obsolete="" />
        <ParamElement name="original" type="T" />
        <ParamElement name="position" type="Vector3" hasLink="true" />
        <ParamElement name="rotation" type="Quaternion" hasLink="true" />
        <ParamElement name="parent" type="Transform" hasLink="true" />
        <ReturnType>T</ReturnType>
      </Signature>
      <Summary><![CDATA[您还可以使用泛型来实例化对象。有关更多详细信息，请参阅]]><link ref="../Manual/GenericFunctions">泛型函数</link><![CDATA[页面。]]></Summary>
      <ParamWithDoc>
        <name>original</name>
        <doc><![CDATA[要克隆的类型为 T 的对象。]]></doc>
      </ParamWithDoc>
      <ParamWithDoc>
        <name>parent</name>
        <doc><![CDATA[]]></doc>
      </ParamWithDoc>
      <ParamWithDoc>
        <name>worldPositionStays</name>
        <doc><![CDATA[]]></doc>
      </ParamWithDoc>
      <ParamWithDoc>
        <name>position</name>
        <doc><![CDATA[]]></doc>
      </ParamWithDoc>
      <ParamWithDoc>
        <name>rotation</name>
        <doc><![CDATA[]]></doc>
      </ParamWithDoc>
      <ReturnWithDoc type="T">
        <doc><![CDATA[类型为 T 的对象。]]></doc>
      </ReturnWithDoc>
      <Description><![CDATA[在该示例中，我们将再次实例化导弹对象，但由于使用了泛型，我们不需要转换结果：]]></Description>
      <Example nocheck="false" convertexample="true">
        <JavaScript><![CDATA[no example available in JavaScript]]></JavaScript>
        <CSharp><![CDATA[
using UnityEngine;]]><br /><br /><![CDATA[public class InstantiateGenericsExample : ]]><link ref="MonoBehaviour">MonoBehaviour</link><![CDATA[
{
    public Missile missile;]]><br /><br /><![CDATA[    void Start()
    {
        Missile missileCopy = Instantiate<Missile>(missile);
    }
}
]]></CSharp>
      </Example>
    </Section>
  </Model>
</Root>
