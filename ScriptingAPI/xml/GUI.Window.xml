<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Root LongForm="false">
  <vars>
    <docs_type>ScriptReference</docs_type>
    <lang>zh_CN</lang>
    <unity_version>2018.1</unity_version>
    <current_docs_url>https://docs.unity3d.com/zh_CN/2018.1/</current_docs_url>
    <docs_versions>
      <docs_version version="2019.1">2019.1</docs_version>
      <docs_version version="2018.3">2018.3</docs_version>
      <docs_version version="2018.2">2018.2</docs_version>
      <docs_version version="2018.1">2018.1</docs_version>
      <docs_version version="2017.4">2017.4</docs_version>
      <docs_version version="2017.3">2017.3</docs_version>
      <docs_version version="2017.2">2017.2</docs_version>
      <docs_version version="2017.1">2017.1</docs_version>
      <docs_version version="5.6">560</docs_version>
      <docs_version version="5.5">550</docs_version>
      <docs_version version="5.4">540</docs_version>
      <docs_version version="5.3">530</docs_version>
    </docs_versions>
    <langname>中文</langname>
    <unity_url>https://unity3d.com/</unity_url>
    <current_docs_version version="2018.1">2018.1</current_docs_version>
    <jquery_js_url>../StaticFiles/js/jquery.js</jquery_js_url>
    <jquery_sidebar_url>../StaticFiles/js/jquery.sidebar.min.js</jquery_sidebar_url>
    <custom_js_url>../StaticFiles/js/custom.js</custom_js_url>
    <core_js_url>../StaticFiles/js/core.js</core_js_url>
    <core_css_url>../StaticFiles/css/core.css</core_css_url>
    <custom_css_url>../StaticFiles/css/custom.css</custom_css_url>
    <toc_js_url>docdata/toc.js</toc_js_url>
    <index_js_url>docdata/index.js</index_js_url>
    <langs>
      <lang locale="en">English</lang>
      <lang locale="ja">日本語</lang>
      <lang locale="es">Español</lang>
      <lang locale="kr">한국어</lang>
    </langs>
    <translation>
      <unity_tech>Unity Technologies</unity_tech>
      <unity_url>https://unity3d.com/</unity_url>
      <manual>Manual</manual>
      <scripting_api>Scripting API</scripting_api>
      <learn>Learn</learn>
      <learn_url>https://unity3d.com/learn</learn_url>
      <tutorials>Tutorials</tutorials>
      <tutorials_url>https://unity3d.com/learn</tutorials_url>
      <knowledgebase>Knowledge Base</knowledgebase>
      <knowledgebase_url>https://support.unity3d.com/hc/en-us</knowledgebase_url>
      <live_training>Live Training</live_training>
      <premium_support>Premium Support</premium_support>
      <community>Community</community>
      <community_url>https://unity3d.com/community</community_url>
      <community_answers>Community Answers</community_answers>
      <community_answers_url>https://answers.unity3d.com</community_answers_url>
      <forums>Forums</forums>
      <forums_url>https://forum.unity3d.com</forums_url>
      <answers>Answers</answers>
      <feedback>Feedback</feedback>
      <issuetracker>Issue Tracker</issuetracker>
      <unity_manual>Unity Manual</unity_manual>
      <unity_dash_manual>Unity - Manual</unity_dash_manual>
      <full_table_of_contents>Full table of contents</full_table_of_contents>
      <copyright>Copyright © 2018 Unity Technologies</copyright>
      <unity>Unity</unity>
      <gallery>Gallery</gallery>
      <asset_store>Asset Store</asset_store>
      <assetstore_url>https://unity3d.com/asset-store</assetstore_url>
      <buy>Buy</buy>
      <buy_url>https://store.unity3d.com</buy_url>
      <download>Download</download>
      <download_url>https://unity3d.com/unity/download</download_url>
      <language>Language</language>
      <previous>Previous</previous>
      <next>Next</next>
      <switch_to_manual>Switch to Manual</switch_to_manual>
      <switch_to_scriptref>Switch to Scripting Reference</switch_to_scriptref>
      <docs_url>https://docs.unity3d.com</docs_url>
      <help_trans>Help translating this page</help_trans>
      <search_placeholder>Search manual...</search_placeholder>
      <search_scripting_placeholder>Search scripting...</search_scripting_placeholder>
      <script_language>Script language</script_language>
      <script_language_body>Select your preferred scripting language. All code snippets will be displayed in this language.</script_language_body>
      <history>History</history>
      <inherits_from>Inherits from:</inherits_from>
      <implements_interfaces>Implements interfaces:</implements_interfaces>
      <suggest_a_change>Suggest a change</suggest_a_change>
      <suggest_success>Success!</suggest_success>
      <suggest_success_body>Thank you for helping us improve the quality of Unity Documentation. Although we cannot accept all submissions, we do read each suggested change from our users and will make updates where applicable.</suggest_success_body>
      <suggest_clone>Close</suggest_clone>
      <suggest_failed>Sumbission failed</suggest_failed>
      <suggest_failed_body>For some reason your suggested change could not be submitted. Please &lt;a&gt;try again&lt;/a&gt; in a few minutes. And thank you for taking the time to help us improve the quality of Unity Documentation.</suggest_failed_body>
      <suggest_name>Your name</suggest_name>
      <suggest_email>Your email</suggest_email>
      <suggest_body>Suggestion</suggest_body>
      <suggest_submit>Submit suggestion</suggest_submit>
      <suggest_cancel>Cancel</suggest_cancel>
      <parameters>Parameters</parameters>
      <returns>Returns</returns>
      <description>Description</description>
      <static_variables>Static Variables</static_variables>
      <variables>Variables</variables>
      <constructors>Constructors</constructors>
      <public_functions>Public Functions</public_functions>
      <protected_functions>Protected Functions</protected_functions>
      <static_functions>Static Functions</static_functions>
      <operators>Operators</operators>
      <messages>Messages</messages>
      <delegates>Delegates</delegates>
      <events>Events</events>
      <inherited_members>Inherited members</inherited_members>
      <intro>欢迎使用 Unity Scripting Reference（脚本引用）！</intro>
      <intro_body_1>文档的这部分包含 Unity 提供的脚本 API 的详细信息。要使用这些信息，您应该了解 Unity 中脚本编写的基本理论和实践。我们使用手册的&lt;a href="../Manual/ScriptingSection.html"&gt; Scripting（脚本）部分&lt;/a&gt;对此进行了解释。</intro_body_1>
      <intro_body_2>脚本引用文档是根据脚本可用的类建立的，同时会描述这些类的方法、属性以及任何与它们的用法相关的信息。</intro_body_2>
      <intro_body_3>这些页面配有大量的示例代码，您可以将这些示例代码用于任何目的，而无需说明源自 Unity。此外，您可以使用每个页面顶部的菜单以 &lt;b&gt;C#&lt;/b&gt; 或 &lt;b&gt;JavaScript&lt;/b&gt; 查看示例代码。请注意，无论使用哪种编程语言，API 都是相同的，所以编程语言的选择完全取决于您的喜好。</intro_body_3>
      <intro_body_4>API 按其所属的 namespace 进行分组，可以从左侧的侧栏中选择。对于大多数用户，&lt;b&gt;UnityEngine&lt;/b&gt; 部分将是主要的调用端口。</intro_body_4>
      <classes>Classes</classes>
      <enumerations>Enumerations</enumerations>
      <attributes>Attributes</attributes>
      <api_histroy>API History</api_histroy>
      <api_histroy_body>Overview of additions to (and removals from) Unity's scripting API in each version.</api_histroy_body>
      <api_histroy_name>Name</api_histroy_name>
      <api_histroy_type>Type</api_histroy_type>
      <api_histroy_namespace>Namespace</api_histroy_namespace>
      <api_histroy_status>Status</api_histroy_status>
      <api_histroy_version>Version</api_histroy_version>
      <api_histroy_added>added</api_histroy_added>
      <api_histroy_obsolete>obsolete</api_histroy_obsolete>
      <api_histroy_removed>removed</api_histroy_removed>
      <known_issues>
        <p>这里描述的内容与实际不符？它可能是<b>已知问题</b>。请在 Issue Tracker（<a href="https://issuetracker.unity3d.com">issuetracker.unity3d.com</a>）中查看。</p>
      </known_issues>
      <rate_content>这个页面中的信息对您有帮助吗？请为它打分：</rate_content>
      <rate_thanks>Thanks for rating this page!</rate_thanks>
      <report_problem>报告此页面中的问题</report_problem>
      <problem_type>What kind of problem would you like to report?</problem_type>
      <problem_needcode>This page needs code samples</problem_needcode>
      <problem_code>Code samples do not work</problem_code>
      <problem_missing>Information is missing</problem_missing>
      <problem_incorrect>Information is incorrect</problem_incorrect>
      <problem_unclear>Information is unclear or confusing</problem_unclear>
      <problem_language>There is a spelling/grammar error on this page</problem_language>
      <problem_other>Something else</problem_other>
      <problem_thanks>Thanks for letting us know! This page has been marked for review based on your feedback.</problem_thanks>
      <problem_more_info>If you have time, you can provide more information to help us fix the problem faster.</problem_more_info>
      <problem_more_info_link>Provide more information</problem_more_info_link>
      <problem_needcode_form_description>You've told us this page needs code samples. If you'd like to help us further, you could provide a code sample, or tell us about what kind of code sample you'd like to see:</problem_needcode_form_description>
      <problem_code_form_description>You've told us there are code samples on this page which don't work. If you know how to fix it, or have something better we could use instead, please let us know:</problem_code_form_description>
      <problem_missing_form_description>You've told us there is information missing from this page. Please tell us more about what's missing:</problem_missing_form_description>
      <problem_incorrect_form_description>You've told us there is incorrect information on this page. If you know what we should change to make it correct, please tell us:</problem_incorrect_form_description>
      <problem_unclear_form_description>You've told us this page has unclear or confusing information. Please tell us more about what you found unclear or confusing, or let us know how we could make it clearer:</problem_unclear_form_description>
      <problem_language_form_description>You've told us there is a spelling or grammar error on this page. Please tell us what's wrong:</problem_language_form_description>
      <problem_other_form_description>You've told us this page has a problem. Please tell us more about what's wrong:</problem_other_form_description>
      <problem_more_info_thanks>Thanks for helping to make the Unity documentation better!</problem_more_info_thanks>
      <leave_feedback>Leave feedback</leave_feedback>
    </translation>
  </vars>
  <Model>
    <ParentClass>GUI</ParentClass>
    <Section>
      <Signature>
        <Declaration name="Window" type="function" modifiers="public static" Obsolete="" />
        <ParamElement name="id" type="int" />
        <ParamElement name="clientRect" type="Rect" hasLink="true" />
        <ParamElement name="func" type="GUI.WindowFunction" hasLink="true" />
        <ParamElement name="text" type="string" />
        <ReturnType hasLink="true">Rect</ReturnType>
      </Signature>
      <Signature>
        <Declaration name="Window" type="function" modifiers="public static" Obsolete="" />
        <ParamElement name="id" type="int" />
        <ParamElement name="clientRect" type="Rect" hasLink="true" />
        <ParamElement name="func" type="GUI.WindowFunction" hasLink="true" />
        <ParamElement name="image" type="Texture" hasLink="true" />
        <ReturnType hasLink="true">Rect</ReturnType>
      </Signature>
      <Signature>
        <Declaration name="Window" type="function" modifiers="public static" Obsolete="" />
        <ParamElement name="id" type="int" />
        <ParamElement name="clientRect" type="Rect" hasLink="true" />
        <ParamElement name="func" type="GUI.WindowFunction" hasLink="true" />
        <ParamElement name="content" type="GUIContent" hasLink="true" />
        <ReturnType hasLink="true">Rect</ReturnType>
      </Signature>
      <Signature>
        <Declaration name="Window" type="function" modifiers="public static" Obsolete="" />
        <ParamElement name="id" type="int" />
        <ParamElement name="clientRect" type="Rect" hasLink="true" />
        <ParamElement name="func" type="GUI.WindowFunction" hasLink="true" />
        <ParamElement name="text" type="string" />
        <ParamElement name="style" type="GUIStyle" hasLink="true" />
        <ReturnType hasLink="true">Rect</ReturnType>
      </Signature>
      <Signature>
        <Declaration name="Window" type="function" modifiers="public static" Obsolete="" />
        <ParamElement name="id" type="int" />
        <ParamElement name="clientRect" type="Rect" hasLink="true" />
        <ParamElement name="func" type="GUI.WindowFunction" hasLink="true" />
        <ParamElement name="image" type="Texture" hasLink="true" />
        <ParamElement name="style" type="GUIStyle" hasLink="true" />
        <ReturnType hasLink="true">Rect</ReturnType>
      </Signature>
      <Signature>
        <Declaration name="Window" type="function" modifiers="public static" Obsolete="" />
        <ParamElement name="id" type="int" />
        <ParamElement name="clientRect" type="Rect" hasLink="true" />
        <ParamElement name="func" type="GUI.WindowFunction" hasLink="true" />
        <ParamElement name="title" type="GUIContent" hasLink="true" />
        <ParamElement name="style" type="GUIStyle" hasLink="true" />
        <ReturnType hasLink="true">Rect</ReturnType>
      </Signature>
      <Summary><![CDATA[创建一个弹出窗口。]]></Summary>
      <ParamWithDoc>
        <name>Style</name>
        <doc><![CDATA[用于窗口的可选样式。如果省略，则使用当前 ]]><link ref="GUISkin">GUISkin</link><![CDATA[ 的 ]]><varname>window</varname><![CDATA[ 样式。]]></doc>
      </ParamWithDoc>
      <ParamWithDoc>
        <name>id</name>
        <doc><![CDATA[窗口的 ID 编号（只要保证唯一，可以使用任意值）。]]></doc>
      </ParamWithDoc>
      <ParamWithDoc>
        <name>clientRect</name>
        <doc><![CDATA[表示窗口位置和大小的屏幕矩形。]]></doc>
      </ParamWithDoc>
      <ParamWithDoc>
        <name>func</name>
        <doc><![CDATA[显示窗口内容的脚本函数。]]></doc>
      </ParamWithDoc>
      <ParamWithDoc>
        <name>text</name>
        <doc><![CDATA[要在窗口内呈现的文本。]]></doc>
      </ParamWithDoc>
      <ParamWithDoc>
        <name>image</name>
        <doc><![CDATA[要在窗口内呈现的图像。]]></doc>
      </ParamWithDoc>
      <ParamWithDoc>
        <name>content</name>
        <doc><![CDATA[要在窗口内呈现的 GUIContent。]]></doc>
      </ParamWithDoc>
      <ParamWithDoc>
        <name>style</name>
        <doc><![CDATA[窗口的样式信息。]]></doc>
      </ParamWithDoc>
      <ParamWithDoc>
        <name>title</name>
        <doc><![CDATA[窗口标题栏中显示的文本。]]></doc>
      </ParamWithDoc>
      <ReturnWithDoc type="Rect">
        <doc><![CDATA[表示窗口位置和大小的屏幕矩形。]]></doc>
      </ReturnWithDoc>
      <Description><![CDATA[窗口浮动在普通 GUI 控件上方，可通过点击获得焦点，可以选择是否允许最终用户拖动。与其他控件不同，您需要为它们传递一个在窗口内呈现 GUI 控件的独立函数。]]><br /><br /><b>注意：</b><![CDATA[如果您使用 ]]><link ref="GUILayout">GUILayout</link><![CDATA[ 将组件放置在窗口内，则应使用 GUILayout.Window。此外，如果将 ]]><link ref="MonoBehaviour-useGUILayout">MonoBehaviour.useGUILayout</link><![CDATA[ 设置为 false，则调用 GUI.Window 没有任何作用，即使它不是 GUILayout 函数。]]></Description>
      <Example nocheck="false" convertexample="false">
        <JavaScript><![CDATA[no example available in JavaScript]]></JavaScript>
        <CSharp><![CDATA[
using UnityEngine;
using System.Collections;]]><br /><br /><![CDATA[public class ExampleClass : ]]><link ref="MonoBehaviour">MonoBehaviour</link><![CDATA[
{
    public ]]><link ref="Rect">Rect</link><![CDATA[ windowRect = new ]]><link ref="Rect">Rect</link><![CDATA[(20, 20, 120, 50);]]><br /><br /><![CDATA[    void OnGUI()
    {
        // Register the window. Notice the 3rd parameter
        windowRect = ]]><link ref="GUI.Window">GUI.Window</link><![CDATA[(0, windowRect, DoMyWindow, "My ]]><link ref="Tizen.Window">Window</link><![CDATA[");
    }]]><br /><br /><![CDATA[    // Make the contents of the window
    void DoMyWindow(int windowID)
    {
        if (]]><link ref="GUI.Button">GUI.Button</link><![CDATA[(new ]]><link ref="Rect">Rect</link><![CDATA[(10, 20, 100, 20), "Hello World"))
        {
            print("Got a click");
        }
    }
}
]]></CSharp>
      </Example>
      <Description><![CDATA[可以使用相同的函数创建多个窗口。只需确保]]><i>每个窗口都有自己的 ID</i><![CDATA[。示例：]]></Description>
      <Example nocheck="false" convertexample="false">
        <JavaScript><![CDATA[no example available in JavaScript]]></JavaScript>
        <CSharp><![CDATA[
using UnityEngine;
using System.Collections;]]><br /><br /><![CDATA[public class ExampleClass : ]]><link ref="MonoBehaviour">MonoBehaviour</link><![CDATA[
{
    public ]]><link ref="Rect">Rect</link><![CDATA[ windowRect0 = new ]]><link ref="Rect">Rect</link><![CDATA[(20, 20, 120, 50);
    public ]]><link ref="Rect">Rect</link><![CDATA[ windowRect1 = new ]]><link ref="Rect">Rect</link><![CDATA[(20, 100, 120, 50);]]><br /><br /><![CDATA[    void OnGUI()
    {
        // Register the window. We create two windows that use the same function
        // Notice that their IDs differ
        windowRect0 = ]]><link ref="GUI.Window">GUI.Window</link><![CDATA[(0, windowRect0, DoMyWindow, "My ]]><link ref="Tizen.Window">Window</link><![CDATA[");
        windowRect1 = ]]><link ref="GUI.Window">GUI.Window</link><![CDATA[(1, windowRect1, DoMyWindow, "My ]]><link ref="Tizen.Window">Window</link><![CDATA[");
    }]]><br /><br /><![CDATA[    // Make the contents of the window
    void DoMyWindow(int windowID)
    {
        if (]]><link ref="GUI.Button">GUI.Button</link><![CDATA[(new ]]><link ref="Rect">Rect</link><![CDATA[(10, 20, 100, 20), "Hello World"))
        {
            print("Got a click in window " + windowID);
        }]]><br /><br /><![CDATA[        // Make the windows be draggable.
        ]]><link ref="GUI.DragWindow">GUI.DragWindow</link><![CDATA[(new ]]><link ref="Rect">Rect</link><![CDATA[(0, 0, 10000, 10000));
    }
}
]]></CSharp>
      </Example>
      <Description><![CDATA[要停止显示窗口，只需在您的主 OnGUI 函数中停止调用 GUI.Window：]]></Description>
      <Example nocheck="false" convertexample="false">
        <JavaScript><![CDATA[no example available in JavaScript]]></JavaScript>
        <CSharp><![CDATA[
// boolean variable to decide whether to show the window or not.
// Change this from the in-game ]]><link ref="GUI">GUI</link><![CDATA[, scripting, the inspector or anywhere else to
// decide whether the window is visible]]><br /><br /><![CDATA[using UnityEngine;
using System.Collections;]]><br /><br /><![CDATA[public class ExampleClass : ]]><link ref="MonoBehaviour">MonoBehaviour</link><![CDATA[
{
    public bool doWindow0 = true;]]><br /><br /><![CDATA[    // Make the contents of the window.
    void DoWindow0(int windowID)
    {
        ]]><link ref="GUI.Button">GUI.Button</link><![CDATA[(new ]]><link ref="Rect">Rect</link><![CDATA[(10, 30, 80, 20), "Click Me!");
    }]]><br /><br /><![CDATA[    void OnGUI()
    {
        // Make a toggle button for hiding and showing the window
        doWindow0 = ]]><link ref="GUI.Toggle">GUI.Toggle</link><![CDATA[(new ]]><link ref="Rect">Rect</link><![CDATA[(10, 10, 100, 20), doWindow0, "]]><link ref="Tizen.Window">Window</link><![CDATA[ 0");]]><br /><br /><![CDATA[        // Make sure we only call ]]><link ref="GUI.Window">GUI.Window</link><![CDATA[ if doWindow0 is true.
        if (doWindow0)
        {
            ]]><link ref="GUI.Window">GUI.Window</link><![CDATA[(0, new ]]><link ref="Rect">Rect</link><![CDATA[(110, 10, 200, 60), DoWindow0, "Basic ]]><link ref="Tizen.Window">Window</link><![CDATA[");
        }
    }
}
]]></CSharp>
      </Example>
      <Description><![CDATA[要使窗口从自动 GUI 布局中获得其大小，请使用 GUILayout.Window。
]]><b>具有调用顺序的</b><![CDATA[
窗口需要从后往前绘制；位于其他窗口之上的窗口在绘制其下方窗口后绘制。这意味着您不能假定系统会以任何特定顺序调用您的 DoWindow 函数。
为使工作能够无缝进行，在您创建窗口（使用 ]]><b>Window</b><![CDATA[ 函数）时将存储以下值，并在调用您的 DoWindow 时检索这些值：
GUI.skin、GUI.enabled、GUI.color、GUI.backgroundColor、GUI.contentColor、GUI.matrix。]]></Description>
      <Example nocheck="false" convertexample="false">
        <JavaScript><![CDATA[no example available in JavaScript]]></JavaScript>
        <CSharp><![CDATA[
using UnityEngine;
using System.Collections;]]><br /><br /><![CDATA[public class ExampleClass : ]]><link ref="MonoBehaviour">MonoBehaviour</link><![CDATA[
{
    public ]]><link ref="Rect">Rect</link><![CDATA[ windowRect0 = new ]]><link ref="Rect">Rect</link><![CDATA[(20, 20, 120, 50);
    public ]]><link ref="Rect">Rect</link><![CDATA[ windowRect1 = new ]]><link ref="Rect">Rect</link><![CDATA[(20, 100, 120, 50);]]><br /><br /><![CDATA[    void OnGUI()
    {
        // Here we make 2 windows. We set the ]]><link ref="GUI-color">GUI.color</link><![CDATA[ value to something before each.
        ]]><link ref="GUI-color">GUI.color</link><![CDATA[ = ]]><link ref="Color-red">Color.red</link><![CDATA[;
        windowRect0 = ]]><link ref="GUI.Window">GUI.Window</link><![CDATA[(0, windowRect0, DoMyWindow, "Red ]]><link ref="Tizen.Window">Window</link><![CDATA[");]]><br /><br /><![CDATA[        ]]><link ref="GUI-color">GUI.color</link><![CDATA[ = ]]><link ref="Color-green">Color.green</link><![CDATA[;
        windowRect1 = ]]><link ref="GUI.Window">GUI.Window</link><![CDATA[(1, windowRect1, DoMyWindow, "Green ]]><link ref="Tizen.Window">Window</link><![CDATA[");
    }]]><br /><br /><![CDATA[    // Make the contents of the window.
    // The value of ]]><link ref="GUI-color">GUI.color</link><![CDATA[ is set to what it was when the window
    // was created in the code above.
    void DoMyWindow(int windowID)
    {
        if (]]><link ref="GUI.Button">GUI.Button</link><![CDATA[(new ]]><link ref="Rect">Rect</link><![CDATA[(10, 20, 100, 20), "Hello World"))
        {
            print("Got a click in window with color " + ]]><link ref="GUI-color">GUI.color</link><![CDATA[);
        }]]><br /><br /><![CDATA[        // Make the windows be draggable.
        ]]><link ref="GUI.DragWindow">GUI.DragWindow</link><![CDATA[(new ]]><link ref="Rect">Rect</link><![CDATA[(0, 0, 10000, 10000));
    }
}
]]></CSharp>
      </Example>
      <Description><![CDATA[注意，您可以使用 GUI.color 的 Alpha 分量来使窗口具有淡入淡出效果。]]><br /><br /><![CDATA[另请参阅：]]><link ref="GUI.DragWindow">DragWindow</link><![CDATA[、]]><link ref="GUI.BringWindowToFront">BringWindowToFront</link><![CDATA[、]]><link ref="GUI.BringWindowToBack">BringWindowToBack</link><![CDATA[。]]></Description>
    </Section>
  </Model>
</Root>
