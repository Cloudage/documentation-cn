<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Root LongForm="false">
  <vars>
    <docs_type>ScriptReference</docs_type>
    <lang>zh_CN</lang>
    <unity_version>2018.1</unity_version>
    <current_docs_url>https://docs.unity3d.com/zh_CN/2018.1/</current_docs_url>
    <docs_versions>
      <docs_version version="2019.1">2019.1</docs_version>
      <docs_version version="2018.3">2018.3</docs_version>
      <docs_version version="2018.2">2018.2</docs_version>
      <docs_version version="2018.1">2018.1</docs_version>
      <docs_version version="2017.4">2017.4</docs_version>
      <docs_version version="2017.3">2017.3</docs_version>
      <docs_version version="2017.2">2017.2</docs_version>
      <docs_version version="2017.1">2017.1</docs_version>
      <docs_version version="5.6">560</docs_version>
      <docs_version version="5.5">550</docs_version>
      <docs_version version="5.4">540</docs_version>
      <docs_version version="5.3">530</docs_version>
    </docs_versions>
    <langname>中文</langname>
    <unity_url>https://unity3d.com/</unity_url>
    <current_docs_version version="2018.1">2018.1</current_docs_version>
    <jquery_js_url>../StaticFiles/js/jquery.js</jquery_js_url>
    <jquery_sidebar_url>../StaticFiles/js/jquery.sidebar.min.js</jquery_sidebar_url>
    <custom_js_url>../StaticFiles/js/custom.js</custom_js_url>
    <core_js_url>../StaticFiles/js/core.js</core_js_url>
    <core_css_url>../StaticFiles/css/core.css</core_css_url>
    <custom_css_url>../StaticFiles/css/custom.css</custom_css_url>
    <toc_js_url>docdata/toc.js</toc_js_url>
    <index_js_url>docdata/index.js</index_js_url>
    <langs>
      <lang locale="en">English</lang>
      <lang locale="ja">日本語</lang>
      <lang locale="es">Español</lang>
      <lang locale="kr">한국어</lang>
    </langs>
    <translation>
      <unity_tech>Unity Technologies</unity_tech>
      <unity_url>https://unity3d.com/</unity_url>
      <manual>Manual</manual>
      <scripting_api>Scripting API</scripting_api>
      <learn>Learn</learn>
      <learn_url>https://unity3d.com/learn</learn_url>
      <tutorials>Tutorials</tutorials>
      <tutorials_url>https://unity3d.com/learn</tutorials_url>
      <knowledgebase>Knowledge Base</knowledgebase>
      <knowledgebase_url>https://support.unity3d.com/hc/en-us</knowledgebase_url>
      <live_training>Live Training</live_training>
      <premium_support>Premium Support</premium_support>
      <community>Community</community>
      <community_url>https://unity3d.com/community</community_url>
      <community_answers>Community Answers</community_answers>
      <community_answers_url>https://answers.unity3d.com</community_answers_url>
      <forums>Forums</forums>
      <forums_url>https://forum.unity3d.com</forums_url>
      <answers>Answers</answers>
      <feedback>Feedback</feedback>
      <issuetracker>Issue Tracker</issuetracker>
      <unity_manual>Unity Manual</unity_manual>
      <unity_dash_manual>Unity - Manual</unity_dash_manual>
      <full_table_of_contents>Full table of contents</full_table_of_contents>
      <copyright>Copyright © 2018 Unity Technologies</copyright>
      <unity>Unity</unity>
      <gallery>Gallery</gallery>
      <asset_store>Asset Store</asset_store>
      <assetstore_url>https://unity3d.com/asset-store</assetstore_url>
      <buy>Buy</buy>
      <buy_url>https://store.unity3d.com</buy_url>
      <download>Download</download>
      <download_url>https://unity3d.com/unity/download</download_url>
      <language>Language</language>
      <previous>Previous</previous>
      <next>Next</next>
      <switch_to_manual>Switch to Manual</switch_to_manual>
      <switch_to_scriptref>Switch to Scripting Reference</switch_to_scriptref>
      <docs_url>https://docs.unity3d.com</docs_url>
      <help_trans>Help translating this page</help_trans>
      <search_placeholder>Search manual...</search_placeholder>
      <search_scripting_placeholder>Search scripting...</search_scripting_placeholder>
      <script_language>Script language</script_language>
      <script_language_body>Select your preferred scripting language. All code snippets will be displayed in this language.</script_language_body>
      <history>History</history>
      <inherits_from>Inherits from:</inherits_from>
      <implements_interfaces>Implements interfaces:</implements_interfaces>
      <suggest_a_change>Suggest a change</suggest_a_change>
      <suggest_success>Success!</suggest_success>
      <suggest_success_body>Thank you for helping us improve the quality of Unity Documentation. Although we cannot accept all submissions, we do read each suggested change from our users and will make updates where applicable.</suggest_success_body>
      <suggest_clone>Close</suggest_clone>
      <suggest_failed>Sumbission failed</suggest_failed>
      <suggest_failed_body>For some reason your suggested change could not be submitted. Please &lt;a&gt;try again&lt;/a&gt; in a few minutes. And thank you for taking the time to help us improve the quality of Unity Documentation.</suggest_failed_body>
      <suggest_name>Your name</suggest_name>
      <suggest_email>Your email</suggest_email>
      <suggest_body>Suggestion</suggest_body>
      <suggest_submit>Submit suggestion</suggest_submit>
      <suggest_cancel>Cancel</suggest_cancel>
      <parameters>Parameters</parameters>
      <returns>Returns</returns>
      <description>Description</description>
      <static_variables>Static Variables</static_variables>
      <variables>Variables</variables>
      <constructors>Constructors</constructors>
      <public_functions>Public Functions</public_functions>
      <protected_functions>Protected Functions</protected_functions>
      <static_functions>Static Functions</static_functions>
      <operators>Operators</operators>
      <messages>Messages</messages>
      <delegates>Delegates</delegates>
      <events>Events</events>
      <inherited_members>Inherited members</inherited_members>
      <intro>欢迎使用 Unity Scripting Reference（脚本引用）！</intro>
      <intro_body_1>文档的这部分包含 Unity 提供的脚本 API 的详细信息。要使用这些信息，您应该了解 Unity 中脚本编写的基本理论和实践。我们使用手册的&lt;a href="../Manual/ScriptingSection.html"&gt; Scripting（脚本）部分&lt;/a&gt;对此进行了解释。</intro_body_1>
      <intro_body_2>脚本引用文档是根据脚本可用的类建立的，同时会描述这些类的方法、属性以及任何与它们的用法相关的信息。</intro_body_2>
      <intro_body_3>这些页面配有大量的示例代码，您可以将这些示例代码用于任何目的，而无需说明源自 Unity。此外，您可以使用每个页面顶部的菜单以 &lt;b&gt;C#&lt;/b&gt; 或 &lt;b&gt;JavaScript&lt;/b&gt; 查看示例代码。请注意，无论使用哪种编程语言，API 都是相同的，所以编程语言的选择完全取决于您的喜好。</intro_body_3>
      <intro_body_4>API 按其所属的 namespace 进行分组，可以从左侧的侧栏中选择。对于大多数用户，&lt;b&gt;UnityEngine&lt;/b&gt; 部分将是主要的调用端口。</intro_body_4>
      <classes>Classes</classes>
      <enumerations>Enumerations</enumerations>
      <attributes>Attributes</attributes>
      <api_histroy>API History</api_histroy>
      <api_histroy_body>Overview of additions to (and removals from) Unity's scripting API in each version.</api_histroy_body>
      <api_histroy_name>Name</api_histroy_name>
      <api_histroy_type>Type</api_histroy_type>
      <api_histroy_namespace>Namespace</api_histroy_namespace>
      <api_histroy_status>Status</api_histroy_status>
      <api_histroy_version>Version</api_histroy_version>
      <api_histroy_added>added</api_histroy_added>
      <api_histroy_obsolete>obsolete</api_histroy_obsolete>
      <api_histroy_removed>removed</api_histroy_removed>
      <known_issues>
        <p>这里描述的内容与实际不符？它可能是<b>已知问题</b>。请在 Issue Tracker（<a href="https://issuetracker.unity3d.com">issuetracker.unity3d.com</a>）中查看。</p>
      </known_issues>
      <rate_content>这个页面中的信息对您有帮助吗？请为它打分：</rate_content>
      <rate_thanks>Thanks for rating this page!</rate_thanks>
      <report_problem>报告此页面中的问题</report_problem>
      <problem_type>What kind of problem would you like to report?</problem_type>
      <problem_needcode>This page needs code samples</problem_needcode>
      <problem_code>Code samples do not work</problem_code>
      <problem_missing>Information is missing</problem_missing>
      <problem_incorrect>Information is incorrect</problem_incorrect>
      <problem_unclear>Information is unclear or confusing</problem_unclear>
      <problem_language>There is a spelling/grammar error on this page</problem_language>
      <problem_other>Something else</problem_other>
      <problem_thanks>Thanks for letting us know! This page has been marked for review based on your feedback.</problem_thanks>
      <problem_more_info>If you have time, you can provide more information to help us fix the problem faster.</problem_more_info>
      <problem_more_info_link>Provide more information</problem_more_info_link>
      <problem_needcode_form_description>You've told us this page needs code samples. If you'd like to help us further, you could provide a code sample, or tell us about what kind of code sample you'd like to see:</problem_needcode_form_description>
      <problem_code_form_description>You've told us there are code samples on this page which don't work. If you know how to fix it, or have something better we could use instead, please let us know:</problem_code_form_description>
      <problem_missing_form_description>You've told us there is information missing from this page. Please tell us more about what's missing:</problem_missing_form_description>
      <problem_incorrect_form_description>You've told us there is incorrect information on this page. If you know what we should change to make it correct, please tell us:</problem_incorrect_form_description>
      <problem_unclear_form_description>You've told us this page has unclear or confusing information. Please tell us more about what you found unclear or confusing, or let us know how we could make it clearer:</problem_unclear_form_description>
      <problem_language_form_description>You've told us there is a spelling or grammar error on this page. Please tell us what's wrong:</problem_language_form_description>
      <problem_other_form_description>You've told us this page has a problem. Please tell us more about what's wrong:</problem_other_form_description>
      <problem_more_info_thanks>Thanks for helping to make the Unity documentation better!</problem_more_info_thanks>
      <leave_feedback>Leave feedback</leave_feedback>
    </translation>
  </vars>
  <Model isComponent="true" status="obsolete" obsoleteText="">
    <ParentClass>ParticleSystemRenderer</ParentClass>
    <Section>
      <Signature>
        <Declaration name="EnableVertexStreams" type="function" modifiers="public" Obsolete="Obsolete " />
        <ParamElement name="streams" type="ParticleSystemVertexStreams" hasLink="true" />
        <ReturnType>void</ReturnType>
      </Signature>
      <Summary><![CDATA[在粒子系统渲染器上启用一组顶点着色器流。]]></Summary>
      <ParamWithDoc>
        <name>streams</name>
        <doc><![CDATA[要启用的流。]]></doc>
      </ParamWithDoc>
      <Description><![CDATA[另请参阅：]]><![CDATA[ParticleSystemRenderer.DisableVertexStreams]]><![CDATA[、]]><link ref="ParticleSystem.SetCustomParticleData">ParticleSystem.SetCustomParticleData</link><![CDATA[。]]></Description>
      <Example nocheck="false" convertexample="true">
        <JavaScript><![CDATA[no example available in JavaScript]]></JavaScript>
        <CSharp><![CDATA[using UnityEngine;
using ]]><link ref="UnityEditor">UnityEditor</link><![CDATA[;
using System.Collections.Generic;]]><br /><br /><![CDATA[public class ExampleClass : ]]><link ref="MonoBehaviour">MonoBehaviour</link><![CDATA[ {]]><br /><br /><![CDATA[    private ]]><link ref="ParticleSystem">ParticleSystem</link><![CDATA[ ps;
    private ]]><link ref="ParticleSystemRenderer">ParticleSystemRenderer</link><![CDATA[ psr;
    private List<]]><link ref="Vector4">Vector4</link><![CDATA[> customData = new List<]]><link ref="Vector4">Vector4</link><![CDATA[>();
    public float minDist = 30.0f;]]><br /><br /><![CDATA[    void Start() {]]><br /><br /><![CDATA[        ps = GetComponent<]]><link ref="ParticleSystem">ParticleSystem</link><![CDATA[>();
        psr = GetComponent<]]><link ref="ParticleSystemRenderer">ParticleSystemRenderer</link><![CDATA[>();]]><br /><br /><![CDATA[        // emit in a sphere with no speed
        var main = ps.main;
        main.startSpeedMultiplier = 0.0f;
        main.simulationSpace = ]]><link ref="ParticleSystemSimulationSpace.World">ParticleSystemSimulationSpace.World</link><![CDATA[; // so our particle positions don't require any extra transformation, to compare with the mouse position
        var emission = ps.emission;
        emission.rateOverTimeMultiplier = 200.0f;
        var shape = ps.shape;
        shape.shapeType = ]]><link ref="ParticleSystemShapeType.Sphere">ParticleSystemShapeType.Sphere</link><![CDATA[;
        shape.radius = 4.0f;
        psr.sortMode = ]]><link ref="ParticleSystemSortMode.YoungestInFront">ParticleSystemSortMode.YoungestInFront</link><![CDATA[;]]><br /><br /><![CDATA[        // send custom data to the shader
        psr.EnableVertexStreams(ParticleSystemVertexStreams.Custom1);
    }]]><br /><br /><![CDATA[    void ]]><link ref="Experimental.PlayerLoop.Update">Update</link><![CDATA[() {]]><br /><br /><![CDATA[        ]]><link ref="Camera">Camera</link><![CDATA[ mainCam = ]]><link ref="Camera-main">Camera.main</link><![CDATA[;]]><br /><br /><![CDATA[        ps.GetCustomParticleData(customData, ]]><link ref="ParticleSystemCustomData.Custom1">ParticleSystemCustomData.Custom1</link><![CDATA[);]]><br /><br /><![CDATA[        int particleCount = ps.particleCount;
        ]]><link ref="ParticleSystem.Particle">ParticleSystem.Particle</link><![CDATA[[] particles = new ]]><link ref="ParticleSystem.Particle">ParticleSystem.Particle</link><![CDATA[[particleCount];
        ps.GetParticles(particles);]]><br /><br /><![CDATA[        for (int i = 0; i < particles.Length; i++)
        {
            ]]><link ref="Vector3">Vector3</link><![CDATA[ sPos = mainCam.WorldToScreenPoint(particles[i].position + ps.transform.position);]]><br /><br /><![CDATA[            // set custom data to 1, if close enough to the mouse
            if (]]><link ref="Vector2.Distance">Vector2.Distance</link><![CDATA[(sPos, ]]><link ref="Input-mousePosition">Input.mousePosition</link><![CDATA[) < minDist)
            {
                customData[i] = new ]]><link ref="Vector4">Vector4</link><![CDATA[(1, 0, 0, 0);
            }
            // otherwise, fade the custom data back to 0
            else
            {
                float particleLife = particles[i].remainingLifetime / ps.main.startLifetimeMultiplier;]]><br /><br /><![CDATA[                if (customData[i].x > 0)
                {
                    float x = customData[i].x;
                    x = ]]><link ref="Mathf.Max">Mathf.Max</link><![CDATA[(x - ]]><link ref="Time-deltaTime">Time.deltaTime</link><![CDATA[, 0.0f);
                    customData[i] = new ]]><link ref="Vector4">Vector4</link><![CDATA[(x, 0, 0, 0);
                }
            }
        }]]><br /><br /><![CDATA[        ps.SetCustomParticleData(customData, ]]><link ref="ParticleSystemCustomData.Custom1">ParticleSystemCustomData.Custom1</link><![CDATA[);
    }]]><br /><br /><![CDATA[    void OnGUI() {]]><br /><br /><![CDATA[        minDist = ]]><link ref="GUI.HorizontalSlider">GUI.HorizontalSlider</link><![CDATA[(new ]]><link ref="Rect">Rect</link><![CDATA[(25, 40, 100, 30), minDist, 0.0f, 100.0f);
    }
}
]]></CSharp>
      </Example>
      <Description><![CDATA[下面是一个自定义着色器示例，可以与上面的脚本配合使用：]]></Description>
      <Example nocheck="true" convertexample="false">
        <JavaScript>
          <link ref="Shader">Shader</link><![CDATA[ "Particles/CustomVertexStream" {
Properties {
    _TintColor ("Tint ]]><link ref="Color">Color</link><![CDATA[", ]]><link ref="Color">Color</link><![CDATA[) = (0.5,0.5,0.5,0.5)
    _MainTex ("]]><link ref="ParticleSystem.Particle">Particle</link><![CDATA[ ]]><link ref="Texture">Texture</link><![CDATA[", 2D) = "white" {}
    _OffsetValue("Offset Value", ]]><link ref="SocialPlatforms.Range">Range</link><![CDATA[(0,1)) = 0.4
}]]><br /><br /><![CDATA[Category {
    Tags { "Queue"="Transparent" "IgnoreProjector"="True" "RenderType"="Transparent" }
    Blend SrcAlpha OneMinusSrcAlpha
    ColorMask RGB
    Cull Off Lighting Off ZWrite Off]]><br /><br /><![CDATA[    SubShader {
        ]]><link ref="ShaderData.Pass">Pass</link><![CDATA[ {]]><br /><br /><![CDATA[            CGPROGRAM
            #pragma vertex vert
            #pragma fragment frag
            #pragma multi_compile_particles
            #pragma multi_compile_fog]]><br /><br /><![CDATA[            #include "UnityCG.cginc"]]><br /><br /><![CDATA[            sampler2D _MainTex;
            fixed4 _TintColor;
            float _OffsetValue;]]><br /><br /><![CDATA[            struct appdata_t {
                float4 vertex : POSITION;
                float3 normal : NORMAL;
                fixed4 color : COLOR;
                float2 texcoord : TEXCOORD0;
                float4 customData : TEXCOORD1;
            };]]><br /><br /><![CDATA[            struct v2f {
                float4 vertex : SV_POSITION;
                fixed4 color : COLOR;
                float2 texcoord : TEXCOORD0;
                float4 customData : TEXCOORD1;
                UNITY_FOG_COORDS(2)
            };]]><br /><br /><![CDATA[            float4 _MainTex_ST;]]><br /><br /><![CDATA[            v2f vert (appdata_t v)
            {
                v.vertex.y = lerp(v.vertex.y, v.vertex.y + _OffsetValue, v.customData.x);]]><br /><br /><![CDATA[                v2f o;
                o.vertex = UnityObjectToClipPos(v.vertex);]]><br /><br /><![CDATA[                float4 offsetX = float4(-1, 1, 1, -1);
                float4 offsetY = float4(1, 1, -1, -1);]]><br /><br /><![CDATA[                o.color = v.color;
                o.texcoord = TRANSFORM_TEX(v.texcoord,_MainTex);
                o.customData = v.customData;
                UNITY_TRANSFER_FOG(o,o.vertex);]]><br /><br /><![CDATA[                return o;
            }]]><br /><br /><![CDATA[            fixed4 frag (v2f i) : SV_Target
            {
                fixed4 col = 2.0f * i.color * _TintColor * tex2D(_MainTex, i.texcoord);
                fixed4 col2 = fixed4(i.customData.x, i.customData.y, i.customData.z, col.a);
                fixed4 final = lerp(col, col*col2, i.customData.x);]]><br /><br /><![CDATA[                UNITY_APPLY_FOG(i.fogCoord, final);
                return final;
            }
            ENDCG
        }
    }
}
}
]]></JavaScript>
        <CSharp>
          <link ref="Shader">Shader</link><![CDATA[ "Particles/CustomVertexStream" {
Properties {
    _TintColor ("Tint ]]><link ref="Color">Color</link><![CDATA[", ]]><link ref="Color">Color</link><![CDATA[) = (0.5,0.5,0.5,0.5)
    _MainTex ("]]><link ref="ParticleSystem.Particle">Particle</link><![CDATA[ ]]><link ref="Texture">Texture</link><![CDATA[", 2D) = "white" {}
    _OffsetValue("Offset Value", ]]><link ref="SocialPlatforms.Range">Range</link><![CDATA[(0,1)) = 0.4
}]]><br /><br /><![CDATA[Category {
    Tags { "Queue"="Transparent" "IgnoreProjector"="True" "RenderType"="Transparent" }
    Blend SrcAlpha OneMinusSrcAlpha
    ColorMask RGB
    Cull Off Lighting Off ZWrite Off]]><br /><br /><![CDATA[    SubShader {
        ]]><link ref="ShaderData.Pass">Pass</link><![CDATA[ {]]><br /><br /><![CDATA[            CGPROGRAM
            #pragma vertex vert
            #pragma fragment frag
            #pragma multi_compile_particles
            #pragma multi_compile_fog]]><br /><br /><![CDATA[            #include "UnityCG.cginc"]]><br /><br /><![CDATA[            sampler2D _MainTex;
            fixed4 _TintColor;
            float _OffsetValue;]]><br /><br /><![CDATA[            struct appdata_t {
                float4 vertex : POSITION;
                float3 normal : NORMAL;
                fixed4 color : COLOR;
                float2 texcoord : TEXCOORD0;
                float4 customData : TEXCOORD1;
            };]]><br /><br /><![CDATA[            struct v2f {
                float4 vertex : SV_POSITION;
                fixed4 color : COLOR;
                float2 texcoord : TEXCOORD0;
                float4 customData : TEXCOORD1;
                UNITY_FOG_COORDS(2)
            };]]><br /><br /><![CDATA[            float4 _MainTex_ST;]]><br /><br /><![CDATA[            v2f vert (appdata_t v)
            {
                v.vertex.y = lerp(v.vertex.y, v.vertex.y + _OffsetValue, v.customData.x);]]><br /><br /><![CDATA[                v2f o;
                o.vertex = UnityObjectToClipPos(v.vertex);]]><br /><br /><![CDATA[                float4 offsetX = float4(-1, 1, 1, -1);
                float4 offsetY = float4(1, 1, -1, -1);]]><br /><br /><![CDATA[                o.color = v.color;
                o.texcoord = TRANSFORM_TEX(v.texcoord,_MainTex);
                o.customData = v.customData;
                UNITY_TRANSFER_FOG(o,o.vertex);]]><br /><br /><![CDATA[                return o;
            }]]><br /><br /><![CDATA[            fixed4 frag (v2f i) : SV_Target
            {
                fixed4 col = 2.0f * i.color * _TintColor * tex2D(_MainTex, i.texcoord);
                fixed4 col2 = fixed4(i.customData.x, i.customData.y, i.customData.z, col.a);
                fixed4 final = lerp(col, col*col2, i.customData.x);]]><br /><br /><![CDATA[                UNITY_APPLY_FOG(i.fogCoord, final);
                return final;
            }
            ENDCG
        }
    }
}
}
]]></CSharp>
      </Example>
    </Section>
  </Model>
</Root>
