<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Root LongForm="false">
  <vars>
    <docs_type>ScriptReference</docs_type>
    <lang>zh_CN</lang>
    <unity_version>2018.1</unity_version>
    <current_docs_url>https://docs.unity3d.com/zh_CN/2018.1/</current_docs_url>
    <docs_versions>
      <docs_version version="2019.1">2019.1</docs_version>
      <docs_version version="2018.3">2018.3</docs_version>
      <docs_version version="2018.2">2018.2</docs_version>
      <docs_version version="2018.1">2018.1</docs_version>
      <docs_version version="2017.4">2017.4</docs_version>
      <docs_version version="2017.3">2017.3</docs_version>
      <docs_version version="2017.2">2017.2</docs_version>
      <docs_version version="2017.1">2017.1</docs_version>
      <docs_version version="5.6">560</docs_version>
      <docs_version version="5.5">550</docs_version>
      <docs_version version="5.4">540</docs_version>
      <docs_version version="5.3">530</docs_version>
    </docs_versions>
    <langname>中文</langname>
    <unity_url>https://unity3d.com/</unity_url>
    <current_docs_version version="2018.1">2018.1</current_docs_version>
    <jquery_js_url>../StaticFiles/js/jquery.js</jquery_js_url>
    <jquery_sidebar_url>../StaticFiles/js/jquery.sidebar.min.js</jquery_sidebar_url>
    <custom_js_url>../StaticFiles/js/custom.js</custom_js_url>
    <core_js_url>../StaticFiles/js/core.js</core_js_url>
    <core_css_url>../StaticFiles/css/core.css</core_css_url>
    <custom_css_url>../StaticFiles/css/custom.css</custom_css_url>
    <toc_js_url>docdata/toc.js</toc_js_url>
    <index_js_url>docdata/index.js</index_js_url>
    <langs>
      <lang locale="en">English</lang>
      <lang locale="ja">日本語</lang>
      <lang locale="es">Español</lang>
      <lang locale="kr">한국어</lang>
    </langs>
    <translation>
      <unity_tech>Unity Technologies</unity_tech>
      <unity_url>https://unity3d.com/</unity_url>
      <manual>Manual</manual>
      <scripting_api>Scripting API</scripting_api>
      <learn>Learn</learn>
      <learn_url>https://unity3d.com/learn</learn_url>
      <tutorials>Tutorials</tutorials>
      <tutorials_url>https://unity3d.com/learn</tutorials_url>
      <knowledgebase>Knowledge Base</knowledgebase>
      <knowledgebase_url>https://support.unity3d.com/hc/en-us</knowledgebase_url>
      <live_training>Live Training</live_training>
      <premium_support>Premium Support</premium_support>
      <community>Community</community>
      <community_url>https://unity3d.com/community</community_url>
      <community_answers>Community Answers</community_answers>
      <community_answers_url>https://answers.unity3d.com</community_answers_url>
      <forums>Forums</forums>
      <forums_url>https://forum.unity3d.com</forums_url>
      <answers>Answers</answers>
      <feedback>Feedback</feedback>
      <issuetracker>Issue Tracker</issuetracker>
      <unity_manual>Unity Manual</unity_manual>
      <unity_dash_manual>Unity - Manual</unity_dash_manual>
      <full_table_of_contents>Full table of contents</full_table_of_contents>
      <copyright>Copyright © 2018 Unity Technologies</copyright>
      <unity>Unity</unity>
      <gallery>Gallery</gallery>
      <asset_store>Asset Store</asset_store>
      <assetstore_url>https://unity3d.com/asset-store</assetstore_url>
      <buy>Buy</buy>
      <buy_url>https://store.unity3d.com</buy_url>
      <download>Download</download>
      <download_url>https://unity3d.com/unity/download</download_url>
      <language>Language</language>
      <previous>Previous</previous>
      <next>Next</next>
      <switch_to_manual>Switch to Manual</switch_to_manual>
      <switch_to_scriptref>Switch to Scripting Reference</switch_to_scriptref>
      <docs_url>https://docs.unity3d.com</docs_url>
      <help_trans>Help translating this page</help_trans>
      <search_placeholder>Search manual...</search_placeholder>
      <search_scripting_placeholder>Search scripting...</search_scripting_placeholder>
      <script_language>Script language</script_language>
      <script_language_body>Select your preferred scripting language. All code snippets will be displayed in this language.</script_language_body>
      <history>History</history>
      <inherits_from>Inherits from:</inherits_from>
      <implements_interfaces>Implements interfaces:</implements_interfaces>
      <suggest_a_change>Suggest a change</suggest_a_change>
      <suggest_success>Success!</suggest_success>
      <suggest_success_body>Thank you for helping us improve the quality of Unity Documentation. Although we cannot accept all submissions, we do read each suggested change from our users and will make updates where applicable.</suggest_success_body>
      <suggest_clone>Close</suggest_clone>
      <suggest_failed>Sumbission failed</suggest_failed>
      <suggest_failed_body>For some reason your suggested change could not be submitted. Please &lt;a&gt;try again&lt;/a&gt; in a few minutes. And thank you for taking the time to help us improve the quality of Unity Documentation.</suggest_failed_body>
      <suggest_name>Your name</suggest_name>
      <suggest_email>Your email</suggest_email>
      <suggest_body>Suggestion</suggest_body>
      <suggest_submit>Submit suggestion</suggest_submit>
      <suggest_cancel>Cancel</suggest_cancel>
      <parameters>Parameters</parameters>
      <returns>Returns</returns>
      <description>Description</description>
      <static_variables>Static Variables</static_variables>
      <variables>Variables</variables>
      <constructors>Constructors</constructors>
      <public_functions>Public Functions</public_functions>
      <protected_functions>Protected Functions</protected_functions>
      <static_functions>Static Functions</static_functions>
      <operators>Operators</operators>
      <messages>Messages</messages>
      <delegates>Delegates</delegates>
      <events>Events</events>
      <inherited_members>Inherited members</inherited_members>
      <intro>欢迎使用 Unity Scripting Reference（脚本引用）！</intro>
      <intro_body_1>文档的这部分包含 Unity 提供的脚本 API 的详细信息。要使用这些信息，您应该了解 Unity 中脚本编写的基本理论和实践。我们使用手册的&lt;a href="../Manual/ScriptingSection.html"&gt; Scripting（脚本）部分&lt;/a&gt;对此进行了解释。</intro_body_1>
      <intro_body_2>脚本引用文档是根据脚本可用的类建立的，同时会描述这些类的方法、属性以及任何与它们的用法相关的信息。</intro_body_2>
      <intro_body_3>这些页面配有大量的示例代码，您可以将这些示例代码用于任何目的，而无需说明源自 Unity。此外，您可以使用每个页面顶部的菜单以 &lt;b&gt;C#&lt;/b&gt; 或 &lt;b&gt;JavaScript&lt;/b&gt; 查看示例代码。请注意，无论使用哪种编程语言，API 都是相同的，所以编程语言的选择完全取决于您的喜好。</intro_body_3>
      <intro_body_4>API 按其所属的 namespace 进行分组，可以从左侧的侧栏中选择。对于大多数用户，&lt;b&gt;UnityEngine&lt;/b&gt; 部分将是主要的调用端口。</intro_body_4>
      <classes>Classes</classes>
      <enumerations>Enumerations</enumerations>
      <attributes>Attributes</attributes>
      <api_histroy>API History</api_histroy>
      <api_histroy_body>Overview of additions to (and removals from) Unity's scripting API in each version.</api_histroy_body>
      <api_histroy_name>Name</api_histroy_name>
      <api_histroy_type>Type</api_histroy_type>
      <api_histroy_namespace>Namespace</api_histroy_namespace>
      <api_histroy_status>Status</api_histroy_status>
      <api_histroy_version>Version</api_histroy_version>
      <api_histroy_added>added</api_histroy_added>
      <api_histroy_obsolete>obsolete</api_histroy_obsolete>
      <api_histroy_removed>removed</api_histroy_removed>
      <known_issues>
        <p>这里描述的内容与实际不符？它可能是<b>已知问题</b>。请在 Issue Tracker（<a href="https://issuetracker.unity3d.com">issuetracker.unity3d.com</a>）中查看。</p>
      </known_issues>
      <rate_content>这个页面中的信息对您有帮助吗？请为它打分：</rate_content>
      <rate_thanks>Thanks for rating this page!</rate_thanks>
      <report_problem>报告此页面中的问题</report_problem>
      <problem_type>What kind of problem would you like to report?</problem_type>
      <problem_needcode>This page needs code samples</problem_needcode>
      <problem_code>Code samples do not work</problem_code>
      <problem_missing>Information is missing</problem_missing>
      <problem_incorrect>Information is incorrect</problem_incorrect>
      <problem_unclear>Information is unclear or confusing</problem_unclear>
      <problem_language>There is a spelling/grammar error on this page</problem_language>
      <problem_other>Something else</problem_other>
      <problem_thanks>Thanks for letting us know! This page has been marked for review based on your feedback.</problem_thanks>
      <problem_more_info>If you have time, you can provide more information to help us fix the problem faster.</problem_more_info>
      <problem_more_info_link>Provide more information</problem_more_info_link>
      <problem_needcode_form_description>You've told us this page needs code samples. If you'd like to help us further, you could provide a code sample, or tell us about what kind of code sample you'd like to see:</problem_needcode_form_description>
      <problem_code_form_description>You've told us there are code samples on this page which don't work. If you know how to fix it, or have something better we could use instead, please let us know:</problem_code_form_description>
      <problem_missing_form_description>You've told us there is information missing from this page. Please tell us more about what's missing:</problem_missing_form_description>
      <problem_incorrect_form_description>You've told us there is incorrect information on this page. If you know what we should change to make it correct, please tell us:</problem_incorrect_form_description>
      <problem_unclear_form_description>You've told us this page has unclear or confusing information. Please tell us more about what you found unclear or confusing, or let us know how we could make it clearer:</problem_unclear_form_description>
      <problem_language_form_description>You've told us there is a spelling or grammar error on this page. Please tell us what's wrong:</problem_language_form_description>
      <problem_other_form_description>You've told us this page has a problem. Please tell us more about what's wrong:</problem_other_form_description>
      <problem_more_info_thanks>Thanks for helping to make the Unity documentation better!</problem_more_info_thanks>
      <leave_feedback>Leave feedback</leave_feedback>
    </translation>
  </vars>
  <Model Namespace="UnityEngine" Assembly="UnityEngine.CoreModule">
    <StaticVars>
      <member id="GL-invertCulling">
        <name>invertCulling</name>
        <summary><![CDATA[选择是 (true) 否 (false) 反转背面剔除。]]></summary>
      </member>
      <member id="GL.LINE_STRIP">
        <name>LINE_STRIP</name>
        <summary>
          <link ref="GL.Begin">Begin</link><![CDATA[ 的模式：绘制线条带。]]></summary>
      </member>
      <member id="GL.LINES">
        <name>LINES</name>
        <summary>
          <link ref="GL.Begin">Begin</link><![CDATA[ 的模式：绘制线条。]]></summary>
      </member>
      <member id="GL-modelview">
        <name>modelview</name>
        <summary><![CDATA[当前 modelview 矩阵。]]></summary>
      </member>
      <member id="GL.QUADS">
        <name>QUADS</name>
        <summary>
          <link ref="GL.Begin">Begin</link><![CDATA[ 的模式：绘制四边形。]]></summary>
      </member>
      <member id="GL-sRGBWrite">
        <name>sRGBWrite</name>
        <summary><![CDATA[控制是否在进行渲染时执行从线性到 sRGB 的颜色转换。]]></summary>
      </member>
      <member id="GL.TRIANGLE_STRIP">
        <name>TRIANGLE_STRIP</name>
        <summary>
          <link ref="GL.Begin">Begin</link><![CDATA[ 的模式：绘制三角形带。]]></summary>
      </member>
      <member id="GL.TRIANGLES">
        <name>TRIANGLES</name>
        <summary>
          <link ref="GL.Begin">Begin</link><![CDATA[ 的模式：绘制三角形。]]></summary>
      </member>
      <member id="GL-wireframe">
        <name>wireframe</name>
        <summary><![CDATA[是否应在线框中进行渲染？]]></summary>
      </member>
    </StaticVars>
    <Vars />
    <ProtVars />
    <StaticProtVars />
    <Constructors />
    <MemberFunctions />
    <ProtectedFunctions />
    <StaticFunctions>
      <member id="GL.Begin">
        <name>Begin</name>
        <summary><![CDATA[开始绘制 3D 图元。]]></summary>
      </member>
      <member id="GL.Clear">
        <name>Clear</name>
        <summary><![CDATA[清除当前渲染缓冲区。]]></summary>
      </member>
      <member id="GL.ClearWithSkybox">
        <name>ClearWithSkybox</name>
        <summary><![CDATA[使用摄像机的天空盒清除当前渲染缓冲区。]]></summary>
      </member>
      <member id="GL.Color">
        <name>Color</name>
        <summary><![CDATA[设置当前顶点颜色。]]></summary>
      </member>
      <member id="GL.End">
        <name>End</name>
        <summary><![CDATA[结束绘制 3D 图元。]]></summary>
      </member>
      <member id="GL.Flush">
        <name>Flush</name>
        <summary><![CDATA[将驱动程序命令缓冲区中排队等待的命令发送到 GPU。]]></summary>
      </member>
      <member id="GL.GetGPUProjectionMatrix">
        <name>GetGPUProjectionMatrix</name>
        <summary><![CDATA[从摄像机的投影矩阵计算 GPU 投影矩阵。]]></summary>
      </member>
      <member id="GL.InvalidateState">
        <name>InvalidateState</name>
        <summary><![CDATA[使内部缓存的渲染状态无效。]]></summary>
      </member>
      <member id="GL.IssuePluginEvent">
        <name>IssuePluginEvent</name>
        <summary><![CDATA[向本机代码插件发送用户定义的事件。]]></summary>
      </member>
      <member id="GL.LoadIdentity">
        <name>LoadIdentity</name>
        <summary><![CDATA[将标识矩阵加载到当前 modelview 矩阵。]]></summary>
      </member>
      <member id="GL.LoadOrtho">
        <name>LoadOrtho</name>
        <summary><![CDATA[Helper 函数，用于设置正交透视变换。]]></summary>
      </member>
      <member id="GL.LoadPixelMatrix">
        <name>LoadPixelMatrix</name>
        <summary><![CDATA[设置一个用于像素校正渲染的矩阵。]]></summary>
      </member>
      <member id="GL.LoadProjectionMatrix">
        <name>LoadProjectionMatrix</name>
        <summary><![CDATA[将任意矩阵加载到当前投影矩阵。]]></summary>
      </member>
      <member id="GL.MultiTexCoord">
        <name>MultiTexCoord</name>
        <summary><![CDATA[对实际纹理 ]]><varname>unit</varname><![CDATA[ 设置当前纹理坐标 (v.x,v.y,v.z)。]]></summary>
      </member>
      <member id="GL.MultiTexCoord2">
        <name>MultiTexCoord2</name>
        <summary><![CDATA[为实际纹理 ]]><varname>unit</varname><![CDATA[ 设置当前纹理坐标 (x,y)。]]></summary>
      </member>
      <member id="GL.MultiTexCoord3">
        <name>MultiTexCoord3</name>
        <summary><![CDATA[对实际纹理 ]]><varname>unit</varname><![CDATA[ 设置当前纹理坐标 (x,y,z)。]]></summary>
      </member>
      <member id="GL.MultMatrix">
        <name>MultMatrix</name>
        <summary><![CDATA[将当前 modelview 矩阵与指定的矩阵相乘。]]></summary>
      </member>
      <member id="GL.PopMatrix">
        <name>PopMatrix</name>
        <summary><![CDATA[从矩阵堆栈顶部恢复投影和 modelview 矩阵。]]></summary>
      </member>
      <member id="GL.PushMatrix">
        <name>PushMatrix</name>
        <summary><![CDATA[将投影和 modelview 矩阵保存到矩阵堆栈。]]></summary>
      </member>
      <member id="GL.RenderTargetBarrier">
        <name>RenderTargetBarrier</name>
        <summary><![CDATA[解析渲染目标，以便用于从该目标进行采样的后续运算。]]></summary>
      </member>
      <member id="GL.TexCoord">
        <name>TexCoord</name>
        <summary><![CDATA[为所有纹理单位均设置当前纹理坐标 (v.x,v.y,v.z)。]]></summary>
      </member>
      <member id="GL.TexCoord2">
        <name>TexCoord2</name>
        <summary><![CDATA[为所有纹理单位均设置当前纹理坐标 (x,y)。]]></summary>
      </member>
      <member id="GL.TexCoord3">
        <name>TexCoord3</name>
        <summary><![CDATA[为所有纹理单位均设置当前纹理坐标 (x,y,z)。]]></summary>
      </member>
      <member id="GL.Vertex">
        <name>Vertex</name>
        <summary><![CDATA[提交一个顶点。]]></summary>
      </member>
      <member id="GL.Vertex3">
        <name>Vertex3</name>
        <summary><![CDATA[提交一个顶点。]]></summary>
      </member>
      <member id="GL.Viewport">
        <name>Viewport</name>
        <summary><![CDATA[设置渲染视口。]]></summary>
      </member>
    </StaticFunctions>
    <Operators />
    <Messages />
    <Events />
    <Delegates />
    <Section>
      <Signature>
        <Declaration name="GL" type="class" namespace="UnityEngine" modifiers="public" Obsolete="" />
        <ReturnType />
      </Signature>
      <Summary><![CDATA[低级别图形库。]]></Summary>
      <Description><![CDATA[使用此类可操纵活动变换矩阵，
发出类似于 OpenGL 即时模式的渲染命令，以及执行其他低级别
图形任务。注意，在几乎所有情况下，使用 ]]><link ref="Graphics.DrawMesh">Graphics.DrawMesh</link><![CDATA[ 或 ]]><link ref="Rendering.CommandBuffer">CommandBuffer</link><![CDATA[
比使用即时模式绘制更加高效。]]><br /><br /><![CDATA[GL 即时绘制功能会立即使用任何“当前材质”设置（请参阅 ]]><link ref="Material.SetPass">Material.SetPass</link><![CDATA[）。
材质控制渲染方式（混合、纹理等），因此除非您在
使用 GL 绘制功能前显式将其设置为其他设置，否则此材质可能变成任何材质。
此外，如果您从内部 GL 绘制代码中调用其他任何绘制命令，它们可将
材质设置为其他材质，以便确保其也受到控制。]]><br /><br /><![CDATA[GL 绘制命令立即执行。这意味着如果您在 Update() 中调用它们，它们将在渲染
摄像机前加以执行（并且该摄像机很可能会清除屏幕，从而使 GL 绘制
不可见）。]]><br /><br /><![CDATA[调用 GL 绘制的常见位置最经常是在 ]]><link ref="Camera.OnPostRender">OnPostRender</link><![CDATA[() 中从附加到摄像机的脚本调用，
或者在图像效果函数 (]]><link ref="Camera.OnRenderImage">OnRenderImage</link><![CDATA[) 内调用。]]></Description>
      <Example nocheck="false" convertexample="true">
        <JavaScript><![CDATA[no example available in JavaScript]]></JavaScript>
        <CSharp><![CDATA[
using UnityEngine;]]><br /><br /><![CDATA[public class ExampleClass : ]]><link ref="MonoBehaviour">MonoBehaviour</link><![CDATA[
{
    // When added to an object, draws colored rays from the
    // transform position.
    public int lineCount = 100;
    public float radius = 3.0f;]]><br /><br /><![CDATA[    static ]]><link ref="Material">Material</link><![CDATA[ lineMaterial;
    static void CreateLineMaterial()
    {
        if (!lineMaterial)
        {
            // Unity has a built-in shader that is useful for drawing
            // simple colored things.
            ]]><link ref="Shader">Shader</link><![CDATA[ shader = ]]><link ref="Shader.Find">Shader.Find</link><![CDATA[("Hidden/Internal-Colored");
            lineMaterial = new ]]><link ref="Material">Material</link><![CDATA[(shader);
            lineMaterial.hideFlags = ]]><link ref="HideFlags.HideAndDontSave">HideFlags.HideAndDontSave</link><![CDATA[;
            // Turn on alpha blending
            lineMaterial.SetInt("_SrcBlend", (int)UnityEngine.Rendering.BlendMode.SrcAlpha);
            lineMaterial.SetInt("_DstBlend", (int)UnityEngine.Rendering.BlendMode.OneMinusSrcAlpha);
            // Turn backface culling off
            lineMaterial.SetInt("_Cull", (int)UnityEngine.Rendering.CullMode.Off);
            // Turn off depth writes
            lineMaterial.SetInt("_ZWrite", 0);
        }
    }]]><br /><br /><![CDATA[    // Will be called after all regular rendering is done
    public void OnRenderObject()
    {
        CreateLineMaterial();
        // Apply the line material
        lineMaterial.SetPass(0);]]><br /><br /><![CDATA[        ]]><link ref="GL.PushMatrix">GL.PushMatrix</link><![CDATA[();
        // Set transformation matrix for drawing to
        // match our transform
        ]]><link ref="GL.MultMatrix">GL.MultMatrix</link><![CDATA[(transform.localToWorldMatrix);]]><br /><br /><![CDATA[        // Draw lines
        ]]><link ref="GL.Begin">GL.Begin</link><![CDATA[(]]><link ref="GL.LINES">GL.LINES</link><![CDATA[);
        for (int i = 0; i < lineCount; ++i)
        {
            float a = i / (float)lineCount;
            float angle = a * ]]><link ref="Mathf.PI">Mathf.PI</link><![CDATA[ * 2;
            // Vertex colors change from red to green
            ]]><link ref="GL.Color">GL.Color</link><![CDATA[(new ]]><link ref="Color">Color</link><![CDATA[(a, 1 - a, 0, 0.8F));
            // One vertex at transform position
            ]]><link ref="GL.Vertex3">GL.Vertex3</link><![CDATA[(0, 0, 0);
            // Another vertex at edge of circle
            ]]><link ref="GL.Vertex3">GL.Vertex3</link><![CDATA[(]]><link ref="Mathf.Cos">Mathf.Cos</link><![CDATA[(angle) * radius, ]]><link ref="Mathf.Sin">Mathf.Sin</link><![CDATA[(angle) * radius, 0);
        }
        ]]><link ref="GL.End">GL.End</link><![CDATA[();
        ]]><link ref="GL.PopMatrix">GL.PopMatrix</link><![CDATA[();
    }
}
]]></CSharp>
      </Example>
      <Description>
        <b>注意：</b><![CDATA[当您需要绘制几个线条或三角形，并且不想处理网格时，几乎总是使用此类。
如果您想避免意外，则使用模式为：]]></Description>
      <Example nocheck="false" convertexample="true">
        <JavaScript><![CDATA[no example available in JavaScript]]></JavaScript>
        <CSharp><![CDATA[
using UnityEngine;
using System.Collections;]]><br /><br /><![CDATA[public class ExampleClass : ]]><link ref="MonoBehaviour">MonoBehaviour</link><![CDATA[
{
    void OnPostRender()
    {
        // Set your materials
        ]]><link ref="GL.PushMatrix">GL.PushMatrix</link><![CDATA[();
        // yourMaterial.SetPass( );
        // Draw your stuff
        ]]><link ref="GL.PopMatrix">GL.PopMatrix</link><![CDATA[();
    }
}
]]></CSharp>
      </Example>
      <Description><![CDATA[在“//绘制您的内容”的位置，您应在先前声明的一些材质上执行 SetPass()，这将用于绘制。
如果您没有调用 SetPass，基本上您将获得随机材质（无论之前使用了什么材质），这并不好。那么执行此调用。]]></Description>
    </Section>
    <InheritsFrom>GL</InheritsFrom>
  </Model>
</Root>
